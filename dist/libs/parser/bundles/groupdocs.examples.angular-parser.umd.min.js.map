{"version":3,"sources":["../../../../node_modules/tslib/tslib.es6.js","ng://@groupdocs.examples.angular/parser/lib/app-models.ts","ng://@groupdocs.examples.angular/parser/lib/parser.service.ts","ng://@groupdocs.examples.angular/parser/lib/template.service.ts","ng://@groupdocs.examples.angular/parser/lib/source-file.service.ts","ng://@groupdocs.examples.angular/parser/lib/placeholder.service.ts","ng://@groupdocs.examples.angular/parser/lib/document-page.service.ts","ng://@groupdocs.examples.angular/parser/lib/parser-app.component.ts","ng://@groupdocs.examples.angular/parser/lib/field.service.ts","ng://@groupdocs.examples.angular/parser/lib/field/field.component.ts","ng://@groupdocs.examples.angular/parser/lib/rename-modal/rename-modal.component.ts","ng://@groupdocs.examples.angular/parser/lib/surface/surface.component.ts","ng://@groupdocs.examples.angular/parser/lib/confirmation-modal/confirmation-modal.component.ts","ng://@groupdocs.examples.angular/parser/lib/utils.service.ts","ng://@groupdocs.examples.angular/parser/lib/table-viewer/table-viewer.component.ts","ng://@groupdocs.examples.angular/parser/lib/side-panel/side-panel.component.ts","ng://@groupdocs.examples.angular/parser/lib/placeholder/placeholder.component.ts","ng://@groupdocs.examples.angular/parser/lib/parser-config.ts","ng://@groupdocs.examples.angular/parser/lib/parser-config.service.ts","ng://@groupdocs.examples.angular/parser/lib/parser.module.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","TableValue","obj","this","rows","i","length","row","j","push","OperationState","_state","enabled","defineProperty","prototype","_prompt","prompt","_error","_result","error","result","execute","SourceFile","guid","password","_super","DocumentDescription","__","constructor","create","tslib_1.__extends","Point","x","y","Size","width","height","Template","_id","_name","_fields","_addFieldSubject","Subject","_removeFieldSubject","_modifiedSubject","_fieldChangedSubscriptions","Map","addedField","asObservable","removedField","modified","NotSaved","id","name","notifyModified","addField","field","_this","set","changed","subscribe","next","removeField","index","indexOf","get","unsubscribe","delete","splice","removeFieldByName","fieldName","getFieldByName","toLocaleLowerCase","createField","baseName","TemplateField","getNextFieldName","size","pageNumber","position","name_1","toString","TemplateFieldTypes","FIXED","TABLE","_template","_fieldType","_changedSubject","_columns","addColumn","columnName","columnValue","column","TemplateFieldTableSeparator","getNextColumnName","removeColumn","getColumnByName","fieldType","_pageNumber","_position","_size","toJSON","columns","name_2","_value","value","ParserService","_http","_config","loadFiles","path","post","getParserApiEndpoint","Api","LOAD_FILE_TREE","httpOptionsJson","upload","file","url","rewrite","formData","FormData","append","String","UPLOAD_DOCUMENTS","loadDocumentDescription","sourceFile","subject","observer","response","complete","err","logToServer","console","LOAD_DOCUMENT_DESCRIPTION","pipe","timeout","parseByTemplate","template","PARSE","fields","getErrorMessage","status","title","errorMessage","JSON","stringify","localStorage","getItem","log","Injectable","args","providedIn","HttpClient","ConfigService","TemplateService","_templatePattern","_currentTemplateChangedSubject","_templateAddedSubject","_templateRemovedSubject","currentTemplateChanged","templateAddedSubject","templateRemovedSubject","_templates","loadTemplatesFromLocalStorage","createTemplate","_currentTemplate","selectTemplate","templateId","getTemplateById","setCurrentTemplate","getNextTemplateName","renameTemplate","exTemplate","getTemplateByName","Error","currentTemplate","saveTemplate","removeTemplate","onTemplateRemoved","serialize","deserialize","templateJson","loadTemplateFromJson","_currentTemplateModifiedSubscription","throttle","v","interval","t","onTemplateAdded","key","removeItem","startsWith","parse","templateName","getNextTemplateId","objField","saveTemplateToLocalStorage","setItem","isStored","SourceFileService","_sourceFileChangedSubject","sourceFileChanged","_sourceFile","PlaceholderService","_descriptionSubject","_stateSubject","descriptionChanged","stateChanged","startOperation","description","DocumentPageService","_activePageChangedSubject","_activePage","activePageChanged","setActivePage","activePage","ParserAppComponent","_modalService","_parserService","_sourceFileService","_templateService","_zoomService","_navigateService","_placeholderService","_documentPageService","_uploadFilesService","_passwordService","windowService","CREATE_FIELD_MODE","browseFilesModal","CommonModals","BrowseFiles","documentError","isApiAvaible","fileWasDropped","files","onResize","w","refreshZoom","uploadsChange","uploads","item","rewriteConfig","selectFile","selectDir","passChange","pass","PasswordRequired","zoomIn","zoom","changeZoom","zoomOut","addFieldClick","addTableClick","isFileLoaded","document","openModal","fileShouldBeLoaded","open","$event","fileDropped","modalId","close","parserConfig","browse","ngOnInit","reloadCurrentPage","window","location","reload","_document","operationState","countPages","pages","currentPage","getFitToWidth","surfaceWidth","innerWidth","pageWidth","ptToPx","offsetWidth","Math","round","pt","Component","selector","ModalService","ZoomService","NavigateService","UploadFilesService","PasswordService","WindowService","Input","FieldService","rendererFactory2","_destroy","_isMoving","_mouseMoveSubject","_mouseUpSubject","_activeChangedSubject","mouseMove","mouseUp","activeChanged","renderer","createRenderer","createMouseObservables","removeMouseMoveListener","removeMouseUpListener","fromEventPattern","handler","listen","takeUntil","event","onMouseMove","removePanMoveListener","onMouseUp","removePanEndListener","ngOnDestroy","setActive","beginMove","mousePosition","Utils","getMousePosition","isMoving","RendererFactory2","FieldContextMenuClick","action","FieldComponent","_fieldService","contextMenuClick","EventEmitter","isActive","_field","_left","left","pageSize","min","max","_top","top","_right","right","_bottom","bottom","renameFieldClick","emit","deleteFieldClick","addColumnLeft","addColumnRight","mouseDown","mode","preventDefault","startMousePos","columnInitialPos","mouseUpSubscription","mousePos","delta","scale","rightClick","Output","RenameModalComponent","acceptEvent","cancelEvent","newError","newValue","hasError","initialValue","refresh","setTimeout","inputBox","nativeElement","focus","acceptClick","operationId","cancelClick","modalElement","cancelClose","ViewChild","static","SurfaceComponent","hostingComponentsService","addDynamicComponentService","fieldWrappers","_zoom","zoomChange","_currentTemplateChangedSubscription","setTemplate","_","updateActivePage","dynamicDirective","find","viewContainerRef","fieldComponent","addDynamicComponent","wrapper","FieldWrapper","pageModel","number","contextMenuSubscription","fieldContextMenuClick","fieldNameModal","fieldNameModalAccept","oldFieldName","newFieldName","removeFields","forEach","destroy","clear","getCurrentPosition","page","offset","ngAfterViewInit","_fieldAddedSubscription","_fieldRemovedSubscription","doubleTap","elementsFromPoint","parseInt","substring","surface","querySelectorAll","element","child","children","style","opacity","parentElement","background","HostingDynamicComponentService","AddDynamicComponentService","ref","ConfirmationModalComponent","UtilsService","generateCsvForParseResults","results","r","isArray","table","prepareCsvItem","col","ci","replace","TableViewerComponent","SidePanelComponent","_utilsService","_parseState","isDataMode","isTemplateMode","_templateAddedSubscription","templateIds","_templateRemovedSubscription","removeTemplateId","parseState","manageTemplates","isCurrentTemplate","selectTemplateClick","showData","createTemplateClick","renameTemplateClick","templateNameModal","templateNameModalAccept","removeTemplateClick","templateRemoveModal","promptText","templateRemoveModalAccept","downloadTemplateClick","f","File","type","fileUrl","URL","createObjectURL","fileLink","createElement","href","download","click","revokeObjectURL","onFileSelected","target","reader_1","FileReader","readAsText","onload","uploadTemplate","state","data","downloadResultsAsCsv","isCompleted","csv","showTableValue","tableViewer","PlaceholderComponent","placeholderService","stateSubscription","progress","isVisible","ParserConfig","ParserConfigService","_parserConfig","BehaviorSubject","_updatedConfig","load","Promise","resolve","reject","configEndpoint","getConfigEndpoint","PARSER_APP","toPromise","then","catch","initializeApp","parserConfigService","setupLoadingInterceptor","service","LoadingMaskInterceptorService","ParserModule","library","add","fas","far","forRoot","apiEndpoint","DEFAULT_API_ENDPOINT","ngModule","NgModule","declarations","imports","BrowserModule","CommonComponentsModule","HttpClientModule","ClickOutsideModule","FontAwesomeModule","exports","providers","ExceptionMessageService","provide","HTTP_INTERCEPTORS","useClass","ErrorInterceptorService","multi","APP_INITIALIZER","useFactory","deps","LoadingMaskService","entryComponents"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { EventEmitter } from \"events\";\r\nimport { Observable, Subject, Subscription } from 'rxjs';\r\nimport { PageModel } from \"@groupdocs.examples.angular/common-components\";\r\nimport { __values } from \"tslib\";\r\n\r\nexport class TableValue {\r\n  constructor(obj: any) {\r\n    for (let i = 0; i < obj.length; i++) {\r\n      const row: string[] = [];\r\n      if (obj[i]) {\r\n        for (let j = 0; j < obj[i].length; j++) {\r\n          row.push(obj[i][j]);\r\n        }\r\n      }\r\n\r\n      this.rows.push(row);\r\n    }\r\n  }\r\n\r\n  readonly rows: Array<string[]> = [];\r\n}\r\n\r\nexport class OperationState<T> {\r\n  private _state = 0;\r\n  private _prompt: string;\r\n  private _error: string;\r\n  private _result: T;\r\n\r\n  enabled = true;\r\n\r\n  get isReadyToRun() {\r\n    return this._state === 0;\r\n  }\r\n\r\n  get isFailed() {\r\n    return this._state === -1;\r\n  }\r\n\r\n  get isCompleted() {\r\n    return this._state === 1;\r\n  }\r\n\r\n  get isProcessing() {\r\n    return this._state == null;\r\n  }\r\n\r\n  get prompt() {\r\n    return this._prompt;\r\n  }\r\n\r\n  set prompt(prompt: string) {\r\n    this._prompt = prompt;\r\n    this._error = null;\r\n    this._result = null;\r\n    this._state = 0;\r\n  }\r\n\r\n  get error() {\r\n    return this._error;\r\n  }\r\n\r\n  set error(error: string) {\r\n    this._prompt = null;\r\n    this._error = error;\r\n    this._result = null;\r\n    this._state = -1;\r\n  }\r\n\r\n  get result() {\r\n    return this._result;\r\n  }\r\n\r\n  set result(result: T) {\r\n    this._prompt = null;\r\n    this._error = null;\r\n    this._result = result;\r\n    this._state = 1;\r\n  }\r\n\r\n  execute() {\r\n    this._state = null;\r\n  }\r\n}\r\n\r\nexport class DocumentDescriptionResponse {\r\n  message: string;\r\n  result: DocumentDescription;\r\n}\r\n\r\nexport class ParseByTemplateResponse {\r\n  message: string;\r\n  data: ParseResult[];\r\n}\r\n\r\nexport class SourceFile {\r\n  constructor(public guid: string, public password: string) {\r\n  }\r\n}\r\n\r\nexport class DocumentDescription extends SourceFile {\r\n  pages: DocumentPageDescription[];\r\n}\r\n\r\nexport class DocumentPageDescription {\r\n  number: number;\r\n  width: number;\r\n  height: number;\r\n  data: string;\r\n}\r\n\r\nexport class FileDescription {\r\n  pages: PageModel[];\r\n}\r\n\r\nexport class ParseResult {\r\n  name: string;\r\n  value: string;\r\n}\r\n\r\nexport class Point {\r\n  readonly x: number;\r\n  readonly y: number;\r\n\r\n  constructor(x: number, y: number) {\r\n    this.x = x;\r\n    this.y = y;\r\n  }\r\n}\r\n\r\nexport class Size {\r\n  readonly width: number;\r\n  readonly height: number;\r\n\r\n  constructor(width: number, height: number) {\r\n    this.width = width;\r\n    this.height = height;\r\n  }\r\n}\r\n\r\nexport interface TemplateId {\r\n  readonly id: string;\r\n  readonly name: string;\r\n}\r\n\r\nexport class Template implements TemplateId {\r\n  static readonly NotSaved = \"NotSaved\";\r\n\r\n  private _id: string = null;\r\n  private _name = \"template name\";\r\n  private _fields: TemplateField[] = [];\r\n\r\n  private _addFieldSubject: Subject<TemplateField> = new Subject();\r\n  private _removeFieldSubject: Subject<TemplateField> = new Subject();\r\n  private _modifiedSubject: Subject<Template> = new Subject();\r\n\r\n  private _fieldChangedSubscriptions = new Map<TemplateField, Subscription>();\r\n\r\n  constructor() {\r\n    this._id = Template.NotSaved;\r\n  }\r\n\r\n  readonly addedField: Observable<TemplateField> = this._addFieldSubject.asObservable();\r\n  readonly removedField: Observable<TemplateField> = this._removeFieldSubject.asObservable();\r\n  readonly modified: Observable<Template> = this._modifiedSubject.asObservable();\r\n\r\n  get id() {\r\n    return this._id;\r\n  }\r\n\r\n  set id(id: string) {\r\n    this._id = id;\r\n  }\r\n\r\n  get name() {\r\n    return this._name;\r\n  }\r\n\r\n  set name(name: string) {\r\n    this._name = name;\r\n    this.notifyModified();\r\n  }\r\n\r\n  get fields(): TemplateField[] {\r\n    return this._fields;\r\n  }\r\n\r\n  get isStored() {\r\n    return this._id !== Template.NotSaved;\r\n  }\r\n\r\n  get isEmpty() {\r\n    return this._fields.length === 0;\r\n  }\r\n\r\n  addField(field: TemplateField) {\r\n    this._fieldChangedSubscriptions.set(\r\n      field,\r\n      field.changed.subscribe(p => this.notifyModified())\r\n    );\r\n\r\n    this._fields.push(field);\r\n    this._addFieldSubject.next(field);\r\n    this.notifyModified();\r\n  }\r\n\r\n  removeField(field: TemplateField) {\r\n    const index = this._fields.indexOf(field);\r\n    if (index > -1) {\r\n      this._fieldChangedSubscriptions.get(field).unsubscribe();\r\n      this._fieldChangedSubscriptions.delete(field);\r\n      this._fields.splice(index, 1);\r\n    }\r\n\r\n    this._removeFieldSubject.next(field);\r\n    this.notifyModified();\r\n  }\r\n\r\n  removeFieldByName(fieldName: string) {\r\n    const field = this.getFieldByName(fieldName);\r\n    if (field) {\r\n      this.removeField(field);\r\n    }\r\n  }\r\n\r\n  getFieldByName(fieldName: string) {\r\n    if (!fieldName) {\r\n      return null;\r\n    }\r\n\r\n    const name = fieldName.toLocaleLowerCase();\r\n    for (let i = 0; i < this._fields.length; i++) {\r\n      if (this._fields[i].name.toLocaleLowerCase() === name) {\r\n        return this._fields[i];\r\n      }\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  createField(baseName: string): TemplateField {\r\n    const field = new TemplateField(this);\r\n    field.name = this.getNextFieldName(baseName);\r\n    field.size = new Size(60, 20);\r\n    field.pageNumber = 1;\r\n    field.position = new Point(10, 10);\r\n\r\n    return field;\r\n  }\r\n\r\n  private getNextFieldName(baseName: string): string {\r\n    for (let i = 0; i < 1000; i++) {\r\n      const name = baseName + i.toString();\r\n      if (!this.getFieldByName(name)) {\r\n        return name;\r\n      }\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  private notifyModified() {\r\n    this._modifiedSubject.next(this);\r\n  }\r\n}\r\n\r\nexport class TemplateFieldTypes {\r\n  static readonly FIXED = \"FIXED\";\r\n  static readonly TABLE = \"TABLE\";\r\n}\r\n\r\nexport class TemplateField {\r\n  private _fieldType: string = TemplateFieldTypes.FIXED;\r\n\r\n  private _name: string;\r\n  private _pageNumber: number;\r\n  private _position: Point;\r\n  private _size: Size;\r\n  private _columns: TemplateFieldTableSeparator[];\r\n  private _changedSubject = new Subject<string>();\r\n\r\n  constructor(private _template: Template) {\r\n    this._columns = [];\r\n  }\r\n\r\n  readonly changed = this._changedSubject.asObservable();\r\n\r\n  get columns(): TemplateFieldTableSeparator[] {\r\n    return this._columns;\r\n  }\r\n\r\n  addColumn(columnName: string, columnValue: number) {\r\n    const column = new TemplateFieldTableSeparator(\r\n      columnName == null ? this.getNextColumnName() : columnName,\r\n      columnValue,\r\n      this._changedSubject);\r\n\r\n    this._columns.push(column);\r\n    this._changedSubject.next(\"columns\");\r\n  }\r\n\r\n  removeColumn(column: TemplateFieldTableSeparator) {\r\n    const index = this._columns.indexOf(column);\r\n    if (index > -1) {\r\n\r\n      this._columns.splice(index, 1);\r\n      this._changedSubject.next(\"columns\");\r\n    }\r\n  }\r\n\r\n  getColumnByName(columnName: string) {\r\n    if (!columnName) {\r\n      return null;\r\n    }\r\n\r\n    const name = columnName.toLocaleLowerCase();\r\n    for (let i = 0; i < this._columns.length; i++) {\r\n      if (this._columns[i].name.toLocaleLowerCase() === name) {\r\n        return this._columns[i];\r\n      }\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  get fieldType(): string {\r\n    return this._fieldType;\r\n  }\r\n\r\n  set fieldType(fieldType: string) {\r\n    this._fieldType = fieldType;\r\n    this._changedSubject.next(\"fieldType\");\r\n  }\r\n\r\n  get template(): Template {\r\n    return this._template;\r\n  }\r\n\r\n  get name() {\r\n    return this._name;\r\n  }\r\n\r\n  set name(name: string) {\r\n    this._name = name;\r\n    this._changedSubject.next(\"name\");\r\n  }\r\n\r\n  get pageNumber() {\r\n    return this._pageNumber;\r\n  }\r\n\r\n  set pageNumber(pageNumber: number) {\r\n    this._pageNumber = pageNumber;\r\n    this._changedSubject.next(\"pageNumber\");\r\n  }\r\n\r\n  get position() {\r\n    return this._position;\r\n  }\r\n\r\n  set position(position: Point) {\r\n    this._position = position;\r\n    this._changedSubject.next(\"position\");\r\n  }\r\n\r\n  get size() {\r\n    return this._size;\r\n  }\r\n\r\n  set size(size: Size) {\r\n    this._size = size;\r\n    this._changedSubject.next(\"size\");\r\n  }\r\n\r\n  toJSON() {\r\n    return {\r\n      fieldType: this.fieldType,\r\n      name: this.name,\r\n      pageNumber: this.pageNumber,\r\n      x: this.position.x,\r\n      y: this.position.y,\r\n      width: this.size.width,\r\n      height: this.size.height,\r\n      columns: this._columns\r\n    };\r\n  }\r\n\r\n  private getNextColumnName(): string {\r\n    for (let i = 0; i < 1000; i++) {\r\n      const name = \"TC:\" + i.toString();\r\n      if (!this.getColumnByName(name)) {\r\n        return name;\r\n      }\r\n    }\r\n\r\n    return null;\r\n  }\r\n}\r\n\r\nexport class TemplateFieldTableSeparator {\r\n  constructor(private _name: string, private _value: number, private _changedSubject: Subject<string>) {\r\n  }\r\n\r\n  get name() {\r\n    return this._name;\r\n  }\r\n\r\n  get value() {\r\n    return this._value;\r\n  }\r\n\r\n  set value(value: number) {\r\n    this._value = value;\r\n    this._changedSubject.next(\"table-separator\");\r\n  }\r\n\r\n  toJSON() {\r\n    return {\r\n      name: this.name,\r\n      value: this.value,\r\n    };\r\n  }\r\n}","import { Injectable, NgModuleFactoryLoader } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\r\n\r\nimport { Api, FileCredentials, FileUtil, ConfigService } from \"@groupdocs.examples.angular/common-components\";\r\nimport { DocumentDescription, ParseByTemplateResponse, SourceFile, Template } from './app-models';\r\nimport { timeout } from 'rxjs/operators';\r\nimport { Observable, Subject } from 'rxjs';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ParserService {\r\n\r\n  constructor(private _http: HttpClient, private _config: ConfigService) { }\r\n\r\n  loadFiles(path: string) {\r\n    return this._http.post(this._config.getParserApiEndpoint() + Api.LOAD_FILE_TREE, {'path': path}, Api.httpOptionsJson);\r\n  }\r\n\r\n  upload(file: File, url: string, rewrite: boolean) {\r\n    const formData = new FormData();\r\n    formData.append(\"file\", file);\r\n    formData.append('rewrite', String(rewrite));\r\n    if (url) {\r\n       formData.append(\"url\", url);\r\n    }\r\n\r\n    return this._http.post(this._config.getParserApiEndpoint() + Api.UPLOAD_DOCUMENTS, formData);\r\n  }\r\n\r\n  loadDocumentDescription(sourceFile: SourceFile): Observable<DocumentDescription> {\r\n    const subject = new Subject<DocumentDescription>();\r\n\r\n    const observer = {\r\n      next: (response: DocumentDescription) => subject.next(response),\r\n      complete: () => subject.complete(),\r\n      error: (err: any) => {\r\n        this.logToServer(err);\r\n        console.error(err);\r\n        subject.error(err);\r\n      }\r\n    };\r\n\r\n    this._http.post(\r\n      this._config.getParserApiEndpoint() + Api.LOAD_DOCUMENT_DESCRIPTION,\r\n      sourceFile,\r\n      Api.httpOptionsJson)\r\n      .pipe(timeout(25000))\r\n      .subscribe(observer);\r\n\r\n    return subject;\r\n  }\r\n\r\n  parseByTemplate(sourceFile: SourceFile, password: string, template: Template): Observable<ParseByTemplateResponse> {\r\n    const subject = new Subject<ParseByTemplateResponse>();\r\n\r\n    const observer = {\r\n      next: (response: ParseByTemplateResponse) => subject.next(response),\r\n      complete: () => subject.complete(),\r\n      error: (err: any) => {\r\n        this.logToServer(err);\r\n        console.error(err);\r\n        subject.error(err);\r\n      }\r\n    };\r\n\r\n    this._http.post(\r\n      this._config.getParserApiEndpoint() + Api.PARSE,\r\n      {\r\n        guid: sourceFile.guid,\r\n        password: sourceFile.password,\r\n        fields: template.fields\r\n      },\r\n      Api.httpOptionsJson)\r\n      .pipe(timeout(25000))\r\n      .subscribe(observer);\r\n\r\n    return subject;\r\n  }\r\n\r\n  getErrorMessage(err: any): string {\r\n    let text: string;\r\n\r\n    if (err.status === 404) {\r\n      text = \"The requested file was not found.\"\r\n    } else if (err.error && typeof err.error.title === \"string\") {\r\n      text = err.error.title;\r\n    } else if (typeof err.error === \"string\") {\r\n      text = err.error;\r\n    } else if (typeof err.title === \"string\") {\r\n      text = err.title;\r\n    } else {\r\n      text = \"The error occured while opening the file.\"\r\n    }\r\n\r\n    return text;\r\n  }\r\n\r\n  private logToServer(error: any) {\r\n    const errorMessage = { error: JSON.stringify(error) };\r\n    const url = localStorage.getItem(\"parser.logclienterror\");\r\n    if (url) {\r\n      this._http.post(url, errorMessage, Api.httpOptionsJson).subscribe({\r\n        next: () => console.log(\"Sent to server\"),\r\n        error: () => console.log(\"Can't send to server\")\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\n// class Api {\r\n//   // TODO: add configurable IP\r\n//   public static apiEndPoint: string = window['GROUPDOCS_PARSER_API_BASE'] != null ? window['GROUPDOCS_PARSER_API_BASE'] : 'https://localhost:44333/v1/';\r\n\r\n//   public static loadDocumentDescription = \"loadDocumentDescription\";\r\n\r\n//   public static parseByTemplate = \"parseByTemplate\";\r\n\r\n//   public static health = \"health\";\r\n\r\n\r\n//   public static httpOptionsJson = {\r\n//     headers: new HttpHeaders({\r\n//       'Content-Type': 'application/json',\r\n//     })\r\n//   };\r\n// }\r\n","import { Injectable, TemplateRef } from '@angular/core';\r\nimport { Point, Size, Template, TemplateField, TemplateId } from './app-models';\r\nimport { interval, Observable, Subject, Subscription } from 'rxjs';\r\nimport { throttle } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TemplateService {\r\n  private readonly _templatePattern = \"parser.template.\";\r\n\r\n  private _currentTemplate: Template;\r\n  private _currentTemplateModifiedSubscription: Subscription;\r\n  private _templates: Template[];\r\n\r\n  private _currentTemplateChangedSubject: Subject<Template> = new Subject();\r\n  private _templateAddedSubject: Subject<Template> = new Subject();\r\n  private _templateRemovedSubject: Subject<TemplateId> = new Subject();\r\n\r\n  constructor() {\r\n    this._templates = [];\r\n    this.loadTemplatesFromLocalStorage();\r\n\r\n    this.createTemplate();\r\n  }\r\n\r\n  readonly currentTemplateChanged: Observable<Template> = this._currentTemplateChangedSubject.asObservable();\r\n  readonly templateAddedSubject: Observable<Template> = this._templateAddedSubject.asObservable();\r\n  readonly templateRemovedSubject: Observable<TemplateId> = this._templateRemovedSubject.asObservable();\r\n\r\n  get currentTemplate() {\r\n    return this._currentTemplate;\r\n  }\r\n\r\n  get templateIds(): TemplateId[] {\r\n    return this._templates;\r\n  }\r\n\r\n  selectTemplate(templateId: TemplateId) {\r\n    const template = this.getTemplateById(templateId);\r\n    if (template) {\r\n      this.setCurrentTemplate(template);\r\n    }\r\n  }\r\n\r\n  createTemplate() {\r\n    const template = new Template();\r\n    template.name = this.getNextTemplateName(\"Template\");\r\n\r\n    this.setCurrentTemplate(template);\r\n  }\r\n\r\n  renameTemplate(templateId: TemplateId) {\r\n    if (!templateId) {\r\n      return;\r\n    }\r\n\r\n    const exTemplate = this.getTemplateByName(templateId.name);\r\n    if (exTemplate && exTemplate.id !== templateId.id) {\r\n      throw Error('Template with the same name already exists');\r\n    }\r\n\r\n    if (templateId.id === this.currentTemplate.id) {\r\n      this.currentTemplate.name = templateId.name;\r\n    }\r\n    else {\r\n      const template = this.getTemplateById(templateId);\r\n      template.name = templateId.name;\r\n\r\n      this.saveTemplate(template);\r\n    }\r\n  }\r\n\r\n  removeTemplate(templateId: TemplateId) {\r\n    const template = this.getTemplateById(templateId);\r\n    let index = this._templates.indexOf(template);\r\n\r\n    if (index > -1) {\r\n      this._templates.splice(index, 1);\r\n    }\r\n\r\n    this.onTemplateRemoved(template);\r\n\r\n    if (template !== this._currentTemplate) {\r\n      return;\r\n    }\r\n\r\n    if (this._templates.length === 0) {\r\n      // Create an empty template if list is empty\r\n      this.createTemplate();\r\n    } else {\r\n      // Select the upper template (or the first)\r\n      if (index > 0) {\r\n        index = index - 1;\r\n      }\r\n\r\n      this.setCurrentTemplate(this._templates[index]);\r\n    }\r\n  }\r\n\r\n  serialize(templateId: TemplateId): string {\r\n    if (!templateId) {\r\n      return;\r\n    }\r\n\r\n    const template = this.getTemplateById(templateId);\r\n    if (!template) {\r\n      return;\r\n    }\r\n\r\n    return JSON.stringify({\r\n      name: template.name,\r\n      fields: template.fields\r\n    });\r\n  }\r\n\r\n  deserialize(templateJson: string) {\r\n    if (!templateJson) {\r\n      return;\r\n    }\r\n    try {\r\n      const template = this.loadTemplateFromJson(templateJson);\r\n      template.id = Template.NotSaved;\r\n\r\n      this.saveTemplate(template);\r\n\r\n      this.selectTemplate(template);\r\n    }\r\n    catch (error) {\r\n      throw Error('Error while parsing template file');\r\n    }\r\n  }\r\n\r\n  private setCurrentTemplate(template: Template) {\r\n    if (this._currentTemplateModifiedSubscription) {\r\n      this._currentTemplateModifiedSubscription.unsubscribe();\r\n    }\r\n\r\n    this._currentTemplate = template;\r\n\r\n    this._currentTemplateModifiedSubscription = this._currentTemplate.modified\r\n      .pipe(throttle(v => interval(500)))\r\n      .subscribe(t => this.saveTemplate(t));\r\n\r\n    this._currentTemplateChangedSubject.next(this._currentTemplate);\r\n  }\r\n\r\n  private onTemplateAdded(template: Template) {\r\n    this._templateAddedSubject.next(template);\r\n  }\r\n\r\n  private onTemplateRemoved(template: Template) {\r\n    this._templateRemovedSubject.next(template);\r\n\r\n    // remove from local storage\r\n\r\n    for (let i = 0; i < localStorage.length; i++) {\r\n      const key = localStorage.key(i);\r\n\r\n      if (key === this._templatePattern + template.id) {\r\n        localStorage.removeItem(key);\r\n        return;\r\n      }\r\n    }\r\n  }\r\n\r\n  private loadTemplatesFromLocalStorage() {\r\n    for (let i = 0; i < localStorage.length; i++) {\r\n      const key = localStorage.key(i);\r\n\r\n      if (key.startsWith(this._templatePattern)) {\r\n        const template = this.loadTemplateFromJson(localStorage.getItem(key));\r\n\r\n        this._templates.push(template);\r\n        this.onTemplateAdded(template);\r\n      }\r\n    }\r\n  }\r\n\r\n  private loadTemplateFromJson(templateJson: string): Template {\r\n    const obj = JSON.parse(templateJson);\r\n\r\n    const templateName = this.getNextTemplateName(obj.name);\r\n\r\n    const template = new Template();\r\n    template.id = obj.id ? obj.id : this.getNextTemplateId();\r\n    template.name = templateName;\r\n    for (let i = 0; i < obj.fields.length; i++) {\r\n      const objField = obj.fields[i];\r\n\r\n      const field = new TemplateField(template);\r\n      if (objField.fieldType) {\r\n        field.fieldType = objField.fieldType;\r\n      }\r\n\r\n      field.name = objField.name;\r\n      field.pageNumber = objField.pageNumber;\r\n      field.position = new Point(objField.x, objField.y);\r\n      field.size = new Size(objField.width, objField.height);\r\n\r\n      if (objField.columns) {\r\n        for (let j = 0; j < objField.columns.length; j++) {\r\n          field.addColumn(objField.columns[j].name, objField.columns[j].value);\r\n        }\r\n      }\r\n\r\n      template.addField(field);\r\n    }\r\n\r\n    return template;\r\n  }\r\n\r\n  private saveTemplateToLocalStorage(template: Template) {\r\n    if (!template) {\r\n      return;\r\n    }\r\n\r\n    const key = this._templatePattern + template.id;\r\n\r\n    localStorage.setItem(key, JSON.stringify({\r\n      name: template.name,\r\n      id: template.id,\r\n      fields: template.fields\r\n    }));\r\n  }\r\n\r\n  private saveTemplate(template: Template) {\r\n    if (!template) {\r\n      return;\r\n    }\r\n\r\n    if (!template.isStored) {\r\n      template.id = this.getNextTemplateId();\r\n      this._templates.push(template);\r\n      this.onTemplateAdded(template);\r\n    }\r\n\r\n    // add to local storage\r\n    this.saveTemplateToLocalStorage(template);\r\n  }\r\n\r\n  private getTemplateById(templateId: TemplateId) {\r\n    if (!templateId) {\r\n      return null;\r\n    }\r\n\r\n    for (let i = 0; i < this._templates.length; i++) {\r\n      if (this._templates[i].id === templateId.id) {\r\n        return this._templates[i];\r\n      }\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  private getTemplateByName(templateName: string) {\r\n    if (!templateName) {\r\n      return null;\r\n    }\r\n\r\n    const name = templateName.toLocaleLowerCase();\r\n    for (let i = 0; i < this._templates.length; i++) {\r\n      if (this._templates[i].name.toLocaleLowerCase() === name) {\r\n        return this._templates[i];\r\n      }\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  private getNextTemplateId(): string {\r\n    const templateId = { id: \"\", name: \"\" };\r\n\r\n    for (let i = 0; i < 1000; i++) {\r\n      templateId.id = i.toString();\r\n      if (!this.getTemplateById(templateId)) {\r\n        return templateId.id;\r\n      }\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  private getNextTemplateName(baseName: string): string {\r\n    for (let i = 0; i < 1000; i++) {\r\n      const name = baseName + (i === 0 ? \"\" : \" \" + i.toString());\r\n      if (!this.getTemplateByName(name)) {\r\n        return name;\r\n      }\r\n    }\r\n\r\n    return null;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { SourceFile } from './app-models';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SourceFileService {\r\n  private _sourceFile : SourceFile;\r\n  private _sourceFileChangedSubject = new Subject<SourceFile>();\r\n  \r\n  constructor() { }\r\n\r\n  readonly sourceFileChanged : Observable<SourceFile> = this._sourceFileChangedSubject.asObservable();\r\n\r\n  get sourceFile() {\r\n    return this._sourceFile;\r\n  }\r\n\r\n  set sourceFile(sourceFile: SourceFile) {\r\n    this._sourceFile = sourceFile;\r\n    this._sourceFileChangedSubject.next(sourceFile);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable, Observer, Subject } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PlaceholderService {\r\n  private _descriptionSubject = new Subject<string>();\r\n  private _stateSubject = new Subject<Observable<number>>();\r\n\r\n  constructor() { }\r\n\r\n  readonly descriptionChanged = this._descriptionSubject.asObservable();\r\n  readonly stateChanged = this._stateSubject.asObservable();\r\n\r\n  startOperation(description : string) : Observer<number> {\r\n    const subject = new Subject<number>();\r\n    \r\n    this._descriptionSubject.next(description);\r\n    this._stateSubject.next(subject);\r\n\r\n    return subject;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DocumentPageService {\r\n\r\n  private _activePageChangedSubject = new Subject<number>();\r\n  private _activePage: number = null;\r\n\r\n  constructor() { }\r\n\r\n  readonly activePageChanged = this._activePageChangedSubject.asObservable();\r\n\r\n  get activePage(): number {\r\n    return this._activePage;\r\n  }\r\n\r\n  setActivePage(activePage: number) {\r\n    this._activePage = activePage;\r\n    this._activePageChangedSubject.next(activePage);\r\n  }\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport {\r\n  AddDynamicComponentService,\r\n  CommonModals,\r\n  FileCredentials,\r\n  FileModel, Formatting,\r\n  HostingDynamicComponentService,\r\n  ModalService,\r\n  NavigateService, PagePreloadService, PasswordService,\r\n  TopTabActivatorService, UploadFilesService,\r\n  Utils,\r\n  WindowService,\r\n  ZoomService,\r\n  ExceptionMessageService,\r\n  LoadingMaskService\r\n} from \"@groupdocs.examples.angular/common-components\";\r\nimport { DocumentDescription, DocumentDescriptionResponse, ParseResult, SourceFile, Template, TemplateField, TemplateFieldTypes, TemplateId } from './app-models';\r\nimport { ParserService } from './parser.service';\r\nimport { ParserConfig } from './parser-config';\r\nimport { TemplateService } from './template.service';\r\nimport { SourceFileService } from './source-file.service';\r\nimport { Subject } from 'rxjs';\r\nimport { PlaceholderService } from './placeholder.service';\r\nimport { stringify } from '@angular/compiler/src/util';\r\nimport { DocumentPageService } from './document-page.service';\r\n\r\n@Component({\r\n  selector: 'gd-app-parser',\r\n  templateUrl: './parser-app.component.html',\r\n  styleUrls: ['./parser-app.component.less']\r\n})\r\nexport class ParserAppComponent implements OnInit {\r\n  @Input() sourceFile: string;\r\n\r\n  private readonly CREATE_FIELD_MODE = \"createFieldMode\";\r\n\r\n  readonly browseFilesModal = CommonModals.BrowseFiles;\r\n\r\n  private _document: DocumentDescription;\r\n  template: Template;\r\n  parserConfig: ParserConfig;\r\n  filePassword: string;\r\n\r\n  documentError: string = null;\r\n  isApiAvaible = true;\r\n\r\n  fileWasDropped = false;\r\n  files: FileModel[] = [];\r\n\r\n\r\n  constructor(\r\n    private _modalService: ModalService,\r\n    private _parserService: ParserService,\r\n    private _sourceFileService: SourceFileService,\r\n    private _templateService: TemplateService,\r\n    private _zoomService: ZoomService,\r\n    private _navigateService: NavigateService,\r\n    private _placeholderService: PlaceholderService,\r\n    private _documentPageService: DocumentPageService,\r\n    private _uploadFilesService: UploadFilesService,\r\n    private _passwordService: PasswordService,\r\n    windowService: WindowService) {\r\n\r\n    windowService.onResize.subscribe((w) => {\r\n      this.refreshZoom();\r\n    });\r\n\r\n    this._sourceFileService.sourceFileChanged.subscribe(sourceFile => this.loadDocumentDescription(sourceFile))\r\n\r\n    this._uploadFilesService.uploadsChange.subscribe((uploads) => {\r\n      if (uploads && uploads.length > 0) {\r\n        this._parserService.upload(uploads.item(0), '', this.rewriteConfig).subscribe((obj: FileCredentials) => {\r\n          this.fileWasDropped ? this.selectFile(obj.guid, '', '') : this.selectDir('');\r\n        });\r\n      }\r\n    });\r\n\r\n    this._passwordService.passChange.subscribe((pass: string) => {\r\n      this.selectFile(this._sourceFileService.sourceFile.guid, pass, CommonModals.PasswordRequired);\r\n    });\r\n  }\r\n\r\n  // Menu\r\n\r\n  zoomIn() {\r\n    const zoom = this._zoomService.zoom;\r\n\r\n    if (zoom < 490) {\r\n      this._zoomService.changeZoom(zoom + 10);\r\n    }\r\n  }\r\n\r\n  zoomOut() {\r\n    const zoom = this._zoomService.zoom;\r\n    if (zoom > 30) {\r\n      this._zoomService.changeZoom(zoom - 10);\r\n    }\r\n  }\r\n\r\n  addFieldClick() {\r\n    const template = this._templateService.currentTemplate;\r\n    if (!template) {\r\n      return;\r\n    }\r\n\r\n    const field = template.createField(\"Field\");\r\n    field.fieldType = TemplateFieldTypes.FIXED;\r\n    field.pageNumber = this._documentPageService.activePage;\r\n    template.addField(field);\r\n  }\r\n\r\n  addTableClick() {\r\n    const template = this._templateService.currentTemplate;\r\n    if (!template) {\r\n      return;\r\n    }\r\n\r\n    const field = template.createField(\"Table\");\r\n    field.fieldType = TemplateFieldTypes.TABLE;\r\n    field.pageNumber = this._documentPageService.activePage;\r\n    template.addField(field);\r\n  }\r\n\r\n  // end of Menu\r\n\r\n  isFileLoaded() {\r\n    return !this.documentError && this.document;\r\n  }\r\n\r\n  openModal(id: string, fileShouldBeLoaded: boolean) {\r\n    if (fileShouldBeLoaded && !this.isFileLoaded()) return;\r\n    this._modalService.open(id);\r\n  }\r\n\r\n  selectDir($event: string) {\r\n    this._parserService.loadFiles($event).subscribe((files: FileModel[]) => this.files = files || []);\r\n  }\r\n\r\n  upload($event: string) {\r\n    this._parserService.upload(null, $event, this.rewriteConfig).subscribe(() => {\r\n      this.selectDir('');\r\n    });\r\n  }\r\n\r\n  fileDropped($event) {\r\n    this.fileWasDropped = $event;\r\n  }\r\n\r\n  selectFile($event: string, password: string, modalId: string) {\r\n    this._sourceFileService.sourceFile = new SourceFile($event, password);\r\n\r\n    if (modalId) {\r\n      this._modalService.close(modalId);\r\n    }\r\n  }\r\n\r\n  get rewriteConfig(): boolean {\r\n    return this.parserConfig ? this.parserConfig.rewrite : true;\r\n  }\r\n\r\n  get uploadConfig(): boolean {\r\n    return this.parserConfig ? this.parserConfig.upload : true;\r\n  }\r\n\r\n  get browseConfig(): boolean {\r\n    return this.parserConfig ? this.parserConfig.browse : true;\r\n  }\r\n\r\n  get returnUrl(): string {\r\n    return localStorage.getItem(\"returnUrl\");\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  reloadCurrentPage() {\r\n    window.location.reload();\r\n  }\r\n\r\n  private loadDocumentDescription(sourceFile: SourceFile) {\r\n    this.isApiAvaible = true;\r\n    this.documentError = null;\r\n    this._document = null;\r\n\r\n    const operationState = this._placeholderService.startOperation(\"Loading document...\");\r\n\r\n    const observer = {\r\n      next: (response: DocumentDescription) => {\r\n        this._documentPageService.setActivePage(1);\r\n        this._document = response;\r\n\r\n        operationState.complete();\r\n\r\n        this._templateService.createTemplate();\r\n        this.refreshZoom();\r\n\r\n        this._navigateService.countPages = this.document.pages ? this.document.pages.length : 0;\r\n        this._navigateService.currentPage = 1;\r\n      },\r\n      error: (err: any) => {\r\n        this.documentError = this._parserService.getErrorMessage(err);\r\n        operationState.error(err);\r\n      },\r\n      complete: () => operationState.complete()\r\n    };\r\n\r\n    this._parserService.loadDocumentDescription(sourceFile).subscribe(observer);\r\n  }\r\n\r\n  get document() {\r\n    return this._document;\r\n  }\r\n\r\n  private refreshZoom() {\r\n    this._zoomService.changeZoom(this.getFitToWidth());\r\n  }\r\n\r\n  private getFitToWidth() {\r\n    if (!this.document) {\r\n      return 100;\r\n    }\r\n\r\n    const surfaceWidth = window.innerWidth;\r\n\r\n    // Images and Excel-related files receiving dimensions in px from server\r\n    const pageWidth = this.ptToPx(this.document.pages[0].width);\r\n    const pageHeight = this.ptToPx(this.document.pages[0].height);\r\n    const offsetWidth = pageWidth ? pageWidth : surfaceWidth;\r\n\r\n    return (pageHeight > pageWidth && Math.round(offsetWidth / surfaceWidth) < 2)\r\n      ? 200 - Math.round(offsetWidth * 100 / surfaceWidth)\r\n      : Math.round(surfaceWidth * 100 / offsetWidth);\r\n  }\r\n\r\n  private ptToPx(pt: number) {\r\n    //pt * 96 / 72 = px.\r\n    return pt * 96 / 72;\r\n  }\r\n}","import { ComponentFactoryResolver, OnDestroy, Renderer2 } from '@angular/core';\r\nimport { RendererFactory2 } from '@angular/core';\r\nimport { Injectable, HostListener } from '@angular/core';\r\nimport { Utils } from '@groupdocs.examples.angular/common-components';\r\nimport { fromEventPattern, Observable, Subject } from 'rxjs';\r\nimport { takeUntil, map } from 'rxjs/operators';\r\nimport { Point } from './app-models';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FieldService implements OnDestroy {\r\n\r\n  private _destroy = new Subject();\r\n  private _isMoving = false;\r\n\r\n  private _mouseMoveSubject = new Subject<Point>();\r\n  private _mouseUpSubject = new Subject<Point>();\r\n  private _activeChangedSubject = new Subject<string>();\r\n\r\n  readonly mouseMove = this._mouseMoveSubject.asObservable();\r\n  readonly mouseUp = this._mouseUpSubject.asObservable();\r\n  readonly activeChanged = this._activeChangedSubject.asObservable();\r\n\r\n  constructor(private rendererFactory2: RendererFactory2) {\r\n    const renderer = this.rendererFactory2.createRenderer(null, null);\r\n\r\n    this.createMouseObservables(renderer);\r\n  }\r\n\r\n  private createMouseObservables(renderer: Renderer2) {\r\n    // MOUSE\r\n\r\n    let removeMouseMoveListener: () => void;\r\n    const createMouseMoveListener = (handler: (e: Event) => boolean | void) => {\r\n      removeMouseMoveListener = renderer.listen(\"document\", \"mousemove\", handler);\r\n    };\r\n\r\n    fromEventPattern<MouseEvent>(createMouseMoveListener, () => removeMouseMoveListener())\r\n      .pipe(takeUntil(this._destroy))\r\n      .subscribe(event => this.onMouseMove(event));\r\n\r\n    let removeMouseUpListener: () => void;\r\n    const createMouseUpListener = (handler: (e: Event) => boolean | void) => {\r\n      removeMouseUpListener = renderer.listen(\"document\", \"mouseup\", handler);\r\n    };\r\n\r\n    fromEventPattern<MouseEvent>(createMouseUpListener, () => removeMouseUpListener())\r\n      .pipe(takeUntil(this._destroy))\r\n      .subscribe(event => this.onMouseUp(event));\r\n\r\n    // TOUCH\r\n\r\n    let removePanMoveListener: () => void;\r\n    const createPanMoveListener = (handler: (e: Event) => boolean | void) => {\r\n      removePanMoveListener = renderer.listen(\"document\", \"panmove\", handler);\r\n    };\r\n\r\n    fromEventPattern<MouseEvent>(createPanMoveListener, () => removePanMoveListener())\r\n      .pipe(takeUntil(this._destroy))\r\n      .subscribe(event => this.onMouseMove(event));\r\n\r\n    let removePanEndListener: () => void;\r\n    const createPanEndListener = (handler: (e: Event) => boolean | void) => {\r\n      removePanEndListener = renderer.listen(\"document\", \"panend\", handler);\r\n    };\r\n\r\n    fromEventPattern<MouseEvent>(createPanEndListener, () => removePanEndListener())\r\n      .pipe(takeUntil(this._destroy))\r\n      .subscribe(event => this.onMouseUp(event));\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this._destroy.next();\r\n    this._destroy.complete();\r\n  }\r\n\r\n  get isMoving() {\r\n    return this._isMoving;\r\n  }\r\n\r\n  setActive(fieldName: string) {\r\n    this._activeChangedSubject.next(fieldName);\r\n  }\r\n\r\n  beginMove($event: MouseEvent): Point {\r\n    const mousePosition = Utils.getMousePosition($event);\r\n    this._isMoving = true;\r\n\r\n    return mousePosition;\r\n  }\r\n\r\n  private onMouseMove($event: MouseEvent) {\r\n    if (!this.isMoving) {\r\n      return;\r\n    }\r\n\r\n    const mousePosition = Utils.getMousePosition($event);\r\n    this._mouseMoveSubject.next(mousePosition);\r\n  }\r\n\r\n  private onMouseUp($event: MouseEvent) {\r\n    if (!this.isMoving) {\r\n      return;\r\n    }\r\n\r\n    const mousePosition = Utils.getMousePosition($event);\r\n    this._mouseUpSubject.next(mousePosition);\r\n    this._isMoving = false;\r\n  }\r\n}\r\n","import { Component, HostListener, OnDestroy, OnInit, Input, Output } from '@angular/core';\r\nimport { Utils, ZoomService, ModalService } from '@groupdocs.examples.angular/common-components';\r\nimport { Point, Size, TemplateField, TemplateFieldTableSeparator, TemplateFieldTypes } from '../app-models';\r\n\r\nimport * as jquery from 'jquery';\r\nimport { FieldService } from '../field.service';\r\nimport { from, Subject, Subscription } from 'rxjs';\r\nimport { EventEmitter } from '@angular/core'\r\nimport { filter, takeUntil } from 'rxjs/operators';\r\n\r\nconst $ = jquery;\r\n\r\nexport class FieldContextMenuClick {\r\n  constructor(public fieldName: string, public action: string) {\r\n\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'gd-field',\r\n  templateUrl: './field.component.html',\r\n  styleUrls: ['./field.component.less']\r\n})\r\nexport class FieldComponent implements OnInit, OnDestroy {\r\n  pageSize: Size;\r\n\r\n  private _left: number;\r\n  private _top: number;\r\n  private _right: number;\r\n  private _bottom: number;\r\n\r\n  private _field: TemplateField\r\n  private _destroy = new Subject();\r\n\r\n  isActive: boolean;\r\n\r\n  @Output() contextMenuClick = new EventEmitter<FieldContextMenuClick>()\r\n\r\n  constructor(\r\n    private _fieldService: FieldService,\r\n    private _zoomService: ZoomService) {\r\n    _fieldService.activeChanged.pipe(takeUntil(this._destroy))\r\n      .subscribe(name => {\r\n        this.isActive = this._field && this._field.name === name;\r\n      });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this._destroy.next();\r\n    this._destroy.complete();\r\n  }\r\n\r\n  get isFixed() {\r\n    return this.field.fieldType === TemplateFieldTypes.FIXED;\r\n  }\r\n\r\n  get isTable() {\r\n    return this.field.fieldType === TemplateFieldTypes.TABLE;\r\n  }\r\n\r\n  get left(): number {\r\n    return this._left;\r\n  }\r\n\r\n  set left(left: number) {\r\n    if (!this.pageSize) {\r\n      return;\r\n    }\r\n\r\n    this._left = Math.min(this.pageSize.width, Math.max(0, left));\r\n  }\r\n\r\n  get top(): number {\r\n    return this._top;\r\n  }\r\n\r\n  set top(top: number) {\r\n    if (!this.pageSize) {\r\n      return;\r\n    }\r\n\r\n    this._top = Math.min(this.pageSize.height, Math.max(0, top));\r\n  }\r\n\r\n  get right(): number {\r\n    return this._right;\r\n  }\r\n\r\n  set right(right: number) {\r\n    if (!this.pageSize) {\r\n      return;\r\n    }\r\n\r\n    this._right = Math.min(Math.max(0, right), this.pageSize.width);\r\n  }\r\n\r\n  get bottom(): number {\r\n    return this._bottom;\r\n  }\r\n\r\n  set bottom(bottom: number) {\r\n    if (!this.pageSize) {\r\n      return;\r\n    }\r\n\r\n    this._bottom = Math.min(Math.max(0, bottom), this.pageSize.height);\r\n  }\r\n\r\n  get width() {\r\n    const width = this.right - this.left;\r\n\r\n    return width ? width : 0;\r\n  }\r\n\r\n  get height() {\r\n    const height = this.bottom - this.top;\r\n\r\n    return height ? height : 0;\r\n  }\r\n\r\n  get scale() {\r\n    return this._zoomService.zoom / 100;\r\n  }\r\n\r\n  renameFieldClick() {\r\n    this.contextMenuClick.emit(new FieldContextMenuClick(this.field.name, \"rename\"));\r\n  }\r\n\r\n  deleteFieldClick() {\r\n    this.contextMenuClick.emit(new FieldContextMenuClick(this.field.name, \"remove\"));\r\n  }\r\n\r\n  addColumnLeft() {\r\n    this.field.addColumn(null, this.width * 0.1);\r\n  }\r\n\r\n  addColumnRight() {\r\n    this.field.addColumn(null, this.width * 0.9);\r\n  }\r\n\r\n  removeColumn(column: TemplateFieldTableSeparator) {\r\n    this.field.removeColumn(column);\r\n  }\r\n\r\n  set field(field: TemplateField) {\r\n    this._field = field;\r\n\r\n    this.left = this.field.position.x;\r\n    this.top = this.field.position.y;\r\n\r\n    this.right = this.field.position.x + this.field.size.width;\r\n    this.bottom = this.field.position.y + this.field.size.height;\r\n  }\r\n\r\n  get field() {\r\n    return this._field;\r\n  }\r\n\r\n  mouseDown($event: MouseEvent, mode: string) {\r\n    $event.preventDefault();\r\n\r\n    this._fieldService.setActive(this.field.name);\r\n    const startMousePos = this._fieldService.beginMove($event);\r\n\r\n    const left = this.left;\r\n    const top = this.top;\r\n    const right = this.right;\r\n    const bottom = this.bottom;\r\n\r\n    const column = this.field.getColumnByName(mode);\r\n    const columnInitialPos = column ? column.value : null;\r\n\r\n    //  let ppa = mode.startsWith('TC:');\r\n\r\n    const mouseUpSubscription = this._fieldService.mouseUp\r\n      .subscribe(mousePos => {\r\n        this._field.position = new Point(this.left, this.top);\r\n        this._field.size = new Size(this.width, this.height);\r\n\r\n        //    ppa = false;\r\n\r\n        mouseUpSubscription.unsubscribe();\r\n      });\r\n\r\n    this._fieldService.mouseMove\r\n      .pipe(takeUntil(this._fieldService.mouseUp))\r\n      .subscribe(mousePos => {\r\n        if (!mousePos || !this.pageSize) {\r\n          return;\r\n        }\r\n\r\n        const minWidth = 40;\r\n        const minHeight = 15;\r\n\r\n        const width = this.width;\r\n        const height = this.height;\r\n\r\n        const delta = new Point(\r\n          (mousePos.x - startMousePos.x) / this.scale,\r\n          (mousePos.y - startMousePos.y) / this.scale\r\n        );\r\n\r\n        if (columnInitialPos) {\r\n          const v = columnInitialPos + delta.x;\r\n          column.value = Math.max(0, Math.min(this.width, v));\r\n\r\n          return;\r\n        }\r\n\r\n        switch (mode) {\r\n          case 'Move':\r\n            this.left = Math.min(left + delta.x, this.pageSize.width - this.width);\r\n            this.top = Math.min(top + delta.y, this.pageSize.height - this.height);\r\n            this.right = this.left + width;\r\n            this.bottom = this.top + height;\r\n            break;\r\n\r\n          // Edges\r\n\r\n          case 'W':\r\n            this.left = left + delta.x;\r\n\r\n            if (this.width < minWidth) {\r\n              this.left = this.right - minWidth;\r\n            }\r\n\r\n            break;\r\n\r\n          case 'E':\r\n            this.right = right + delta.x;\r\n\r\n            if (this.width < minWidth) {\r\n              this.right = this.left + minWidth;\r\n            }\r\n\r\n            break;\r\n\r\n          case 'N':\r\n            this.top = top + delta.y;\r\n\r\n            if (this.height < minWidth) {\r\n              this.top = this.bottom - minHeight;\r\n            }\r\n\r\n            break;\r\n\r\n          case 'S':\r\n            this.bottom = bottom + delta.y;\r\n\r\n            if (this.height < minHeight) {\r\n              this.bottom = this.top + minHeight;\r\n            }\r\n\r\n            break;\r\n\r\n          // Corners\r\n\r\n          case 'NW':\r\n            this.left = left + delta.x;\r\n            this.top = top + delta.y;\r\n\r\n            if (this.width < minWidth) {\r\n              this.left = this.right - minWidth;\r\n            }\r\n\r\n            if (this.height < minWidth) {\r\n              this.top = this.bottom - minHeight;\r\n            }\r\n\r\n            break;\r\n\r\n          case 'SW':\r\n            this.left = left + delta.x;\r\n            this.bottom = bottom + delta.y;\r\n\r\n            if (this.width < minWidth) {\r\n              this.left = this.right - minWidth;\r\n            }\r\n\r\n            if (this.height < minHeight) {\r\n              this.bottom = this.top + minHeight;\r\n            }\r\n\r\n            break;\r\n\r\n          case 'NE':\r\n            this.right = right + delta.x;\r\n            this.top = top + delta.y;\r\n\r\n            if (this.width < minWidth) {\r\n              this.right = this.left + minWidth;\r\n            }\r\n\r\n            if (this.height < minHeight) {\r\n              this.top = this.bottom - minHeight;\r\n            }\r\n\r\n            break;\r\n\r\n          case 'SE':\r\n            this.right = right + delta.x;\r\n            this.bottom = bottom + delta.y;\r\n\r\n            if (this.width < minWidth) {\r\n              this.right = this.left + minWidth;\r\n            }\r\n\r\n            if (this.height < minHeight) {\r\n              this.bottom = this.top + minHeight;\r\n            }\r\n\r\n            break;\r\n        }\r\n      });\r\n  }\r\n\r\n  rightClick($event) {\r\n    $event.preventDefault();\r\n  }\r\n}","import { Component, Input, OnInit, Output, EventEmitter, ElementRef, ViewChild } from '@angular/core';\r\nimport {\r\n  ModalComponent\r\n} from \"@groupdocs.examples.angular/common-components\";\r\n\r\n@Component({\r\n  selector: 'gd-rename-modal',\r\n  templateUrl: './rename-modal.component.html',\r\n  styleUrls: ['./rename-modal.component.less']\r\n})\r\nexport class RenameModalComponent implements OnInit {\r\n  @Input() id: String;\r\n  @Input() title: String;\r\n  @Input() promptText: String;\r\n  @Input() acceptText: String;\r\n\r\n  @Input() operationId: String;\r\n  @Input() initialValue: String;\r\n\r\n  @Output() acceptEvent = new EventEmitter();\r\n  @Output() cancelEvent = new EventEmitter();\r\n\r\n  @ViewChild('modal', { static: true }) modalElement: ModalComponent;\r\n  @ViewChild('inputBox', { static: true }) inputBox: ElementRef;\r\n\r\n  private _error: String = null;\r\n  private _value: String;\r\n\r\n  get hasError() {\r\n    return this.error != null;\r\n  }\r\n\r\n  get error() {\r\n    return this._error;\r\n  }\r\n\r\n  @Input()\r\n  set error(newError: String) {\r\n    this._error = newError;\r\n  }\r\n\r\n  get value() {\r\n    return this._value;\r\n  }\r\n\r\n  set value(newValue: String) {\r\n    this._value = newValue;\r\n    if (this.hasError) {\r\n      this._error = null;\r\n    }\r\n  }\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n    if (!this.initialValue) {\r\n      this.initialValue = \"\";\r\n    }\r\n\r\n    this.value = this.initialValue;\r\n  }\r\n\r\n  refresh($event) {\r\n    if ($event) {\r\n      this._error = null;\r\n      this._value = this.initialValue;\r\n      setTimeout(() => {\r\n        this.inputBox.nativeElement.focus();\r\n      }, 0);\r\n    }\r\n  }\r\n\r\n  acceptClick() {\r\n    // Check if value is not empty\r\n    if (this.value === null || this.value === \"\") {\r\n      this._error = \"A new value can't be empty\";\r\n    }\r\n\r\n    if (!this.hasError) {\r\n      this.acceptEvent.emit({ id: this.operationId, newValue: this.value });\r\n    }\r\n  }\r\n\r\n  cancelClick() {\r\n    if (this.modalElement) {\r\n      this.modalElement.cancelClose();\r\n    }\r\n  }\r\n}\r\n","import { AfterViewInit, Component, ComponentRef, ElementRef, HostListener, Input, OnDestroy, OnInit, ViewChild } from '@angular/core';\r\nimport {\r\n  AddDynamicComponentService,\r\n  CommonModals,\r\n  FileCredentials,\r\n  FileModel, Formatting,\r\n  HostingDynamicComponentService,\r\n  LogoComponent,\r\n  ModalService,\r\n  NavigateService, PagePreloadService, PasswordService,\r\n  TopTabActivatorService, UploadFilesService,\r\n  Utils,\r\n  WindowService,\r\n  ZoomService\r\n} from \"@groupdocs.examples.angular/common-components\";\r\nimport { DocumentDescription, Point, Size, Template, TemplateId, TemplateField } from '../app-models';\r\nimport { FieldComponent, FieldContextMenuClick } from \"../field/field.component\";\r\nimport { RenameModalComponent } from '../rename-modal/rename-modal.component';\r\n\r\nimport * as jquery from 'jquery';\r\nimport { Subscription } from 'rxjs';\r\nimport { TemplateService } from '../template.service';\r\nimport { eventNames } from 'process';\r\nimport { DocumentPageService } from '../document-page.service';\r\n\r\nconst $ = jquery;\r\n\r\n\r\n@Component({\r\n  selector: 'gd-surface',\r\n  templateUrl: './surface.component.html',\r\n  styleUrls: ['./surface.component.less']\r\n})\r\nexport class SurfaceComponent implements OnInit, OnDestroy, AfterViewInit {\r\n  private _document: DocumentDescription;\r\n  private _template: Template;\r\n  private _zoom: number;\r\n  private _fieldAddedSubscription: Subscription;\r\n  private _fieldRemovedSubscription: Subscription;\r\n  private _currentTemplateChangedSubscription: Subscription;\r\n\r\n  //private fieldComponentRefs = new Map<TemplateField, ComponentRef<{}>>();\r\n\r\n  private fieldWrappers = new Map<TemplateField, FieldWrapper>();\r\n\r\n\r\n  @ViewChild('fieldNameModal', { static: true }) fieldNameModal: RenameModalComponent;\r\n  @ViewChild('surface', { static: true }) surface: ElementRef;\r\n\r\n  @Input() set document(document: DocumentDescription) {\r\n    this._document = document;\r\n  }\r\n\r\n  get document() {\r\n    return this._document;\r\n  }\r\n\r\n  get scale() {\r\n    return this._zoom / 100;\r\n  }\r\n\r\n  addField(field: TemplateField) {\r\n    const dynamicDirective = this.hostingComponentsService.find(field.pageNumber);\r\n    if (dynamicDirective) {\r\n\r\n      const viewContainerRef = dynamicDirective.viewContainerRef;\r\n      const fieldComponent = this.addDynamicComponentService.addDynamicComponent(viewContainerRef, FieldComponent);\r\n\r\n      const wrapper = new FieldWrapper(fieldComponent);\r\n      const pageModel = this.document.pages.find(function (p) {\r\n        return p.number === field.pageNumber;\r\n      });\r\n      wrapper.fieldComponent.pageSize = new Size(pageModel.width, pageModel.height);\r\n      wrapper.fieldComponent.field = field;\r\n      wrapper.contextMenuSubscription = wrapper.fieldComponent.contextMenuClick.subscribe(event => this.fieldContextMenuClick(event));\r\n\r\n      this.fieldWrappers.set(field, wrapper);\r\n    }\r\n  }\r\n\r\n  fieldContextMenuClick(event: FieldContextMenuClick) {\r\n    if (event.action === \"rename\") {\r\n      this.fieldNameModal.operationId = event.fieldName;\r\n      this.fieldNameModal.initialValue = event.fieldName;\r\n      this._modalService.open(\"FieldNameModal\");\r\n\r\n      return;\r\n    }\r\n\r\n    if (event.action === \"remove\") {\r\n      this._template.removeFieldByName(event.fieldName);\r\n\r\n      return;\r\n    }\r\n  }\r\n\r\n  fieldNameModalAccept(event) {\r\n    const oldFieldName = event.id;\r\n    const newFieldName = event.newValue;\r\n\r\n    if (oldFieldName !== newFieldName) {\r\n      const existFieldWithName = this._template.getFieldByName(newFieldName);\r\n      if (existFieldWithName) {\r\n        this.fieldNameModal.error = \"Field with the same name already exists\";\r\n        return;\r\n      }\r\n    }\r\n\r\n    this._modalService.close(\"FieldNameModal\");\r\n    const field = this._template.getFieldByName(oldFieldName);\r\n    if (field) {\r\n      field.name = newFieldName;\r\n    }\r\n  }\r\n\r\n  removeFields() {\r\n    this.fieldWrappers.forEach(wrapper => {\r\n      wrapper.destroy();\r\n    });\r\n\r\n    this.fieldWrappers.clear();\r\n  }\r\n\r\n  removeField(field: TemplateField) {\r\n    const wrapper = this.fieldWrappers.get(field);\r\n    if (wrapper) {\r\n      wrapper.destroy();\r\n    }\r\n    this.fieldWrappers.delete(field);\r\n  }\r\n\r\n  private getCurrentPosition(position, page) {\r\n    const x = (position.x - page.offset().left);\r\n    const y = (position.y - page.offset().top);\r\n    return new Point(x, y);\r\n  }\r\n\r\n  // @HostListener('document:mousedown', ['$event'])\r\n  // onMouseDown($event: MouseEvent) {\r\n  //   const pos = Utils.getMousePosition($event);\r\n\r\n  //   let e = document.elementFromPoint(pos.x, pos.y);\r\n  // }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.updateActivePage();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this._fieldAddedSubscription) {\r\n      this._fieldAddedSubscription.unsubscribe();\r\n    }\r\n\r\n    if (this._fieldRemovedSubscription) {\r\n      this._fieldRemovedSubscription.unsubscribe();\r\n    }\r\n\r\n    if (this._currentTemplateChangedSubscription) {\r\n      this._currentTemplateChangedSubscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  constructor(\r\n    private _modalService: ModalService,\r\n    private hostingComponentsService: HostingDynamicComponentService,\r\n    private addDynamicComponentService: AddDynamicComponentService,\r\n    private _zoomService: ZoomService,\r\n    private _templateService: TemplateService,\r\n    private _documentPageService: DocumentPageService) {\r\n\r\n    this._zoom = _zoomService.zoom;\r\n    _zoomService.zoomChange.subscribe((zoom: number) => {\r\n      this._zoom = zoom;\r\n    });\r\n\r\n    this._currentTemplateChangedSubscription = _templateService.currentTemplateChanged\r\n      .subscribe(template => this.setTemplate(template));\r\n\r\n    this.setTemplate(this._templateService.currentTemplate);\r\n\r\n    this._documentPageService.activePageChanged.subscribe(_ => this.updateActivePage());\r\n  }\r\n\r\n  doubleTap($event: TouchEvent) {\r\n    //  $event.preventDefault();\r\n  }\r\n\r\n  setActivePage($event) {\r\n    $event.preventDefault();\r\n\r\n    const position = Utils.getMousePosition($event);\r\n\r\n    const elements = document.elementsFromPoint(position.x, position.y);\r\n    const currentPage = elements.find(x => x.id && x.id.startsWith(\"page-\"));\r\n    if (currentPage) {\r\n      this._documentPageService.setActivePage(parseInt(currentPage.id.substring(\"page-\".length), 10));\r\n    }\r\n  }\r\n\r\n  private updateActivePage() {\r\n    const activePage = \"page-\" + this._documentPageService.activePage;\r\n\r\n    const elements = this.surface.nativeElement.querySelectorAll('gd-page');\r\n    elements.forEach(element => {\r\n      const child = (element as HTMLElement).children[0];\r\n      if (child.id === activePage) {\r\n        (child as HTMLElement).style.opacity = '1';\r\n        (child as HTMLElement).parentElement.parentElement.style.background = '#FFFFFF';\r\n      } else {\r\n        (child as HTMLElement).style.opacity = '0.5';\r\n        (child as HTMLElement).parentElement.parentElement.style.background = '#688296';\r\n      }\r\n    });\r\n  }\r\n\r\n  private setTemplate(template: Template) {\r\n    this._template = template;\r\n\r\n    if (this._fieldAddedSubscription) {\r\n      this._fieldAddedSubscription.unsubscribe();\r\n    }\r\n\r\n    if (this._fieldRemovedSubscription) {\r\n      this._fieldRemovedSubscription.unsubscribe();\r\n    }\r\n\r\n    if (!this._template) {\r\n      return;\r\n    }\r\n\r\n    this._fieldAddedSubscription = this._template.addedField.subscribe(field => this.addField(field));\r\n    this._fieldRemovedSubscription = this._template.removedField.subscribe(field => this.removeField(field));\r\n\r\n    this.removeFields();\r\n    this._template = template;\r\n    this._template.fields.forEach(field => {\r\n      this.addField(field);\r\n    });\r\n  }\r\n}\r\n\r\nclass FieldWrapper {\r\n  fieldComponent: FieldComponent;\r\n  contextMenuSubscription: Subscription;\r\n\r\n  constructor(public ref: any) {\r\n    this.fieldComponent = <FieldComponent>ref.instance;\r\n  }\r\n\r\n  destroy() {\r\n    if (this.ref) {\r\n      this.ref.destroy();\r\n    }\r\n\r\n    if (this.contextMenuSubscription) {\r\n      this.contextMenuSubscription.unsubscribe();\r\n    }\r\n  }\r\n}","import { Component, Input, OnInit, Output, EventEmitter, ViewChild } from '@angular/core';\r\nimport {\r\n  ModalComponent\r\n} from \"@groupdocs.examples.angular/common-components\";\r\n\r\n@Component({\r\n  selector: 'gd-confirmation-modal',\r\n  templateUrl: './confirmation-modal.component.html',\r\n  styleUrls: ['./confirmation-modal.component.less']\r\n})\r\nexport class ConfirmationModalComponent implements OnInit {\r\n  @Input() id: String;\r\n  @Input() title: String;\r\n  @Input() promptText: String;\r\n  @Input() acceptText: String;\r\n\r\n  @Input() operationId: String;\r\n\r\n  @Output() acceptEvent = new EventEmitter();\r\n  @Output() cancelEvent = new EventEmitter();\r\n\r\n  @ViewChild('modal', { static: true }) modalElement: ModalComponent;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  acceptClick() {\r\n      this.acceptEvent.emit(this.operationId);\r\n  }\r\n\r\n  cancelClick() {\r\n    if (this.modalElement) {\r\n      this.modalElement.cancelClose();\r\n    }\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ParseResult, TableValue } from './app-models';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UtilsService {\r\n\r\n  constructor() { }\r\n\r\n  generateCsvForParseResults(results: ParseResult[]): string {\r\n    let r = \"field, value\";\r\n\r\n    for (let i = 0; i < results.length; i++) {\r\n      r += \"\\r\\n\";\r\n\r\n      if (Array.isArray(results[i].value)) {\r\n        const table = new TableValue(results[i].value);\r\n        for (let row = 0; row < table.rows.length; row++) {\r\n          r += this.prepareCsvItem(results[i].name) + \",\";\r\n          for (let col = 0; col < table.rows[row].length; col++) {\r\n            if (col > 0) {\r\n              r += \",\";\r\n            }\r\n\r\n            r += this.prepareCsvItem(table.rows[row][col]);\r\n          }\r\n\r\n          if (row < table.rows.length - 1) {\r\n            r += \"\\r\\n\";\r\n          }\r\n        }\r\n      }\r\n      else {\r\n        r += this.prepareCsvItem(results[i].name) + \",\" + this.prepareCsvItem(results[i].value);\r\n      }\r\n    }\r\n\r\n    return r;\r\n  }\r\n\r\n  prepareCsvItem(item: string) {\r\n    if (!item) {\r\n      return \"\";\r\n    }\r\n\r\n    const ci = item.replace(/\"/g, '\"\"');\r\n\r\n    if (ci.indexOf(',') > -1\r\n      || ci.indexOf('\\r') > -1\r\n      || ci.indexOf('\"') > -1\r\n      || ci.indexOf(\"'\") > -1\r\n    ) {\r\n      return '\"' + ci + '\"';\r\n    }\r\n    else {\r\n      return ci;\r\n    }\r\n  }\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { TableValue } from '../app-models';\r\n\r\n@Component({\r\n  selector: 'gd-table-viewer',\r\n  templateUrl: './table-viewer.component.html',\r\n  styleUrls: ['./table-viewer.component.less']\r\n})\r\nexport class TableViewerComponent implements OnInit {\r\n  table : TableValue;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { Component, OnDestroy, OnInit, ViewChild, ElementRef } from '@angular/core';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { OperationState, ParseByTemplateResponse, ParseResult, TableValue, Template, TemplateField, TemplateId } from '../app-models';\r\nimport { RenameModalComponent } from '../rename-modal/rename-modal.component';\r\nimport { ConfirmationModalComponent } from '../confirmation-modal/confirmation-modal.component';\r\n\r\nimport {\r\n  AddDynamicComponentService,\r\n  CommonModals,\r\n  FileCredentials,\r\n  FileModel, Formatting,\r\n  HostingDynamicComponentService,\r\n  ModalService,\r\n  NavigateService, PagePreloadService, PasswordService,\r\n  TopTabActivatorService, UploadFilesService,\r\n  Utils,\r\n  WindowService,\r\n  ZoomService,\r\n  ExceptionMessageService\r\n} from \"@groupdocs.examples.angular/common-components\";\r\n\r\nimport { ParserService } from '../parser.service';\r\nimport { TemplateService } from '../template.service';\r\nimport { Subject, Subscription } from 'rxjs';\r\nimport { SourceFileService } from '../source-file.service';\r\nimport { UtilsService } from '../utils.service';\r\nimport { PlaceholderService } from '../placeholder.service';\r\nimport { TableViewerComponent } from '../table-viewer/table-viewer.component';\r\n\r\n@Component({\r\n  selector: 'gd-parser-side-panel',\r\n  templateUrl: './side-panel.component.html',\r\n  styleUrls: ['./side-panel.component.less']\r\n})\r\nexport class SidePanelComponent implements OnInit, OnDestroy {\r\n\r\n  private _currentTemplateChangedSubscription: Subscription;\r\n  private _templateAddedSubscription: Subscription;\r\n  private _templateRemovedSubscription: Subscription;\r\n\r\n  private _currentTemplate: Template;\r\n  private _currentTemplateModifiedSubscription: Subscription;\r\n  private _parseState = new OperationState<ParseResult[]>();\r\n\r\n  @ViewChild('templateNameModal', { static: true }) templateNameModal: RenameModalComponent;\r\n  @ViewChild('templateRemoveModal', { static: true }) templateRemoveModal: ConfirmationModalComponent;\r\n  @ViewChild('uploadTemplate', { static: true }) uploadTemplate: ElementRef;\r\n  @ViewChild('tableViewer', { static: true }) tableViewer: TableViewerComponent;\r\n\r\n  constructor(\r\n    private _modalService: ModalService,\r\n    private _parserService: ParserService,\r\n    private _sourceFileService: SourceFileService,\r\n    private _templateService: TemplateService,\r\n    private _utilsService: UtilsService,\r\n    private _placeholderService: PlaceholderService) {\r\n\r\n    this.isDataMode = true;\r\n    this.isTemplateMode = false;\r\n\r\n    this._currentTemplateChangedSubscription = this._templateService.currentTemplateChanged\r\n      .subscribe(template => this.currentTemplate = template);\r\n    this._templateAddedSubscription = this._templateService.templateAddedSubject\r\n      .subscribe(template => this.templateIds.push(template));\r\n    this._templateRemovedSubscription = this._templateService.templateRemovedSubject\r\n      .subscribe(templateId => this.removeTemplateId(templateId));\r\n\r\n    this.currentTemplate = this._templateService.currentTemplate;\r\n    this.templateIds = [];\r\n    this._templateService.templateIds.forEach(element => {\r\n      this.templateIds.push(element);\r\n    });\r\n  }\r\n\r\n  templateIds: TemplateId[];\r\n  isTemplateMode: boolean;\r\n  isDataMode: boolean;\r\n\r\n  get parseState() {\r\n    return this._parseState;\r\n  }\r\n\r\n  get currentTemplate() {\r\n    return this._currentTemplate;\r\n  }\r\n\r\n  set currentTemplate(template: Template) {\r\n    if (this._currentTemplateModifiedSubscription) {\r\n      this._currentTemplateModifiedSubscription.unsubscribe();\r\n    }\r\n\r\n    this._currentTemplate = template;\r\n    this._currentTemplateModifiedSubscription = this._currentTemplate.modified\r\n      .subscribe(t => this.parseState.prompt = \"Template was changed. Please parse data again.\");\r\n\r\n    this.parseState.prompt = \"Press Parser to extract data by this template\";\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this._currentTemplateChangedSubscription) {\r\n      this._currentTemplateChangedSubscription.unsubscribe();\r\n    }\r\n\r\n    if (this._templateAddedSubscription) {\r\n      this._templateAddedSubscription.unsubscribe();\r\n    }\r\n\r\n    if (this._templateRemovedSubscription) {\r\n      this._templateRemovedSubscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  manageTemplates() {\r\n    this.isDataMode = false;\r\n    this.isTemplateMode = true;\r\n  }\r\n\r\n  isCurrentTemplate(templateId: TemplateId) {\r\n    return this.currentTemplate && this.currentTemplate.id === templateId.id;\r\n  }\r\n\r\n  selectTemplateClick(templateId: TemplateId) {\r\n    if (!templateId) {\r\n      return;\r\n    }\r\n\r\n    this._templateService.selectTemplate(templateId);\r\n    this.showData();\r\n  }\r\n\r\n  createTemplateClick() {\r\n    this._templateService.createTemplate();\r\n  }\r\n\r\n  renameTemplateClick(templateId: TemplateId) {\r\n    if (templateId && this.templateNameModal) {\r\n      this.templateNameModal.operationId = templateId.id;\r\n      this.templateNameModal.initialValue = templateId.name;\r\n\r\n      this._modalService.open(\"TemplateNameModal\");\r\n    }\r\n  }\r\n\r\n  templateNameModalAccept(event) {\r\n    const templateId = event.id;\r\n    const templateName = event.newValue;\r\n\r\n    try {\r\n      this._templateService.renameTemplate({ id: templateId, name: templateName });\r\n    } catch (error) {\r\n      this.templateNameModal.error = error;\r\n      return;\r\n    }\r\n\r\n    this._modalService.close(\"TemplateNameModal\");\r\n  }\r\n\r\n  removeTemplateClick(templateId: TemplateId) {\r\n    if (this.templateRemoveModal) {\r\n      this.templateRemoveModal.operationId = templateId.id;\r\n      this.templateRemoveModal.promptText = \"Remove template <b>\" + templateId.name + \"</b>?\";\r\n\r\n      this._modalService.open(\"TemplateRemoveModal\");\r\n    }\r\n  }\r\n\r\n  templateRemoveModalAccept(operationId: string) {\r\n    this._modalService.close(\"TemplateRemoveModal\");\r\n    this._templateService.removeTemplate({ id: operationId, name: \"\" });\r\n  }\r\n\r\n  downloadTemplateClick(templateId: TemplateId) {\r\n    const templateJson = this._templateService.serialize(templateId);\r\n\r\n    const f = new File([templateJson], templateId.name + \".json\", {\r\n      type: \"text/plain\"\r\n    });\r\n\r\n    const fileUrl = window.URL.createObjectURL(f);\r\n\r\n    const fileLink = document.createElement('a');\r\n    fileLink.href = fileUrl;\r\n    fileLink.download = f.name;\r\n    fileLink.click();\r\n\r\n    URL.revokeObjectURL(fileUrl);\r\n  }\r\n\r\n  onFileSelected(event) {\r\n    const file: File = event.target.files[0];\r\n\r\n    if (file) {\r\n      const reader = new FileReader();\r\n\r\n      reader.readAsText(file);\r\n      reader.onload = x => {\r\n        this._templateService.deserialize(reader.result.toString());\r\n        this.uploadTemplate.nativeElement.value = null;\r\n      };\r\n    }\r\n  }\r\n\r\n  showData() {\r\n    this.isTemplateMode = false;\r\n    this.isDataMode = true;\r\n  }\r\n\r\n  parse() {\r\n    this.parseState.execute();\r\n\r\n    const state = this._placeholderService.startOperation(\"Parsing data...\");\r\n\r\n    const observer = {\r\n      next: (response: ParseByTemplateResponse) => {\r\n        this.parseState.result = response.data;\r\n      },\r\n      error: (err: any) => {        \r\n        this.parseState.error = this._parserService.getErrorMessage(err);\r\n        state.error(err);\r\n      },\r\n      complete: () => state.complete()\r\n    };\r\n\r\n    this._parserService.parseByTemplate(\r\n      this._sourceFileService.sourceFile,\r\n      null,\r\n      this._templateService.currentTemplate\r\n    ).subscribe(observer);\r\n  }\r\n\r\n  downloadResultsAsCsv() {\r\n    if (!this.parseState.isCompleted || this.parseState.result.length === 0) {\r\n      return;\r\n    }\r\n\r\n    const csv = this._utilsService.generateCsvForParseResults(this.parseState.result);\r\n\r\n    const f = new File([csv], this._sourceFileService.sourceFile.guid + \"- data.csv\", {\r\n      type: \"text/plain\"\r\n    });\r\n\r\n    const fileUrl = window.URL.createObjectURL(f);\r\n\r\n    const fileLink = document.createElement('a');\r\n    fileLink.href = fileUrl;\r\n    fileLink.download = f.name;\r\n    fileLink.click();\r\n\r\n    URL.revokeObjectURL(fileUrl);\r\n  }\r\n\r\n  isArray(obj: any) {\r\n    return Array.isArray(obj)\r\n  }\r\n\r\n  showTableValue(value: any) {\r\n    const table = new TableValue(value);\r\n\r\n    this.tableViewer.table = table;\r\n    this._modalService.open(\"TableViewer\");\r\n  }\r\n\r\n  private removeTemplateId(templateId: TemplateId) {\r\n    for (let i = 0; i < this.templateIds.length; i++) {\r\n      if (this.templateIds[i].id === templateId.id) {\r\n        this.templateIds.splice(i, 1);\r\n        return;\r\n      }\r\n    }\r\n  }\r\n}","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { Subject, Subscription } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { PlaceholderService } from '../placeholder.service';\r\n\r\n@Component({\r\n  selector: 'gd-placeholder',\r\n  templateUrl: './placeholder.component.html',\r\n  styleUrls: ['./placeholder.component.less']\r\n})\r\nexport class PlaceholderComponent implements OnInit, OnDestroy {\r\n  private _destroy = new Subject();\r\n\r\n  constructor(placeholderService: PlaceholderService) {\r\n    placeholderService.descriptionChanged\r\n      .pipe(takeUntil(this._destroy))\r\n      .subscribe(d => {\r\n        this.description = d;\r\n        this.progress = null;\r\n        this.isVisible = true;\r\n      });\r\n\r\n    let stateSubscription: Subscription;\r\n    placeholderService.stateChanged\r\n      .pipe(takeUntil(this._destroy))\r\n      .subscribe(state => {\r\n        if (stateSubscription) {\r\n          stateSubscription.unsubscribe();\r\n        }\r\n\r\n        const observer = {\r\n          next: progress => this.progress = progress,\r\n          error: err => this.isVisible = false,\r\n          complete: () => this.isVisible = false\r\n        };\r\n\r\n        stateSubscription = state.subscribe(observer);\r\n      });\r\n  }\r\n\r\n  description: string;\r\n  progress: number = null;\r\n  isVisible: boolean;\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this._destroy.next();\r\n    this._destroy.complete();\r\n  }\r\n\r\n}\r\n","export class ParserConfig {\r\n    upload: boolean;\r\n    browse: boolean;\r\n    rewrite: boolean;\r\n}","import {Injectable} from '@angular/core';\r\nimport {ParserConfig} from \"./parser-config\";\r\nimport {Api, ConfigService} from \"@groupdocs.examples.angular/common-components\";\r\nimport {HttpClient} from \"@angular/common/http\";\r\nimport {BehaviorSubject, Observable} from \"rxjs\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ParserConfigService {\r\n  private _parserConfig: BehaviorSubject<ParserConfig> = new BehaviorSubject(new ParserConfig());\r\n  private _updatedConfig: Observable<ParserConfig> = this._parserConfig.asObservable();\r\n\r\n  constructor(private _http: HttpClient, private _config: ConfigService) {\r\n  }\r\n\r\n  get updatedConfig() {\r\n    return this._updatedConfig;\r\n  }\r\n\r\n  load() {\r\n    return new Promise<void>((resolve, reject) => {\r\n      const configEndpoint = this._config.getConfigEndpoint(Api.PARSER_APP);\r\n      this._http.get(configEndpoint, Api.httpOptionsJson).toPromise().then((response: ParserConfig) => {\r\n        const parserConfig = <ParserConfig>response;\r\n        this._parserConfig.next(parserConfig);\r\n        resolve();\r\n      }).catch((response: any) => {\r\n        reject(`Could not load parser config: ${JSON.stringify(response)}`);\r\n      });\r\n    });\r\n  }\r\n}","import {APP_INITIALIZER, ModuleWithProviders, NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {\r\n  CommonComponentsModule, ExceptionMessageService,\r\n  ErrorInterceptorService, LoadingMaskInterceptorService, LoadingMaskService,\r\n  Api, ConfigService \r\n} from \"@groupdocs.examples.angular/common-components\";\r\n\r\nimport {FontAwesomeModule} from '@fortawesome/angular-fontawesome';\r\nimport {library} from \"@fortawesome/fontawesome-svg-core\";\r\nimport {fas} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {far} from \"@fortawesome/free-regular-svg-icons\";\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { ClickOutsideModule } from \"ng-click-outside\";\r\nimport { ParserAppComponent } from './parser-app.component';\r\nimport { SurfaceComponent } from './surface/surface.component';\r\nimport { FieldComponent } from './field/field.component';\r\nimport { ConfirmationModalComponent } from './confirmation-modal/confirmation-modal.component';\r\nimport { SidePanelComponent } from './side-panel/side-panel.component';\r\nimport { RenameModalComponent } from './rename-modal/rename-modal.component';\r\nimport { PlaceholderComponent } from './placeholder/placeholder.component';\r\nimport { TableViewerComponent } from './table-viewer/table-viewer.component';\r\nimport { ParserConfigService } from './parser-config.service';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { ParserService } from './parser.service';\r\n\r\nexport function initializeApp(parserConfigService: ParserConfigService) {\r\n  const result = () => parserConfigService.load();\r\n  return result;\r\n}\r\n\r\n// NOTE: this is required during library compilation see https://github.com/angular/angular/issues/23629#issuecomment-440942981\r\n// @dynamic\r\nexport function setupLoadingInterceptor(service: LoadingMaskService) {\r\n  return new LoadingMaskInterceptorService(service);\r\n}\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ParserAppComponent,\r\n    SurfaceComponent,\r\n    FieldComponent,\r\n    ConfirmationModalComponent,\r\n    SidePanelComponent,\r\n    RenameModalComponent,\r\n    PlaceholderComponent,\r\n    TableViewerComponent  \r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    CommonComponentsModule, \r\n    HttpClientModule,\r\n    ClickOutsideModule,\r\n    FontAwesomeModule\r\n  ],  \r\n  exports: [ \r\n    ParserAppComponent,\r\n    FieldComponent\r\n  ],\r\n  providers: [ \r\n    ParserService,\r\n    ConfigService,\r\n    ExceptionMessageService,\r\n    ParserConfigService,\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: ErrorInterceptorService,\r\n      multi: true\r\n    },\r\n    {\r\n      provide: APP_INITIALIZER,\r\n      useFactory: initializeApp,\r\n      deps: [ParserConfigService], multi: true\r\n    },\r\n    LoadingMaskService,\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useFactory: setupLoadingInterceptor,\r\n      multi: true,\r\n      deps: [LoadingMaskService]\r\n    }\r\n  ],\r\n\r\n  entryComponents: [ FieldComponent ],\r\n})\r\nexport class ParserModule { \r\n  constructor() {\r\n    library.add(fas, far);\r\n  }\r\n\r\n  static forRoot(apiEndpoint: string): ModuleWithProviders {\r\n    Api.DEFAULT_API_ENDPOINT = apiEndpoint;\r\n    return {\r\n      ngModule: ParserModule\r\n    };\r\n  }\r\n\r\n}\r\n"]}