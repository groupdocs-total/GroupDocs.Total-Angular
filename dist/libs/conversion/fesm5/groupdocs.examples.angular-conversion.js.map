{"version":3,"file":"groupdocs.examples.angular-conversion.js","sources":["ng://@groupdocs.examples.angular/conversion/lib/models.ts","ng://@groupdocs.examples.angular/conversion/lib/conversion.service.ts","ng://@groupdocs.examples.angular/conversion/lib/conversion-config.ts","ng://@groupdocs.examples.angular/conversion/lib/conversion-config.service.ts","ng://@groupdocs.examples.angular/conversion/lib/conversion-app.component.ts","ng://@groupdocs.examples.angular/conversion/lib/conversion-browse-files-modal/conversion-browse-files-modal.component.ts","ng://@groupdocs.examples.angular/conversion/lib/information-modal/information-modal.component.ts","ng://@groupdocs.examples.angular/conversion/lib/conversion-queue/conversion-queue.component.ts","ng://@groupdocs.examples.angular/conversion/lib/conversion-item/conversion-item.component.ts","ng://@groupdocs.examples.angular/conversion/lib/conversion.module.ts"],"sourcesContent":["import {FileModel} from \"@groupdocs.examples.angular/common-components\";\r\n\r\nexport class ConversionRequestModel{\r\n  added: boolean;\r\n  destinationType: string;\r\n  guid: string;\r\n  size: number;\r\n  destDocumentType: number;\r\n}\r\n\r\nexport class ConversionItemModel implements FileModel {\r\n    guid: string;\r\n    directory: boolean;\r\n    size: number;\r\n    name: string;\r\n    destinationType: string;\r\n    sizeString: string;\r\n    destinationFileName: string;\r\n    destinationFormatName: string;\r\n    sourceIcon: string;\r\n    sourceFormatName: string;\r\n    destinationIcon: string;\r\n    converted: boolean;\r\n    converting: boolean;\r\n    isDirectory: boolean;\r\n    warning: boolean;\r\n  }\r\n\r\n  export class ExtendedFileModel implements FileModel {\r\n    guid: string;\r\n    // TODO: fix dublicates below (question)\r\n    directory: boolean;\r\n    isDirectory: boolean;\r\n    size: number;\r\n    name: string;\r\n    selected: boolean;\r\n    conversionTypes: any;\r\n  }\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from \"@angular/common/http\";\r\nimport {\r\n  Api, ConfigService, FileCredentials, SaveFile, FileModel, FileUtil\r\n} from \"@groupdocs.examples.angular/common-components\";\r\nimport {Observable, BehaviorSubject, Observer} from \"rxjs\";\r\nimport { ConversionItemModel, ConversionRequestModel } from './models';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class ConversionService {\r\n  private _selectedItems: BehaviorSubject<ConversionItemModel[]> = new BehaviorSubject(new Array<ConversionItemModel>());\r\n  private _selectItems: Observable<ConversionItemModel[]> = this._selectedItems.asObservable();\r\n  private _selectedFormat: BehaviorSubject<string> = new BehaviorSubject<string>(null);\r\n  private _selectFormat: Observable<string> = this._selectedFormat.asObservable();\r\n\r\n  private _itemToConvert = new BehaviorSubject<ConversionItemModel>(null);\r\n  itemToConvert = this._itemToConvert.asObservable();\r\n\r\n  private _itemToRemove = new BehaviorSubject<ConversionItemModel>(null);\r\n  itemToRemove = this._itemToRemove.asObservable();\r\n\r\n  constructor(private _http: HttpClient, private _config: ConfigService) {\r\n  }\r\n\r\n  get selectedItems() {\r\n    return this._selectItems;\r\n  }\r\n\r\n  get selectedFormat() {\r\n    return this._selectFormat;\r\n  }\r\n\r\n  selectItems(filesToConvert: ConversionItemModel[]) {\r\n    this._selectedItems.next(filesToConvert);\r\n  }\r\n\r\n  selectFormat(selectedFormat: string) {\r\n    this._selectedFormat.next(selectedFormat);\r\n  }\r\n\r\n  loadFiles(path: string) {\r\n    return this._http.post(this._config.getConversionApiEndpoint() + Api.LOAD_FILE_TREE, {'path': path}, Api.httpOptionsJson);\r\n  }\r\n\r\n  upload(file: File, url: string, rewrite: boolean) {\r\n    const formData = new FormData();\r\n    formData.append(\"file\", file);\r\n    formData.append('rewrite', String(rewrite));\r\n    if (url) {\r\n      formData.append(\"url\", url);\r\n    }\r\n\r\n    return this._http.post(this._config.getConversionApiEndpoint() + Api.UPLOAD_DOCUMENTS, formData);\r\n  }\r\n\r\n  convert(file: ConversionItemModel) {\r\n    const req = new ConversionRequestModel();\r\n    req.added = true;\r\n    req.destinationType = file.destinationType;\r\n    req.guid = file.guid;\r\n    req.size = file.size;\r\n    req.destDocumentType = FileUtil.find(file.destinationType, false).format;\r\n    return this._http.post(this._config.getConversionApiEndpoint() + Api.CONVERT_FILE, req);\r\n  }\r\n\r\n  getDownloadUrl(guid: string) {\r\n    return this._config.getConversionApiEndpoint() + Api.DOWNLOAD_DOCUMENTS + '/?path=' + guid;\r\n  }\r\n\r\n  selectedItemToConvert(item: ConversionItemModel) {\r\n    this._itemToConvert.next(item);\r\n  }\r\n\r\n  selectedItemToRemove(item: ConversionItemModel) {\r\n    this._itemToRemove.next(item);\r\n  }\r\n}\r\n","export class ConversionConfig {\r\n  rewrite: boolean;\r\n  pageSelector: boolean;\r\n  download: boolean;\r\n  upload: boolean;\r\n  print: boolean;\r\n  browse: boolean;\r\n  enableRightClick: boolean;\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {ConversionConfig} from \"./conversion-config\";\r\nimport {Api, ConfigService} from \"@groupdocs.examples.angular/common-components\";\r\nimport {HttpClient} from \"@angular/common/http\";\r\nimport {BehaviorSubject, Observable} from \"rxjs\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ConversionConfigService {\r\n  private _conversionConfig: BehaviorSubject<ConversionConfig> = new BehaviorSubject(new ConversionConfig());\r\n  private _updatedConfig: Observable<ConversionConfig> = this._conversionConfig.asObservable();\r\n\r\n  constructor(private _http: HttpClient, private _config: ConfigService) {\r\n  }\r\n\r\n  get updatedConfig() {\r\n    return this._updatedConfig;\r\n  }\r\n\r\n  load() {\r\n    return new Promise<void>((resolve, reject) => {\r\n      const configEndpoint = this._config.getConfigEndpoint(Api.CONVERSION_APP);\r\n      this._http.get(configEndpoint, Api.httpOptionsJson).toPromise().then((response: ConversionConfig) => {\r\n        const conversionConfig = <ConversionConfig>response;\r\n        this._conversionConfig.next(conversionConfig);\r\n        resolve();\r\n      }).catch((response: any) => {\r\n        reject(`Could not load conversion config: ${JSON.stringify(response)}`);\r\n      });\r\n    });\r\n  }\r\n\r\n}\r\n","import {Component} from '@angular/core';\r\nimport {ConversionConfigService} from \"./conversion-config.service\";\r\nimport {ConversionService} from \"./conversion.service\";\r\nimport { ModalService,\r\n  CommonModals,\r\n  UploadFilesService\r\n} from \"@groupdocs.examples.angular/common-components\";\r\nimport {ConversionConfig} from \"./conversion-config\";\r\nimport {ConversionItemModel, ExtendedFileModel} from \"./models\"\r\n\r\n@Component({\r\n  selector: 'gd-conversion',\r\n  templateUrl: './conversion-app.component.html',\r\n  styleUrls: ['./conversion-app.component.less']\r\n})\r\nexport class ConversionAppComponent {\r\n  title = 'conversion';\r\n  files: ExtendedFileModel[] = [];\r\n  conversionItems: ConversionItemModel[] = [];\r\n  browseFilesModal = CommonModals.BrowseFiles;\r\n  isDesktop: boolean;\r\n  leftBarOpen = false;\r\n  conversionConfig: ConversionConfig;\r\n  result: any;\r\n  selectedFormat: string;\r\n  warningItems = 0;\r\n\r\n  constructor(private _modalService: ModalService,\r\n              private _conversionService: ConversionService,\r\n              configService: ConversionConfigService,\r\n              uploadFilesService: UploadFilesService) {\r\n\r\n    configService.updatedConfig.subscribe((config) => {\r\n      this.conversionConfig = config;\r\n    });\r\n\r\n    uploadFilesService.uploadsChange.subscribe((uploads) => {\r\n      if (uploads) {\r\n        let i: number;\r\n        for (i = 0; i < uploads.length; i++) {\r\n          this._conversionService.upload(uploads.item(i), '', this.conversionConfig.rewrite).subscribe(() => {\r\n            this.selectDir('');\r\n          });\r\n        }\r\n      }\r\n    });\r\n\r\n    _conversionService.selectedItems.subscribe((selectedItems) => {\r\n      selectedItems.forEach((selectedItem) => {\r\n        if (selectedItem.warning) this.warningItems++;\r\n        if (Object.keys(selectedItem).length > 0 && !this.itemAlreadyAdded(selectedItem)) {\r\n          this.conversionItems.push(selectedItem as ConversionItemModel);\r\n        }\r\n      });\r\n    });\r\n\r\n    _conversionService.selectedFormat.subscribe((selectedFormat) => {\r\n        this.selectedFormat = selectedFormat;\r\n    });\r\n\r\n    _conversionService.itemToConvert.subscribe(item => {\r\n      if (item) this.convertSingleItem(item);\r\n    });\r\n\r\n    _conversionService.itemToRemove.subscribe(item => {\r\n        if (item) this.removeItemFromQueue(item);\r\n    });\r\n  }\r\n\r\n  get rewriteConfig(): boolean {\r\n    return this.conversionConfig ? this.conversionConfig.rewrite : true;\r\n  }\r\n\r\n  get browseConfig(): boolean {\r\n    return this.conversionConfig ? this.conversionConfig.browse : true;\r\n  }\r\n\r\n  get uploadConfig(): boolean {\r\n    return this.conversionConfig ? this.conversionConfig.upload : true;\r\n  }\r\n\r\n  fileDropped($event) {\r\n    if ($event) {\r\n      this._modalService.open(CommonModals.BrowseFiles);\r\n    }\r\n  }\r\n\r\n  openModal(id: string) {\r\n    this._modalService.open(id);\r\n  }\r\n\r\n  closeModal(id: string) {\r\n    this._modalService.close(id);\r\n  }\r\n\r\n  upload($event: string) {\r\n    this._conversionService.upload(null, $event, this.rewriteConfig).subscribe(() => {\r\n      this.selectDir('');\r\n    });\r\n  }\r\n\r\n  selectDir($event: string) {\r\n    this._conversionService.loadFiles($event).subscribe((files: ExtendedFileModel[]) => this.files = files || []);\r\n  }\r\n\r\n  convertSingleItem(item) {\r\n    const workItem = this.conversionItems.find(x => x.guid === item.guid \r\n                                                 && x.destinationType === item.destinationType);\r\n    workItem.converting = true;\r\n    this._conversionService.convert(item).subscribe(() => {\r\n      workItem.converting = false;\r\n      workItem.converted = true;\r\n    }, (() => {\r\n      // TODO: add error handling?\r\n      workItem.converting = false;\r\n    }));\r\n  }\r\n\r\n  convertAll(){\r\n    this.conversionItems.forEach((item) => {\r\n      if (!item.converted && !item.converting) {\r\n        this.convertSingleItem(item);\r\n      }\r\n    });\r\n  }\r\n\r\n  convertAllUnavailable(){\r\n    return this.conversionItems.length === 0 || this.conversionItems.filter(ci => ci.converted !== true).length === 0;\r\n  }\r\n\r\n  removeItemFromQueue(item: ConversionItemModel): void {\r\n    if (this.conversionItems.length > 0) {\r\n      this.conversionItems.forEach( (ci, index) => {\r\n        if(ci.guid === item.guid && ci.destinationType === item.destinationType) this.conversionItems.splice(index, 1);\r\n      });\r\n    }\r\n  }\r\n\r\n  selectAllItems(checked: boolean) {\r\n    this.files.forEach( (f) => {\r\n      if (!f.isDirectory && !f.directory) f.selected = checked;\r\n    });\r\n  }\r\n\r\n  itemAlreadyAdded(selectedItem: ConversionItemModel) : boolean {\r\n    return this.conversionItems.filter(ci => ci.destinationType === selectedItem.destinationType \r\n      && ci.guid === selectedItem.guid).length === 1;\r\n  }\r\n\r\n  isLeftBarOpen() {\r\n    return this.isDesktop ? true : this.leftBarOpen;\r\n  }\r\n}\r\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\r\nimport { BrowseFilesModalComponent, UploadFilesService, FileModel, ModalService, CommonModals } from '@groupdocs.examples.angular/common-components';\r\nimport { ConversionService } from '../conversion.service';\r\nimport {ConversionItemModel, ExtendedFileModel} from \"../models\";\r\n\r\nexport interface Option {\r\n  name: string;\r\n  value: any;\r\n  warning: boolean;\r\n}\r\n\r\n@Component({\r\n  selector: 'gd-conversion-browse-files-modal',\r\n  templateUrl: './conversion-browse-files-modal.component.html',\r\n  styleUrls: ['./conversion-browse-files-modal.component.less']\r\n})\r\nexport class ConversionBrowseFilesModalComponent extends BrowseFilesModalComponent implements OnInit {\r\n  private _format: string;\r\n  formats;\r\n  @Input() files: ExtendedFileModel[];\r\n  @Output() selectAll = new EventEmitter<boolean>();\r\n\r\n  dynamicOptions: Option[] = [];\r\n\r\n  constructor(_uploadService: UploadFilesService,\r\n    private _conversionService: ConversionService,\r\n    private _modalService: ModalService) {\r\n    super(_uploadService);\r\n  }\r\n\r\n  selectAllItems(checked: boolean){\r\n    this.selectAll.emit(checked);\r\n\r\n    this.dynamicOptions = this.prepareMultipleConversionTypes();\r\n  }\r\n\r\n  selectSingleItem(checked: boolean, file: ExtendedFileModel){\r\n    // TODO: refactor?\r\n    const selectedFiles = this.files.filter(f => f.guid === file.guid);\r\n    if (selectedFiles.length === 1){\r\n      selectedFiles[0].selected = checked;\r\n    }\r\n\r\n    this.dynamicOptions = this.prepareMultipleConversionTypes();\r\n  }\r\n\r\n  getLabelString(){\r\n    const label = 'Add selected'\r\n\r\n    if (this.files && this.files.length > 0) {\r\n      const selectedCount = this.files.filter(file => file.selected).length;\r\n      return selectedCount > 0 ? 'Add ' + selectedCount + ' selected' : label;\r\n    }\r\n    else\r\n    {\r\n      return label;\r\n    }\r\n  }\r\n\r\n  prepareMultipleConversionTypes() {\r\n    const allTypes = [];\r\n\r\n    this.files.filter(file => file.selected).forEach((f) => {\r\n      if (f.conversionTypes.length > 0) {\r\n        const types = Object.assign([], f.conversionTypes);\r\n        allTypes.push(types);\r\n      }\r\n    });\r\n\r\n    let longestArray = [];\r\n    allTypes.forEach((item) => {\r\n      if(item.length >= longestArray.length){\r\n        longestArray = item;\r\n      }\r\n    });\r\n\r\n    //add warnings\r\n    allTypes.forEach(typesArr => {\r\n        for (let i = 0; i < longestArray.length; i++) {\r\n          const type = (longestArray[i].value) ? longestArray[i].value : longestArray[i];\r\n          // TODO: reconsider second check\r\n          if (typesArr.indexOf(type) === -1 && typesArr.filter(t => t.name === type).length === 0) {\r\n              longestArray[i] = {\r\n                value: type,\r\n                name: type,\r\n                warning: true,\r\n                icon: this.getFormatIcon({name: 'dummyName.' + type, directory: false} as FileModel)\r\n              };\r\n          } else {\r\n            if(!longestArray[i].warning) {\r\n              longestArray[i] = {\r\n                value: type,\r\n                name: type,\r\n                warning: false,\r\n                icon: this.getFormatIcon({name: 'dummyName.' + type, directory: false} as FileModel)\r\n              };\r\n            }\r\n          }\r\n        }\r\n    }); \r\n\r\n    return longestArray;\r\n  }\r\n\r\n  selectFormat($event: any, file: ExtendedFileModel) {\r\n    // the case when we selecting format inline on the single file\r\n    if (file) {\r\n      this.selectAll.emit(false);\r\n      file.selected = true;\r\n    }\r\n    \r\n    this._format = $event.value;\r\n    const conversionItems = new Array<ConversionItemModel>();\r\n\r\n    this.files.forEach((f) => {\r\n        if (f.selected && !f.isDirectory && !f.directory){\r\n          const extension = f.guid.replace(/^.*\\./, '');\r\n          const destinationGuid = f.guid.replace(extension, this._format);\r\n          const destinationFileName = destinationGuid.replace(/^.*[\\\\\\/]/, '');\r\n\r\n          const conversionItem: ConversionItemModel = {\r\n            guid: f.guid,\r\n            directory: f.directory,\r\n            size: f.size,\r\n            name: f.name,\r\n            destinationType: $event.value,\r\n            isDirectory: f.isDirectory,\r\n            sizeString: this.getSize(f.size),\r\n            sourceIcon: this.getFormatIcon(f),\r\n            sourceFormatName: this.getFormatName(f),\r\n            destinationFileName: destinationFileName,\r\n            destinationFormatName: this.getFormatName({name: destinationFileName, directory: false} as FileModel),\r\n            destinationIcon: this.getFormatIcon({name: destinationFileName, directory: false} as FileModel),\r\n            converted: false,\r\n            // TODO: maybe there is a more beauty way?\r\n            converting: false,\r\n            warning: f.conversionTypes.indexOf(this._format) === -1 ? true : false\r\n          };\r\n\r\n          conversionItems.push(conversionItem);\r\n        }\r\n    })\r\n\r\n    this._conversionService.selectItems(conversionItems);\r\n    this._conversionService.selectFormat(this._format.toUpperCase());\r\n    this._modalService.close(CommonModals.BrowseFiles);\r\n\r\n    if ($event.warning){\r\n      this._modalService.open(CommonModals.InformationMessage);\r\n    }\r\n  }\r\n\r\n  createFormatOption(val: string) {\r\n    return {\r\n      value: val,\r\n      name: val,\r\n      icon: this.getFormatIcon({name: 'dummyName.' + val, directory: false} as FileModel)\r\n    }\r\n  }\r\n\r\n  formatOptions(formats) {\r\n    if (formats) {\r\n      const allTypes = new Array();\r\n      for (let i = 0; i < formats.length; i++) {\r\n        allTypes.push(this.createFormatOption(formats[i]));\r\n      }\r\n      return allTypes;\r\n    }\r\n  }\r\n\r\n  anyItemSelected() {\r\n    // TODO: reconsider such checks\r\n    if (this.files && this.files.length > 0) {\r\n      return this.files.filter(file => file.selected).length > 0;\r\n    }\r\n    else return false;\r\n  }\r\n\r\n  allItemsSelected() {\r\n    if (this.files && this.files.filter(file => !file.isDirectory && !file.directory).length > 0 && this.files.length > 0) {\r\n      return this.files.filter(file => !file.isDirectory && !file.directory && file.selected).length \r\n         === this.files.filter(file => !file.isDirectory && !file.directory).length;\r\n    }\r\n    else return false;\r\n  }\r\n}\r\n","import {Component, OnInit, Input} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'gd-information-modal',\r\n  templateUrl: './information-modal.component.html',\r\n  styleUrls: ['./information-modal.component.less']\r\n})\r\nexport class InformationModalComponent implements OnInit {\r\n\r\n  @Input() formatName: string;\r\n  @Input() warningCount: number;\r\n\r\n  constructor() {\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n}\r\n","import { Component, EventEmitter, Input, Output, OnInit } from '@angular/core';\r\nimport { ConversionItemModel } from '../models';\r\n\r\n@Component({\r\n  selector: 'gd-conversion-queue',\r\n  templateUrl: './conversion-queue.component.html',\r\n  styleUrls: ['./conversion-queue.component.less']\r\n})\r\n\r\nexport class ConversionQueueComponent implements OnInit {\r\n  @Input() items: ConversionItemModel[] = [];\r\n  @Output() selectedItemToConvert = new EventEmitter<ConversionItemModel>();\r\n\r\n  constructor() {\r\n  }\r\n  \r\n  ngOnInit(): void {\r\n  }\r\n\r\n  convertSingleItem($event: ConversionItemModel) {\r\n    this.selectedItemToConvert.emit($event);\r\n  }\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { ConversionItemModel } from '../models';\r\nimport {ConversionService} from \"../conversion.service\";\r\n\r\n@Component({\r\n  selector: 'gd-conversion-item',\r\n  templateUrl: './conversion-item.component.html',\r\n  styleUrls: ['./conversion-item.component.less']\r\n})\r\n\r\nexport class ConversionItemComponent implements OnInit {\r\n  @Input() item: ConversionItemModel;\r\n\r\n  constructor(private _conversionService: ConversionService) {\r\n  }\r\n  \r\n  ngOnInit(): void {\r\n  }\r\n\r\n  convert($event, item: ConversionItemModel) {\r\n    $event.preventDefault();\r\n    $event.stopPropagation();\r\n    this._conversionService.selectedItemToConvert(item);\r\n  }\r\n\r\n  downloadFile(item: ConversionItemModel) {\r\n    window.location.assign(this._conversionService.getDownloadUrl(item.destinationFileName));\r\n  }\r\n\r\n  removeItemFromQueue($event, item: ConversionItemModel) {\r\n    $event.preventDefault();\r\n    $event.stopPropagation();\r\n    this._conversionService.selectedItemToRemove(item);\r\n  }\r\n}\r\n","import {APP_INITIALIZER, ModuleWithProviders, NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {\r\n  Api,\r\n  CommonComponentsModule,\r\n  ConfigService,\r\n  ErrorInterceptorService\r\n} from \"@groupdocs.examples.angular/common-components\";\r\nimport {HTTP_INTERCEPTORS, HttpClientModule} from \"@angular/common/http\";\r\nimport {ConversionService} from \"./conversion.service\";\r\nimport {ConversionConfigService} from \"./conversion-config.service\";\r\nimport {ConversionAppComponent} from \"./conversion-app.component\";\r\nimport { ConversionBrowseFilesModalComponent } from './conversion-browse-files-modal/conversion-browse-files-modal.component';\r\nimport { InformationModalComponent } from './information-modal/information-modal.component';\r\nimport {library} from '@fortawesome/fontawesome-svg-core';\r\nimport {fas} from '@fortawesome/free-solid-svg-icons';\r\nimport {far} from '@fortawesome/free-regular-svg-icons';\r\nimport {FontAwesomeModule} from '@fortawesome/angular-fontawesome';\r\nimport {ConversionQueueComponent} from './conversion-queue/conversion-queue.component';\r\nimport {ConversionItemComponent} from './conversion-item/conversion-item.component';\r\n\r\nexport function initializeApp(conversionConfigService: ConversionConfigService) {\r\n  const result = () => conversionConfigService.load();\r\n  return result;\r\n}\r\n\r\n@NgModule({\r\n  declarations: [ConversionAppComponent, ConversionBrowseFilesModalComponent, InformationModalComponent, ConversionQueueComponent, ConversionItemComponent],\r\n  exports: [ConversionAppComponent, ConversionBrowseFilesModalComponent, InformationModalComponent, ConversionQueueComponent],\r\n  imports: [CommonModule,\r\n    CommonComponentsModule,\r\n    HttpClientModule,\r\n    FontAwesomeModule],\r\n  providers: [\r\n    ConversionService,\r\n    ConfigService,\r\n    ConversionConfigService,\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: ErrorInterceptorService,\r\n      multi: true\r\n    },\r\n    {\r\n      provide: APP_INITIALIZER,\r\n      useFactory: initializeApp,\r\n      deps: [ConversionConfigService], multi: true\r\n    }\r\n  ]\r\n})\r\nexport class ConversionModule {\r\n  constructor() {\r\n    library.add(fas, far);\r\n  }\r\n\r\n  static forRoot(apiEndpoint: string): ModuleWithProviders {\r\n    Api.DEFAULT_API_ENDPOINT = apiEndpoint;\r\n    return {\r\n      ngModule: ConversionModule\r\n    };\r\n  }\r\n}\r\n"],"names":["tslib_1.__extends"],"mappings":"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"}