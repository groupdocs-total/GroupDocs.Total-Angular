!function(e,n){"object"==typeof exports&&"undefined"!=typeof module?n(exports,require("@angular/core"),require("@angular/common"),require("@groupdocs.examples.angular/common-components"),require("@angular/common/http"),require("rxjs"),require("@fortawesome/fontawesome-svg-core"),require("@fortawesome/free-solid-svg-icons"),require("@fortawesome/free-regular-svg-icons"),require("@fortawesome/angular-fontawesome")):"function"==typeof define&&define.amd?define("@groupdocs.examples.angular/conversion",["exports","@angular/core","@angular/common","@groupdocs.examples.angular/common-components","@angular/common/http","rxjs","@fortawesome/fontawesome-svg-core","@fortawesome/free-solid-svg-icons","@fortawesome/free-regular-svg-icons","@fortawesome/angular-fontawesome"],n):n(((e=e||self).groupdocs=e.groupdocs||{},e.groupdocs.examples=e.groupdocs.examples||{},e.groupdocs.examples.angular=e.groupdocs.examples.angular||{},e.groupdocs.examples.angular.conversion={}),e.ng.core,e.ng.common,e.commonComponents,e.ng.common.http,e.rxjs,e.fontawesomeSvgCore,e.freeSolidSvgIcons,e.freeRegularSvgIcons,e.angularFontawesome)}(this,function(e,n,o,t,i,r,c,s,l,a){"use strict";var d=function(e,n){return(d=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,n){e.__proto__=n}||function(e,n){for(var o in n)n.hasOwnProperty(o)&&(e[o]=n[o])})(e,n)};var p=function(){},f=function(){},g=function(){},u=function(){function e(e,n){this._http=e,this._config=n,this._selectedFormat=new r.BehaviorSubject(new Array),this._selectFormats=this._selectedFormat.asObservable(),this._itemToConvert=new r.BehaviorSubject(null),this.itemToConvert=this._itemToConvert.asObservable(),this._itemToRemove=new r.BehaviorSubject(null),this.itemToRemove=this._itemToRemove.asObservable()}return Object.defineProperty(e.prototype,"selectedItems",{get:function(){return this._selectFormats},enumerable:!0,configurable:!0}),e.prototype.selectItems=function(e){this._selectedFormat.next(e)},e.prototype.loadFiles=function(e){return this._http.post(this._config.getConversionApiEndpoint()+t.Api.LOAD_FILE_TREE,{path:e},t.Api.httpOptionsJson)},e.prototype.upload=function(e,n,o){var i=new FormData;return i.append("file",e),i.append("rewrite",String(o)),n&&i.append("url",n),this._http.post(this._config.getConversionApiEndpoint()+t.Api.UPLOAD_DOCUMENTS,i)},e.prototype.convert=function(e){var n=new p;return n.added=!0,n.destinationType=e.destinationType,n.guid=e.guid,n.size=e.size,this._http.post(this._config.getConversionApiEndpoint()+t.Api.CONVERT_FILE,n)},e.prototype.getDownloadUrl=function(e){return this._config.getConversionApiEndpoint()+t.Api.DOWNLOAD_DOCUMENTS+"/?path="+e},e.prototype.selectedItemToConvert=function(e){this._itemToConvert.next(e)},e.prototype.selectedItemToRemove=function(e){this._itemToRemove.next(e)},e.decorators=[{type:n.Injectable,args:[{providedIn:"root"}]}],e.ctorParameters=function(){return[{type:i.HttpClient},{type:t.ConfigService}]},e.ngInjectableDef=n.ɵɵdefineInjectable({factory:function(){return new e(n.ɵɵinject(i.HttpClient),n.ɵɵinject(t.ConfigService))},token:e,providedIn:"root"}),e}(),m=function(){},v=function(){function e(e,n){this._http=e,this._config=n,this._conversionConfig=new r.BehaviorSubject(new m),this._updatedConfig=this._conversionConfig.asObservable()}return Object.defineProperty(e.prototype,"updatedConfig",{get:function(){return this._updatedConfig},enumerable:!0,configurable:!0}),e.prototype.load=function(){var e=this;return new Promise(function(n,o){var i=e._config.getConfigEndpoint(t.Api.CONVERSION_APP);e._http.get(i,t.Api.httpOptionsJson).toPromise().then(function(o){var t=o;e._conversionConfig.next(t),n()}).catch(function(e){o("Could not load conversion config: "+JSON.stringify(e))})})},e.decorators=[{type:n.Injectable,args:[{providedIn:"root"}]}],e.ctorParameters=function(){return[{type:i.HttpClient},{type:t.ConfigService}]},e.ngInjectableDef=n.ɵɵdefineInjectable({factory:function(){return new e(n.ɵɵinject(i.HttpClient),n.ɵɵinject(t.ConfigService))},token:e,providedIn:"root"}),e}(),h=function(){function e(e,n,o,i){var r=this;this._modalService=e,this._conversionService=n,this.title="conversion",this.files=[],this.conversionItems=[],this.browseFilesModal=t.CommonModals.BrowseFiles,this.leftBarOpen=!1,o.updatedConfig.subscribe(function(e){r.conversionConfig=e}),i.uploadsChange.subscribe(function(e){if(e){var n=void 0;for(n=0;n<e.length;n++)r._conversionService.upload(e.item(n),"",r.conversionConfig.rewrite).subscribe(function(){r.selectDir("")})}}),n.selectedItems.subscribe(function(e){e.forEach(function(e){Object.keys(e).length>0&&!r.itemAlreadyAdded(e)&&r.conversionItems.push(e)})}),n.itemToConvert.subscribe(function(e){e&&r.convertSingleItem(e)}),n.itemToRemove.subscribe(function(e){e&&r.removeItemFromQueue(e)})}return Object.defineProperty(e.prototype,"rewriteConfig",{get:function(){return!this.conversionConfig||this.conversionConfig.rewrite},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"browseConfig",{get:function(){return!this.conversionConfig||this.conversionConfig.browse},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"uploadConfig",{get:function(){return!this.conversionConfig||this.conversionConfig.upload},enumerable:!0,configurable:!0}),e.prototype.openModal=function(e){this._modalService.open(e)},e.prototype.closeModal=function(e){this._modalService.close(e)},e.prototype.upload=function(e){var n=this;this._conversionService.upload(null,e,this.rewriteConfig).subscribe(function(){n.selectDir("")})},e.prototype.selectDir=function(e){var n=this;this._conversionService.loadFiles(e).subscribe(function(e){return n.files=e||[]})},e.prototype.convertSingleItem=function(e){var n=this.conversionItems.find(function(n){return n.guid===e.guid});n.converting=!0,this._conversionService.convert(e).subscribe(function(){n.converting=!1,n.converted=!0},function(){n.converting=!1})},e.prototype.convertAll=function(){var e=this;this.conversionItems.forEach(function(n){e.convertSingleItem(n)})},e.prototype.convertAllUnavailable=function(){return 0===this.conversionItems.length||0===this.conversionItems.filter(function(e){return!0!==e.converted}).length},e.prototype.removeItemFromQueue=function(e){var n=this;this.conversionItems.length>0&&this.conversionItems.forEach(function(o,t){o.guid===e.guid&&o.destinationType===e.destinationType&&n.conversionItems.splice(t,1)})},e.prototype.selectAllItems=function(e){this.files.forEach(function(n){n.isDirectory||n.directory||(n.selected=e)})},e.prototype.itemAlreadyAdded=function(e){return 1===this.conversionItems.filter(function(n){return n.destinationType===e.destinationType&&n.guid===e.guid}).length},e.prototype.isLeftBarOpen=function(){return!!this.isDesktop||this.leftBarOpen},e.decorators=[{type:n.Component,args:[{selector:"gd-conversion",template:'<div class="wrapper">\n  <div class="top-panel">\n    <gd-logo [logo]="\'conversion\'" [icon]="\'exchange-alt\'"></gd-logo>\n    <gd-top-toolbar class="toolbar-panel">\n      <gd-button [icon]="\'folder-open\'" [tooltip]="\'Browse files\'" (click)="openModal(browseFilesModal)"\n                 *ngIf="browseConfig" ></gd-button>\n\n      <gd-button [icon]="\'exchange-alt\'" [tooltip]="\'Convert\'" [disabled]="convertAllUnavailable()"\n      (click)="convertAll()"></gd-button>\n\n    </gd-top-toolbar>\n  </div>\n\n  <gd-dnd-init-state [icon]="\'exchange-alt\'" *ngIf="conversionItems.length == 0"></gd-dnd-init-state>\n\n  <gd-conversion-queue [items]="conversionItems" (selectedItemToConvert)="convertSingleItem($event)"></gd-conversion-queue>\n\n  <gd-conversion-browse-files-modal (urlForUpload)="upload($event)" [files]="files" (selectedDirectory)="selectDir($event)"\n                                    [uploadConfig]="uploadConfig" (selectAll)="selectAllItems($event)"></gd-conversion-browse-files-modal>\n\n  <gd-error-modal></gd-error-modal>\n  <gd-password-required></gd-password-required>\n</div>\n',styles:["@import url(https://fonts.googleapis.com/css?family=Open+Sans&display=swap);:host *{font-family:'Open Sans',Arial,Helvetica,sans-serif}.wrapper{align-items:stretch;height:100%;width:100%;position:fixed;top:0;bottom:0;left:0;right:0}.doc-panel{display:flex;height:inherit}.gd-document{width:100%;height:100%}.top-panel{display:flex;align-items:center;width:100%}.toolbar-panel{background-color:#3e4e5a;width:100%}"]}]}],e.ctorParameters=function(){return[{type:t.ModalService},{type:u},{type:v},{type:t.UploadFilesService}]},e}(),x=function(e){function o(o,t,i){var r=e.call(this,o)||this;return r._conversionService=t,r._modalService=i,r.selectAll=new n.EventEmitter,r.dynamicOptions=[],r}return function(e,n){function o(){this.constructor=e}d(e,n),e.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}(o,e),o.prototype.selectDD=function(e){console.log("SELECTED DD",e)},o.prototype.selectAllItems=function(e){this.selectAll.emit(e),this.dynamicOptions=this.prepareMultipleConversionTypes()},o.prototype.selectSingleItem=function(e,n){var o=this.files.filter(function(e){return e.guid===n.guid});1===o.length&&(o[0].selected=e),this.dynamicOptions=this.prepareMultipleConversionTypes()},o.prototype.getLabelString=function(){if(this.files&&this.files.length>0){var e=this.files.filter(function(e){return e.selected}).length;return e>0?"Add "+e+" selected":"Add selected"}},o.prototype.prepareMultipleConversionTypes=function(){var e=this,n=[];this.files.filter(function(e){return e.selected}).forEach(function(e){if(e.conversionTypes.length>0){var o=Object.assign([],e.conversionTypes);n.push(o)}});var o=[];return n.forEach(function(e){e.length>=o.length&&(o=e)}),n.forEach(function(n){for(var t=function(t){var i=o[t].value?o[t].value:o[t];-1===n.indexOf(i)&&0===n.filter(function(e){return e.name===i}).length?o[t]={value:i,name:i,warning:!0,icon:e.getFormatIcon({name:"dummyName."+i,directory:!1})}:o[t].warning||(o[t]={value:i,name:i,warning:!1,icon:e.getFormatIcon({name:"dummyName."+i,directory:!1})})},i=0;i<o.length;i++)t(i)}),o},o.prototype.selectFormat=function(e,n){var o=this;n&&(this.selectAll.emit(!1),n.selected=!0),this._format=e.value;var i=new Array;this.files.forEach(function(n){if(n.selected&&!n.isDirectory&&!n.directory){var t=n.guid.replace(/^.*\./,""),r=n.guid.replace(t,o._format).replace(/^.*[\\\/]/,""),c={guid:n.guid,directory:n.directory,size:n.size,name:n.name,destinationType:e.value,isDirectory:n.isDirectory,sizeString:o.getSize(n.size),sourceIcon:o.getFormatIcon(n),sourceFormatName:o.getFormatName(n),destinationFileName:r,destinationFormatName:o.getFormatName({name:r,directory:!1}),destinationIcon:o.getFormatIcon({name:r,directory:!1}),converted:!1,converting:!1};i.push(c)}}),this._conversionService.selectItems(i),this._modalService.close(t.CommonModals.BrowseFiles)},o.prototype.createFormatOption=function(e){return{value:e,name:e,icon:this.getFormatIcon({name:"dummyName."+e,directory:!1})}},o.prototype.formatOptions=function(e){if(e){for(var n=new Array,o=0;o<e.length;o++)n.push(this.createFormatOption(e[o]));return n}},o.prototype.anyItemSelected=function(){return!!(this.files&&this.files.length>0)&&this.files.filter(function(e){return e.selected}).length>0},o.prototype.allItemsSelected=function(){return!!(this.files&&this.files.filter(function(e){return!e.isDirectory&&!e.directory}).length>0&&this.files.length>0)&&this.files.filter(function(e){return!e.isDirectory&&!e.directory&&e.selected}).length===this.files.filter(function(e){return!e.isDirectory&&!e.directory}).length},o.decorators=[{type:n.Component,args:[{selector:"gd-conversion-browse-files-modal",template:'<gd-modal id="gd-browse-files" [title]="\'Open document\'" (visible)="refresh($event)">\n  <section id="gd-browse-section" (dragover)="showUploadFile = true;">\n    <div class="gd-dnd-wrap" *ngIf="showUploadFile" gdDnd (opening)="showUploadFile=$event">\n      <div class="gd-drag-n-drop-icon">\n        <fa-icon [icon]="[\'fas\',\'cloud-download-alt\']" size="5x" aria-hidden="true"></fa-icon>\n      </div>\n      <h2>Drag &amp; Drop your files here</h2>\n    </div>\n\n    <div class="upload-panel" *ngIf="uploadConfig">\n      <input id="gd-upload-input" type="file" multiple style="display: none;"\n             (change)="handleFileInput($event.target.files)">\n\n      <div class="select-all">\n        <input type="checkbox" class="gd-select-all gd-checkbox" [checked]="allItemsSelected()"\n               (change)="selectAllItems($event.target.checked);">\n      </div>\n      <div class="context">\n        <div class="context-actions">\n          <gd-drop-down>\n            <gd-drop-down-toggle>\n              <gd-button [icon]="\'plus\'" [disabled]="!anyItemSelected()" [intent]="\'primary\'" [iconOnly]="false">\n                {{getLabelString()}}\n              </gd-button>\n            </gd-drop-down-toggle>\n            <gd-drop-down-items>\n              <gd-drop-down-item (selected)="selectFormat(item, null)" *ngFor="let item of dynamicOptions">\n                <fa-icon [icon]="[\'far\', item.icon]"></fa-icon>\n                <div class="text">{{item.name}}</div>\n                <div *ngIf="item.warning" class="gd-type-warning"\n                     title="1 selected file(s) can’t be converted to {{item.name}} format">\n                  <fa-icon [icon]="[\'fas\',\'exclamation-triangle\']"></fa-icon>\n                </div>\n              </gd-drop-down-item>\n            </gd-drop-down-items>\n          </gd-drop-down>\n\n          <gd-drop-down>\n            <gd-drop-down-toggle>\n              <gd-button [icon]="\'upload\'" [intent]="\'brand\'" [iconOnly]="false">\n                Upload file\n              </gd-button>\n            </gd-drop-down-toggle>\n            <gd-drop-down-items>\n              <gd-drop-down-item (selected)="selectUpload(item.name)" *ngFor="let item of uploads">\n                <fa-icon [icon]="[\'fas\', item.icon]"></fa-icon>\n                <div class="text">{{item.name}}</div>\n              </gd-drop-down-item>\n            </gd-drop-down-items>\n          </gd-drop-down>\n        </div>\n        <div class="context-panel">\n          <div class="upload-url" *ngIf="showUploadUrl">\n            <input class="url-input" placeholder="http://" #url (keyup.enter)="uploadUrl(url.value)">\n            <div class="url-check" (click)="uploadUrl(url.value)">\n              <fa-icon [icon]="[\'fas\',\'check\']"></fa-icon>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div id="gd-modal-filebrowser" class="gd-modal-table">\n      <div class="list-files-header">\n        <div class="header-name">Document</div>\n        <div class="header-size">Size</div>\n      </div>\n      <div class="list-files-body">\n        <div class="go-up" (click)="goUp()">\n          <div class="go-up-icon">\n            <fa-icon [icon]="[\'fas\',\'level-up-alt\']"></fa-icon>\n          </div>\n          <div class="go-up-dots">...</div>\n        </div>\n        <div class="list-files-lines" *ngFor="let file of files" (click)="choose(file);">\n          <div class="gd-file-checkbox" [ngClass]="{\'empty\': file && (file.isDirectory || file.directory)}">\n            <input type="checkbox" *ngIf="file && !file.isDirectory && !file.directory" [checked]="file.selected"\n                   (change)="selectSingleItem($event.target.checked, file);" class="gd-checkbox gd-checkbox-single">\n          </div>\n          <div class="file-description">\n            <fa-icon [icon]="[\'fas\',getFormatIcon(file)]" [class]="\'ng-fa-icon fa-\' + getFormatIcon(file)"></fa-icon>\n            <div class="file-name-format">\n              <div class="file-name" [ngClass]="{\'gd-folder-name\' : file.isDirectory || file.directory}">{{file?.name}}</div>\n              <div class="file-format">{{getFormatName(file)}}</div>\n            </div>\n          </div>\n          <div class="file-size">{{getSize(file?.size)}}</div>\n          <div class="file-format-select" [ngClass]="{\'empty\': file && (file.isDirectory || file.directory)}">\n            <gd-drop-down *ngIf="!(file.isDirectory || file.directory)" [placement]="{h:\'left\',v:\'center\'}">\n              <gd-drop-down-toggle>\n                <gd-button [icon]="\'plus\'">\n                </gd-button>\n              </gd-drop-down-toggle>\n              <gd-drop-down-items>\n                <gd-drop-down-item (selected)="selectFormat(item, file)" *ngFor="let item of formatOptions(file.conversionTypes)">\n                  <fa-icon [icon]="[\'far\', item.icon]"></fa-icon>\n                  <div class="text">{{item.name}}</div>\n                </gd-drop-down-item>\n              </gd-drop-down-items>\n            </gd-drop-down>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div id="gd-modal-spinner" class="gd-modal-spinner" *ngIf="showSpinner()">\n      <fa-icon [icon]="[\'fas\',\'circle-notch\']" [spin]="true"></fa-icon>\n      &nbsp;Loading... Please wait.\n    </div>\n  </section>\n</gd-modal>\n',styles:['.gd-modal-table{width:100%;text-align:left;padding-top:20px}#gd-browse-section{width:1024px;height:628px}.list-files-header{display:flex;width:100%;color:#acacac;font-size:13px;flex-direction:row}.header-name{padding-left:70px}.header-size{padding-left:707px}.file-size{margin-top:20px;width:112px;color:#777}.file-description fa-icon{cursor:pointer;height:32px;font-size:32px;margin:10px 13px 22px 0}.gd-modal-spinner{background-color:#fff;width:100%;height:20px;text-align:center;font-size:16px}.gd-cancel-button{padding:7px;background:0 0;width:28px;overflow:hidden}.gd-cancel-button i{font-size:21px}.gd-file-name{white-space:nowrap;overflow:hidden;width:100%;text-overflow:ellipsis}.go-up{cursor:pointer;display:flex;font-size:16px;padding-left:70px;height:19px;margin:8px 0 10px}.upload-panel{display:flex;position:relative;width:100%}.upload-panel .select-all{width:16px;padding:22px 23px 0 25px}.upload-panel .context{display:flex;flex-direction:column;width:100%;margin-top:20px;margin-right:20px}.upload-panel .context .context-actions{display:flex;flex-direction:row;width:100%}.upload-panel .context .context-actions :last-child{margin-right:0}.upload-panel .context .context-panel{display:flex;flex-direction:row;width:100%;margin-top:20px}.upload-panel .context .context-panel .upload-url{display:flex;flex-direction:row;width:100%}.upload-panel .context .context-panel .upload-url .url-input{width:100%;height:27px;border:1px solid #25c2d4}.upload-panel .context .context-panel .upload-url .url-check{width:31px;height:31px;color:#fff;font-size:15px;background-color:#25c2d4}.upload-panel .context .context-panel .upload-url .url-check .ng-fa-icon{display:block;padding:8px}.upload-panel gd-drop-down{margin-right:10px}.file-description{cursor:pointer;overflow:hidden;display:flex;width:inherit}.file-description .ng-fa-icon.fa-file-pdf{color:#e21717}.file-description .ng-fa-icon.fa-file-word{color:#6979b9}.file-description .ng-fa-icon.fa-file-powerpoint{color:#e29417}.file-description .ng-fa-icon.fa-file-excel{color:#3fa300}.file-description .ng-fa-icon.fa-file-image{color:#e217da}.file-description .ng-fa-icon.fa-file-text .fa-folder{color:#5d6a75}.go-up-dots{font-size:16px;margin:0 0 0 12px;height:19px}.go-up-icon{width:30px;height:30px}.file-name{font-size:16px;color:#6e6e6e}.file-name-format{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;font-size:16px;display:flex;flex-direction:column;margin-top:16px;cursor:pointer;color:#6e6e6e}.file-format{font-size:10px}.list-files-lines{border-top:1px solid #ccc;display:flex;flex-direction:row;width:100%;height:65px}.list-files-lines:hover{background-color:#e5e5e5}.gd-dnd-wrap{background-color:#fff;cursor:default;position:absolute;width:inherit;height:inherit;opacity:.9;z-index:1;display:flex;text-align:center;justify-content:center;align-content:center;flex-direction:column}.gd-dnd-wrap h2{color:#959da5;font-size:15px;font-weight:300}.gd-drag-n-drop-icon .fa-cloud-download-alt{color:#d1d1d1;font-size:110px}.gd-file-checkbox{height:20px;margin:22px 23px 0 25px}.gd-file-checkbox.empty{width:25px}.file-format-select{display:flex;align-items:center;padding:5px;width:46px;margin-right:20px}.file-format-select ::ng-deep .button{padding:0;width:36px}.file-format-select ::ng-deep .show .button{background-color:#25c2d4;color:#fff}.gd-checkbox{width:19px;height:19px;margin:0}.gd-checkbox:before{position:relative;display:flex;width:17px;height:17px;border:1px solid #707070;content:"";background:#fff;cursor:pointer}.gd-checkbox:after{position:relative;display:flex;left:1px;top:-18px;width:16px;height:16px;content:"";cursor:pointer}.gd-checkbox:checked:after{font-family:"Font Awesome 5 Free";content:"\\f00c";font-weight:900;font-size:16px;color:#6e6e6e}.gd-select-all{position:relative;top:6px;margin-right:20px}.gd-add-selected.active{cursor:pointer;opacity:1}.gd-add-selected{width:140px;height:36px;background-color:#3e4e5a;color:#fff;margin:0 8px 0 0;border:0;cursor:not-allowed;opacity:.43}.gd-folder-name{margin-top:8px}@media (max-width:1025px){.file-size,.header-size{width:18%}.gd-dnd-wrap{width:95%}#gd-browse-section{width:100%}.file-size,.list-files-header{display:none}.context-actions{justify-content:space-between}}']}]}],o.ctorParameters=function(){return[{type:t.UploadFilesService},{type:u},{type:t.ModalService}]},o.propDecorators={files:[{type:n.Input}],selectAll:[{type:n.Output}]},o}(t.BrowseFilesModalComponent),y=function(){function e(){this.items=[],this.selectedItemToConvert=new n.EventEmitter}return e.prototype.ngOnInit=function(){},e.prototype.convertSingleItem=function(e){this.selectedItemToConvert.emit(e)},e.decorators=[{type:n.Component,args:[{selector:"gd-conversion-queue",template:'<div id="gd-convert-queue">\n  <div class="gd-queue-header">\n    <div class="gd-placeholder"></div>\n    <div>Source</div>\n    <div>Size</div>\n    <div>State</div>\n    <div>Target</div>\n    <div class="gd-queue-last-placeholder"></div>\n  </div>\n  <div *ngFor="let item of items">\n      <gd-conversion-item [item]="item"></gd-conversion-item>\n  </div>\n</div>',styles:["#gd-convert-queue{flex-direction:column;height:100%;padding-top:5px;background-color:#e7e7e7}.gd-queue-header{display:flex;font-size:11px;color:#acacac;width:100%;height:17px}.gd-placeholder{margin:0 27px 0 35px}.gd-queue-header div:nth-child(2){width:671px;text-align:left;display:flex}.gd-queue-header div:nth-child(4){margin:0 122px 0 99px;width:32px}.gd-queue-header div:nth-child(3){width:121px;text-align:left}.gd-queue-header div:nth-child(5){width:671px;text-align:left}.gd-queue-last-placeholder{margin:0 52px}@media (max-width:480px){.gd-queue-header{display:none}}"]}]}],e.ctorParameters=function(){return[]},e.propDecorators={items:[{type:n.Input}],selectedItemToConvert:[{type:n.Output}]},e}(),w=function(){function e(e){this._conversionService=e}return e.prototype.ngOnInit=function(){},e.prototype.convert=function(e,n){e.preventDefault(),e.stopPropagation(),this._conversionService.selectedItemToConvert(n)},e.prototype.downloadFile=function(e){window.location.assign(this._conversionService.getDownloadUrl(e.destinationFileName))},e.prototype.removeItemFromQueue=function(e,n){e.preventDefault(),e.stopPropagation(),this._conversionService.selectedItemToRemove(n)},e.decorators=[{type:n.Component,args:[{selector:"gd-conversion-item",template:'<div *ngIf="item" class="gd-convert-item">\n  <div class="gd-convert-remove" (click)="removeItemFromQueue($event, item)">\n    <span>&times;</span>\n  </div>\n  <div class="gd-filequeue-name disabled">\n    <fa-icon [icon]="[\'far\', item.sourceIcon]" [class]="\'ng-fa-icon\'"></fa-icon>\n    <div class="gd-file-name gd-queue-name">{{item.name}}\n      <div class="gd-file-format">{{item.sourceFormatName}}</div>\n      <div class="gd-file-format mobile">\n        <fa-icon [icon]="[\'fas\',\'arrow-right\']"></fa-icon> \n        <fa-icon [icon]="[\'fas\', item.destinationIcon]" [class]="\'ng-fa-icon\'" [ngClass]="[\'fa-\' + item.destinationIcon]"></fa-icon>{{item.destinationFileName}}\n      </div>\n    </div>\n  </div>\n  <div class="gd-file-size gd-queue-size">{{item.sizeString}}</div>\n  <div class="gd-convert-status">\n      <fa-icon class="gd-conversion-pending" [icon]="[\'far\',\'clock\']" [hidden]="item.converted || item.converting"></fa-icon>\n      <fa-icon class="gd-conversion-progress" [icon]="[\'fas\',\'circle-notch\']" [spin]="true" [hidden]="!item.converting"></fa-icon>\n      <fa-icon class="gd-conversion-complete" [icon]="[\'fas\',\'check\']" [hidden]="!item.converted || item.converting"></fa-icon>\n  </div>\n  <div class="gd-filequeue-name disabled gd-destination-file">\n      <fa-icon [icon]="[\'far\', item.destinationIcon]" [class]="\'ng-fa-icon\'" [ngClass]="[item.converted ? \'fa-\' + item.destinationIcon : \'\']"></fa-icon>\n    <div class="gd-file-name gd-queue-name">{{item.destinationFileName}}<div class="gd-file-format">{{item.destinationFormatName}}</div></div>\n  </div>\n  <div (click)="convert($event, item)" class="gd-convert-single" \n      [ngClass]="{\'disabled\': item.converting}" [hidden]="item.converted">\n      <fa-icon [icon]="[\'fas\',\'exchange-alt\']"></fa-icon>\n  </div>\n  <div (click)="convert($event, item)" class="gd-convert-single mobile" \n    [ngClass]="{\'disabled\': item.converting}" *ngIf="!item.converted && !item.converting">\n    <fa-icon [icon]="[\'fas\',\'exchange-alt\']"></fa-icon>\n  </div>\n  <fa-icon class="gd-conversion-progress mobile" [icon]="[\'fas\',\'circle-notch\']" [spin]="true" *ngIf="item.converting"></fa-icon>\n  <div (click)="downloadFile(item)" class="gd-download-single" [hidden]="!item.converted">\n    <fa-icon [icon]="[\'fas\',\'download\']"></fa-icon>\n  </div>\n</div>',styles:[".gd-convert-item{display:flex;width:100%;height:72px;border-bottom:1px solid #ccc}.gd-convert-remove{font-size:21px;color:#6e6e6e;margin:23px 27px 0 21px;cursor:pointer}.gd-filequeue-name{display:flex;width:671px}.gd-filequeue-name.disabled fa-icon{color:#6e6e6e}.gd-queue-name{text-align:left;margin-top:16px;cursor:default}.gd-queue-size{text-align:left;font-size:14px;margin-top:23px}.gd-destination-file{cursor:not-allowed}.gd-destination-file .gd-queue-name{cursor:inherit}.gd-convert-status{font-size:32px;color:#dbdbdb;margin:16px 122px 0 111px}.gd-conversion-complete{color:#62a529;margin-left:5px}.gd-conversion-progress{position:inherit;width:32px;height:32px;font-size:32px!important;margin-top:-5px;color:#007aff}.gd-conversion-progress.mobile{display:none}.gd-convert-single,.gd-download-single{font-size:16px;color:grey;margin:29px 52px;cursor:pointer}.gd-convert-single.mobile,.gd-download-single.mobile{display:none}.gd-file-format{font-size:11px}.gd-file-format.mobile{display:none}.gd-file-size{width:112px;color:#777}.disabled{cursor:not-allowed!important}.gd-convert-item .ng-fa-icon.fa-file-pdf{color:#e21717}.gd-convert-item .ng-fa-icon.fa-file-word{color:#6979b9}.gd-convert-item .ng-fa-icon.fa-file-powerpoint{color:#e29417}.gd-convert-item .ng-fa-icon.fa-file-excel{color:#3fa300}.gd-convert-item .ng-fa-icon.fa-file-image{color:#e217da}.gd-convert-item .ng-fa-icon.fa-file-text .fa-folder{color:#5d6a75}.gd-convert-status .ng-fa-icon,.gd-destination-file .ng-fa-icon,.gd-filequeue-name .ng-fa-icon{font-size:32px}.gd-filequeue-name fa-icon{font-size:32px;margin:16px 21px 0 0}@media (max-width:480px){.gd-convert-status,.gd-destination-file,.gd-file-size{display:none}.gd-conversion-progress.mobile{display:block;margin:16px 45px}.gd-convert-single.mobile{display:block}.gd-convert-single:not(.mobile){display:none}.gd-file-format.mobile{display:block}.gd-file-format.mobile>fa-icon{color:#bebebe}.gd-file-format.mobile fa-icon{font-size:11px;margin-right:6px}.gd-file-format{font-size:11px}.gd-file-format:not(.mobile){display:none}.gd-filequeue-name{white-space:nowrap;overflow:hidden}}"]}]}],e.ctorParameters=function(){return[{type:u}]},e.propDecorators={item:[{type:n.Input}]},e}(),b=function(){function e(e){this._modalService=e}return e.prototype.ngOnInit=function(){},e.prototype.dropped=function(e){e&&this._modalService.open(t.CommonModals.BrowseFiles)},e.decorators=[{type:n.Component,args:[{selector:"gd-dnd-init-state",template:'<div class="wrapper" gdDnd (dropped)="dropped($event)">\n  <fa-icon class="icon" [icon]="[\'fas\',icon]"></fa-icon>\n  <span class="text">Conversion queue is empty</span>\n  <span class="start">Drag your document here or click <fa-icon [icon]="[\'fas\',\'folder-open\']"></fa-icon> to open file</span>\n</div>\n',styles:[".wrapper{color:#959da5;background-color:#e7e7e7;display:flex;flex-direction:column;justify-content:center;align-content:center;width:100%;height:100%}.icon{font-size:65px;text-align:center;margin-bottom:38px}.start,.text{font-size:15px;text-align:center}.active{background-color:#bababa}"]}]}],e.ctorParameters=function(){return[{type:t.ModalService}]},e.propDecorators={icon:[{type:n.Input}],text:[{type:n.Input}]},e}();function I(e){return function(){return e.load()}}var C=function(){function e(){c.library.add(s.fas,l.far)}return e.forRoot=function(n){return t.Api.DEFAULT_API_ENDPOINT=n,{ngModule:e}},e.decorators=[{type:n.NgModule,args:[{declarations:[h,x,y,w,b],exports:[h,x,y],imports:[o.CommonModule,t.CommonComponentsModule,i.HttpClientModule,a.FontAwesomeModule],providers:[u,t.ConfigService,v,{provide:i.HTTP_INTERCEPTORS,useClass:t.ErrorInterceptorService,multi:!0},{provide:n.APP_INITIALIZER,useFactory:I,deps:[v],multi:!0}]}]}],e.ctorParameters=function(){return[]},e}();e.ConversionAppComponent=h,e.ConversionConfigService=v,e.ConversionItemModel=f,e.ConversionModule=C,e.ConversionRequestModel=p,e.ConversionService=u,e.ExtendedFileModel=g,e.initializeApp=I,e.ɵa=x,e.ɵb=y,e.ɵc=w,e.ɵd=b,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=groupdocs.examples.angular-conversion.umd.min.js.map