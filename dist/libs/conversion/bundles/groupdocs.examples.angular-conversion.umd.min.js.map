{"version":3,"sources":["../../../../node_modules/tslib/tslib.es6.js","ng://@groupdocs.examples.angular/conversion/lib/models.ts","ng://@groupdocs.examples.angular/conversion/lib/conversion.service.ts","ng://@groupdocs.examples.angular/conversion/lib/conversion-config.ts","ng://@groupdocs.examples.angular/conversion/lib/conversion-config.service.ts","ng://@groupdocs.examples.angular/conversion/lib/conversion-app.component.ts","ng://@groupdocs.examples.angular/conversion/lib/conversion-browse-files-modal/conversion-browse-files-modal.component.ts","ng://@groupdocs.examples.angular/conversion/lib/information-modal/information-modal.component.ts","ng://@groupdocs.examples.angular/conversion/lib/conversion-queue/conversion-queue.component.ts","ng://@groupdocs.examples.angular/conversion/lib/conversion-item/conversion-item.component.ts","ng://@groupdocs.examples.angular/conversion/lib/conversion.module.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","ConversionRequestModel","ConversionItemModel","ExtendedFileModel","ConversionService","_http","_config","this","_selectedItems","BehaviorSubject","_selectItems","asObservable","_selectedFormat","_selectFormat","_itemToConvert","itemToConvert","_itemToRemove","itemToRemove","defineProperty","prototype","selectItems","filesToConvert","next","selectFormat","selectedFormat","loadFiles","path","post","getConversionApiEndpoint","Api","LOAD_FILE_TREE","httpOptionsJson","upload","file","url","rewrite","formData","FormData","append","String","UPLOAD_DOCUMENTS","convert","req","added","destinationType","guid","size","destDocumentType","FileUtil","find","format","CONVERT_FILE","getDownloadUrl","DOWNLOAD_DOCUMENTS","selectedItemToConvert","item","selectedItemToRemove","Injectable","args","providedIn","HttpClient","ConfigService","ConversionConfig","ConversionConfigService","_conversionConfig","_updatedConfig","load","_this","Promise","resolve","reject","configEndpoint","getConfigEndpoint","CONVERSION_APP","get","toPromise","then","response","conversionConfig","catch","JSON","stringify","ConversionAppComponent","_modalService","_conversionService","configService","uploadFilesService","title","files","conversionItems","browseFilesModal","CommonModals","BrowseFiles","leftBarOpen","warningItems","updatedConfig","subscribe","config","uploadsChange","uploads","i","length","selectDir","selectedItems","forEach","selectedItem","warning","keys","itemAlreadyAdded","push","convertSingleItem","removeItemFromQueue","browse","fileDropped","$event","open","openModal","id","closeModal","close","rewriteConfig","workItem","x","converting","converted","convertAll","convertAllUnavailable","filter","ci","index","splice","selectAllItems","checked","f","isDirectory","directory","selected","isLeftBarOpen","isDesktop","Component","selector","template","ModalService","UploadFilesService","ConversionBrowseFilesModalComponent","_super","_uploadService","call","selectAll","EventEmitter","dynamicOptions","__","constructor","create","tslib_1.__extends","emit","prepareMultipleConversionTypes","selectSingleItem","selectedFiles","getLabelString","selectedCount","allTypes","conversionTypes","types","assign","longestArray","typesArr","type","value","indexOf","t","name","icon","getFormatIcon","_format","extension","replace","destinationFileName","conversionItem","sizeString","getSize","sourceIcon","sourceFormatName","getFormatName","destinationFormatName","destinationIcon","toUpperCase","InformationMessage","createFormatOption","val","formatOptions","formats","anyItemSelected","allItemsSelected","Input","Output","BrowseFilesModalComponent","InformationModalComponent","ngOnInit","ConversionQueueComponent","items","ConversionItemComponent","preventDefault","stopPropagation","downloadFile","window","location","initializeApp","conversionConfigService","ConversionModule","library","add","fas","far","forRoot","apiEndpoint","DEFAULT_API_ENDPOINT","ngModule","NgModule","declarations","exports","imports","CommonModule","CommonComponentsModule","HttpClientModule","FontAwesomeModule","providers","provide","HTTP_INTERCEPTORS","useClass","ErrorInterceptorService","multi","APP_INITIALIZER","useFactory","deps"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import {FileModel} from \"@groupdocs.examples.angular/common-components\";\r\n\r\nexport class ConversionRequestModel{\r\n  added: boolean;\r\n  destinationType: string;\r\n  guid: string;\r\n  size: number;\r\n  destDocumentType: number;\r\n}\r\n\r\nexport class ConversionItemModel implements FileModel {\r\n    guid: string;\r\n    directory: boolean;\r\n    size: number;\r\n    name: string;\r\n    destinationType: string;\r\n    sizeString: string;\r\n    destinationFileName: string;\r\n    destinationFormatName: string;\r\n    sourceIcon: string;\r\n    sourceFormatName: string;\r\n    destinationIcon: string;\r\n    converted: boolean;\r\n    converting: boolean;\r\n    isDirectory: boolean;\r\n    warning: boolean;\r\n  }\r\n\r\n  export class ExtendedFileModel implements FileModel {\r\n    guid: string;\r\n    // TODO: fix dublicates below (question)\r\n    directory: boolean;\r\n    isDirectory: boolean;\r\n    size: number;\r\n    name: string;\r\n    selected: boolean;\r\n    conversionTypes: any;\r\n  }\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from \"@angular/common/http\";\r\nimport {\r\n  Api, ConfigService, FileCredentials, SaveFile, FileModel, FileUtil\r\n} from \"@groupdocs.examples.angular/common-components\";\r\nimport {Observable, BehaviorSubject, Observer} from \"rxjs\";\r\nimport { ConversionItemModel, ConversionRequestModel } from './models';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class ConversionService {\r\n  private _selectedItems: BehaviorSubject<ConversionItemModel[]> = new BehaviorSubject(new Array<ConversionItemModel>());\r\n  private _selectItems: Observable<ConversionItemModel[]> = this._selectedItems.asObservable();\r\n  private _selectedFormat: BehaviorSubject<string> = new BehaviorSubject<string>(null);\r\n  private _selectFormat: Observable<string> = this._selectedFormat.asObservable();\r\n\r\n  private _itemToConvert = new BehaviorSubject<ConversionItemModel>(null);\r\n  itemToConvert = this._itemToConvert.asObservable();\r\n\r\n  private _itemToRemove = new BehaviorSubject<ConversionItemModel>(null);\r\n  itemToRemove = this._itemToRemove.asObservable();\r\n\r\n  constructor(private _http: HttpClient, private _config: ConfigService) {\r\n  }\r\n\r\n  get selectedItems() {\r\n    return this._selectItems;\r\n  }\r\n\r\n  get selectedFormat() {\r\n    return this._selectFormat;\r\n  }\r\n\r\n  selectItems(filesToConvert: ConversionItemModel[]) {\r\n    this._selectedItems.next(filesToConvert);\r\n  }\r\n\r\n  selectFormat(selectedFormat: string) {\r\n    this._selectedFormat.next(selectedFormat);\r\n  }\r\n\r\n  loadFiles(path: string) {\r\n    return this._http.post(this._config.getConversionApiEndpoint() + Api.LOAD_FILE_TREE, {'path': path}, Api.httpOptionsJson);\r\n  }\r\n\r\n  upload(file: File, url: string, rewrite: boolean) {\r\n    const formData = new FormData();\r\n    formData.append(\"file\", file);\r\n    formData.append('rewrite', String(rewrite));\r\n    if (url) {\r\n      formData.append(\"url\", url);\r\n    }\r\n\r\n    return this._http.post(this._config.getConversionApiEndpoint() + Api.UPLOAD_DOCUMENTS, formData);\r\n  }\r\n\r\n  convert(file: ConversionItemModel) {\r\n    const req = new ConversionRequestModel();\r\n    req.added = true;\r\n    req.destinationType = file.destinationType;\r\n    req.guid = file.guid;\r\n    req.size = file.size;\r\n    req.destDocumentType = FileUtil.find(file.destinationType, false).format;\r\n    return this._http.post(this._config.getConversionApiEndpoint() + Api.CONVERT_FILE, req);\r\n  }\r\n\r\n  getDownloadUrl(guid: string) {\r\n    return this._config.getConversionApiEndpoint() + Api.DOWNLOAD_DOCUMENTS + '/?path=' + guid;\r\n  }\r\n\r\n  selectedItemToConvert(item: ConversionItemModel) {\r\n    this._itemToConvert.next(item);\r\n  }\r\n\r\n  selectedItemToRemove(item: ConversionItemModel) {\r\n    this._itemToRemove.next(item);\r\n  }\r\n}\r\n","export class ConversionConfig {\r\n  rewrite: boolean;\r\n  pageSelector: boolean;\r\n  download: boolean;\r\n  upload: boolean;\r\n  print: boolean;\r\n  browse: boolean;\r\n  enableRightClick: boolean;\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {ConversionConfig} from \"./conversion-config\";\r\nimport {Api, ConfigService} from \"@groupdocs.examples.angular/common-components\";\r\nimport {HttpClient} from \"@angular/common/http\";\r\nimport {BehaviorSubject, Observable} from \"rxjs\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ConversionConfigService {\r\n  private _conversionConfig: BehaviorSubject<ConversionConfig> = new BehaviorSubject(new ConversionConfig());\r\n  private _updatedConfig: Observable<ConversionConfig> = this._conversionConfig.asObservable();\r\n\r\n  constructor(private _http: HttpClient, private _config: ConfigService) {\r\n  }\r\n\r\n  get updatedConfig() {\r\n    return this._updatedConfig;\r\n  }\r\n\r\n  load() {\r\n    return new Promise<void>((resolve, reject) => {\r\n      const configEndpoint = this._config.getConfigEndpoint(Api.CONVERSION_APP);\r\n      this._http.get(configEndpoint, Api.httpOptionsJson).toPromise().then((response: ConversionConfig) => {\r\n        const conversionConfig = <ConversionConfig>response;\r\n        this._conversionConfig.next(conversionConfig);\r\n        resolve();\r\n      }).catch((response: any) => {\r\n        reject(`Could not load conversion config: ${JSON.stringify(response)}`);\r\n      });\r\n    });\r\n  }\r\n\r\n}\r\n","import {Component} from '@angular/core';\r\nimport {ConversionConfigService} from \"./conversion-config.service\";\r\nimport {ConversionService} from \"./conversion.service\";\r\nimport { ModalService,\r\n  CommonModals,\r\n  UploadFilesService\r\n} from \"@groupdocs.examples.angular/common-components\";\r\nimport {ConversionConfig} from \"./conversion-config\";\r\nimport {ConversionItemModel, ExtendedFileModel} from \"./models\"\r\n\r\n@Component({\r\n  selector: 'gd-conversion',\r\n  templateUrl: './conversion-app.component.html',\r\n  styleUrls: ['./conversion-app.component.less']\r\n})\r\nexport class ConversionAppComponent {\r\n  title = 'conversion';\r\n  files: ExtendedFileModel[] = [];\r\n  conversionItems: ConversionItemModel[] = [];\r\n  browseFilesModal = CommonModals.BrowseFiles;\r\n  isDesktop: boolean;\r\n  leftBarOpen = false;\r\n  conversionConfig: ConversionConfig;\r\n  result: any;\r\n  selectedFormat: string;\r\n  warningItems = 0;\r\n\r\n  constructor(private _modalService: ModalService,\r\n              private _conversionService: ConversionService,\r\n              configService: ConversionConfigService,\r\n              uploadFilesService: UploadFilesService) {\r\n\r\n    configService.updatedConfig.subscribe((config) => {\r\n      this.conversionConfig = config;\r\n    });\r\n\r\n    uploadFilesService.uploadsChange.subscribe((uploads) => {\r\n      if (uploads) {\r\n        let i: number;\r\n        for (i = 0; i < uploads.length; i++) {\r\n          this._conversionService.upload(uploads.item(i), '', this.conversionConfig.rewrite).subscribe(() => {\r\n            this.selectDir('');\r\n          });\r\n        }\r\n      }\r\n    });\r\n\r\n    _conversionService.selectedItems.subscribe((selectedItems) => {\r\n      selectedItems.forEach((selectedItem) => {\r\n        if (selectedItem.warning) this.warningItems++;\r\n        if (Object.keys(selectedItem).length > 0 && !this.itemAlreadyAdded(selectedItem)) {\r\n          this.conversionItems.push(selectedItem as ConversionItemModel);\r\n        }\r\n      });\r\n    });\r\n\r\n    _conversionService.selectedFormat.subscribe((selectedFormat) => {\r\n        this.selectedFormat = selectedFormat;\r\n    });\r\n\r\n    _conversionService.itemToConvert.subscribe(item => {\r\n      if (item) this.convertSingleItem(item);\r\n    });\r\n\r\n    _conversionService.itemToRemove.subscribe(item => {\r\n        if (item) this.removeItemFromQueue(item);\r\n    });\r\n  }\r\n\r\n  get rewriteConfig(): boolean {\r\n    return this.conversionConfig ? this.conversionConfig.rewrite : true;\r\n  }\r\n\r\n  get browseConfig(): boolean {\r\n    return this.conversionConfig ? this.conversionConfig.browse : true;\r\n  }\r\n\r\n  get uploadConfig(): boolean {\r\n    return this.conversionConfig ? this.conversionConfig.upload : true;\r\n  }\r\n\r\n  fileDropped($event) {\r\n    if ($event) {\r\n      this._modalService.open(CommonModals.BrowseFiles);\r\n    }\r\n  }\r\n\r\n  openModal(id: string) {\r\n    this._modalService.open(id);\r\n  }\r\n\r\n  closeModal(id: string) {\r\n    this._modalService.close(id);\r\n  }\r\n\r\n  upload($event: string) {\r\n    this._conversionService.upload(null, $event, this.rewriteConfig).subscribe(() => {\r\n      this.selectDir('');\r\n    });\r\n  }\r\n\r\n  selectDir($event: string) {\r\n    this._conversionService.loadFiles($event).subscribe((files: ExtendedFileModel[]) => this.files = files || []);\r\n  }\r\n\r\n  convertSingleItem(item) {\r\n    const workItem = this.conversionItems.find(x => x.guid === item.guid \r\n                                                 && x.destinationType === item.destinationType);\r\n    workItem.converting = true;\r\n    this._conversionService.convert(item).subscribe(() => {\r\n      workItem.converting = false;\r\n      workItem.converted = true;\r\n    }, (() => {\r\n      // TODO: add error handling?\r\n      workItem.converting = false;\r\n    }));\r\n  }\r\n\r\n  convertAll(){\r\n    this.conversionItems.forEach((item) => {\r\n      if (!item.converted && !item.converting) {\r\n        this.convertSingleItem(item);\r\n      }\r\n    });\r\n  }\r\n\r\n  convertAllUnavailable(){\r\n    return this.conversionItems.length === 0 || this.conversionItems.filter(ci => ci.converted !== true).length === 0;\r\n  }\r\n\r\n  removeItemFromQueue(item: ConversionItemModel): void {\r\n    if (this.conversionItems.length > 0) {\r\n      this.conversionItems.forEach( (ci, index) => {\r\n        if(ci.guid === item.guid && ci.destinationType === item.destinationType) this.conversionItems.splice(index, 1);\r\n      });\r\n    }\r\n  }\r\n\r\n  selectAllItems(checked: boolean) {\r\n    this.files.forEach( (f) => {\r\n      if (!f.isDirectory && !f.directory) f.selected = checked;\r\n    });\r\n  }\r\n\r\n  itemAlreadyAdded(selectedItem: ConversionItemModel) : boolean {\r\n    return this.conversionItems.filter(ci => ci.destinationType === selectedItem.destinationType \r\n      && ci.guid === selectedItem.guid).length === 1;\r\n  }\r\n\r\n  isLeftBarOpen() {\r\n    return this.isDesktop ? true : this.leftBarOpen;\r\n  }\r\n}\r\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\r\nimport { BrowseFilesModalComponent, UploadFilesService, FileModel, ModalService, CommonModals } from '@groupdocs.examples.angular/common-components';\r\nimport { ConversionService } from '../conversion.service';\r\nimport {ConversionItemModel, ExtendedFileModel} from \"../models\";\r\n\r\nexport interface Option {\r\n  name: string;\r\n  value: any;\r\n  warning: boolean;\r\n}\r\n\r\n@Component({\r\n  selector: 'gd-conversion-browse-files-modal',\r\n  templateUrl: './conversion-browse-files-modal.component.html',\r\n  styleUrls: ['./conversion-browse-files-modal.component.less']\r\n})\r\nexport class ConversionBrowseFilesModalComponent extends BrowseFilesModalComponent implements OnInit {\r\n  private _format: string;\r\n  formats;\r\n  @Input() files: ExtendedFileModel[];\r\n  @Output() selectAll = new EventEmitter<boolean>();\r\n\r\n  dynamicOptions: Option[] = [];\r\n\r\n  constructor(_uploadService: UploadFilesService,\r\n    private _conversionService: ConversionService,\r\n    private _modalService: ModalService) {\r\n    super(_uploadService);\r\n  }\r\n\r\n  selectAllItems(checked: boolean){\r\n    this.selectAll.emit(checked);\r\n\r\n    this.dynamicOptions = this.prepareMultipleConversionTypes();\r\n  }\r\n\r\n  selectSingleItem(checked: boolean, file: ExtendedFileModel){\r\n    // TODO: refactor?\r\n    const selectedFiles = this.files.filter(f => f.guid === file.guid);\r\n    if (selectedFiles.length === 1){\r\n      selectedFiles[0].selected = checked;\r\n    }\r\n\r\n    this.dynamicOptions = this.prepareMultipleConversionTypes();\r\n  }\r\n\r\n  getLabelString(){\r\n    const label = 'Add selected'\r\n\r\n    if (this.files && this.files.length > 0) {\r\n      const selectedCount = this.files.filter(file => file.selected).length;\r\n      return selectedCount > 0 ? 'Add ' + selectedCount + ' selected' : label;\r\n    }\r\n    else\r\n    {\r\n      return label;\r\n    }\r\n  }\r\n\r\n  prepareMultipleConversionTypes() {\r\n    const allTypes = [];\r\n\r\n    this.files.filter(file => file.selected).forEach((f) => {\r\n      if (f.conversionTypes.length > 0) {\r\n        const types = Object.assign([], f.conversionTypes);\r\n        allTypes.push(types);\r\n      }\r\n    });\r\n\r\n    let longestArray = [];\r\n    allTypes.forEach((item) => {\r\n      if(item.length >= longestArray.length){\r\n        longestArray = item;\r\n      }\r\n    });\r\n\r\n    //add warnings\r\n    allTypes.forEach(typesArr => {\r\n        for (let i = 0; i < longestArray.length; i++) {\r\n          const type = (longestArray[i].value) ? longestArray[i].value : longestArray[i];\r\n          // TODO: reconsider second check\r\n          if (typesArr.indexOf(type) === -1 && typesArr.filter(t => t.name === type).length === 0) {\r\n              longestArray[i] = {\r\n                value: type,\r\n                name: type,\r\n                warning: true,\r\n                icon: this.getFormatIcon({name: 'dummyName.' + type, directory: false} as FileModel)\r\n              };\r\n          } else {\r\n            if(!longestArray[i].warning) {\r\n              longestArray[i] = {\r\n                value: type,\r\n                name: type,\r\n                warning: false,\r\n                icon: this.getFormatIcon({name: 'dummyName.' + type, directory: false} as FileModel)\r\n              };\r\n            }\r\n          }\r\n        }\r\n    }); \r\n\r\n    return longestArray;\r\n  }\r\n\r\n  selectFormat($event: any, file: ExtendedFileModel) {\r\n    // the case when we selecting format inline on the single file\r\n    if (file) {\r\n      this.selectAll.emit(false);\r\n      file.selected = true;\r\n    }\r\n    \r\n    this._format = $event.value;\r\n    const conversionItems = new Array<ConversionItemModel>();\r\n\r\n    this.files.forEach((f) => {\r\n        if (f.selected && !f.isDirectory && !f.directory){\r\n          const extension = f.guid.replace(/^.*\\./, '');\r\n          const destinationGuid = f.guid.replace(extension, this._format);\r\n          const destinationFileName = destinationGuid.replace(/^.*[\\\\\\/]/, '');\r\n\r\n          const conversionItem: ConversionItemModel = {\r\n            guid: f.guid,\r\n            directory: f.directory,\r\n            size: f.size,\r\n            name: f.name,\r\n            destinationType: $event.value,\r\n            isDirectory: f.isDirectory,\r\n            sizeString: this.getSize(f.size),\r\n            sourceIcon: this.getFormatIcon(f),\r\n            sourceFormatName: this.getFormatName(f),\r\n            destinationFileName: destinationFileName,\r\n            destinationFormatName: this.getFormatName({name: destinationFileName, directory: false} as FileModel),\r\n            destinationIcon: this.getFormatIcon({name: destinationFileName, directory: false} as FileModel),\r\n            converted: false,\r\n            // TODO: maybe there is a more beauty way?\r\n            converting: false,\r\n            warning: f.conversionTypes.indexOf(this._format) === -1 ? true : false\r\n          };\r\n\r\n          conversionItems.push(conversionItem);\r\n        }\r\n    })\r\n\r\n    this._conversionService.selectItems(conversionItems);\r\n    this._conversionService.selectFormat(this._format.toUpperCase());\r\n    this._modalService.close(CommonModals.BrowseFiles);\r\n\r\n    if ($event.warning){\r\n      this._modalService.open(CommonModals.InformationMessage);\r\n    }\r\n  }\r\n\r\n  createFormatOption(val: string) {\r\n    return {\r\n      value: val,\r\n      name: val,\r\n      icon: this.getFormatIcon({name: 'dummyName.' + val, directory: false} as FileModel)\r\n    }\r\n  }\r\n\r\n  formatOptions(formats) {\r\n    if (formats) {\r\n      const allTypes = new Array();\r\n      for (let i = 0; i < formats.length; i++) {\r\n        allTypes.push(this.createFormatOption(formats[i]));\r\n      }\r\n      return allTypes;\r\n    }\r\n  }\r\n\r\n  anyItemSelected() {\r\n    // TODO: reconsider such checks\r\n    if (this.files && this.files.length > 0) {\r\n      return this.files.filter(file => file.selected).length > 0;\r\n    }\r\n    else return false;\r\n  }\r\n\r\n  allItemsSelected() {\r\n    if (this.files && this.files.filter(file => !file.isDirectory && !file.directory).length > 0 && this.files.length > 0) {\r\n      return this.files.filter(file => !file.isDirectory && !file.directory && file.selected).length \r\n         === this.files.filter(file => !file.isDirectory && !file.directory).length;\r\n    }\r\n    else return false;\r\n  }\r\n}\r\n","import {Component, OnInit, Input} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'gd-information-modal',\r\n  templateUrl: './information-modal.component.html',\r\n  styleUrls: ['./information-modal.component.less']\r\n})\r\nexport class InformationModalComponent implements OnInit {\r\n\r\n  @Input() formatName: string;\r\n  @Input() warningCount: number;\r\n\r\n  constructor() {\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n}\r\n","import { Component, EventEmitter, Input, Output, OnInit } from '@angular/core';\r\nimport { ConversionItemModel } from '../models';\r\n\r\n@Component({\r\n  selector: 'gd-conversion-queue',\r\n  templateUrl: './conversion-queue.component.html',\r\n  styleUrls: ['./conversion-queue.component.less']\r\n})\r\n\r\nexport class ConversionQueueComponent implements OnInit {\r\n  @Input() items: ConversionItemModel[] = [];\r\n  @Output() selectedItemToConvert = new EventEmitter<ConversionItemModel>();\r\n\r\n  constructor() {\r\n  }\r\n  \r\n  ngOnInit(): void {\r\n  }\r\n\r\n  convertSingleItem($event: ConversionItemModel) {\r\n    this.selectedItemToConvert.emit($event);\r\n  }\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { ConversionItemModel } from '../models';\r\nimport {ConversionService} from \"../conversion.service\";\r\n\r\n@Component({\r\n  selector: 'gd-conversion-item',\r\n  templateUrl: './conversion-item.component.html',\r\n  styleUrls: ['./conversion-item.component.less']\r\n})\r\n\r\nexport class ConversionItemComponent implements OnInit {\r\n  @Input() item: ConversionItemModel;\r\n\r\n  constructor(private _conversionService: ConversionService) {\r\n  }\r\n  \r\n  ngOnInit(): void {\r\n  }\r\n\r\n  convert($event, item: ConversionItemModel) {\r\n    $event.preventDefault();\r\n    $event.stopPropagation();\r\n    this._conversionService.selectedItemToConvert(item);\r\n  }\r\n\r\n  downloadFile(item: ConversionItemModel) {\r\n    window.location.assign(this._conversionService.getDownloadUrl(item.destinationFileName));\r\n  }\r\n\r\n  removeItemFromQueue($event, item: ConversionItemModel) {\r\n    $event.preventDefault();\r\n    $event.stopPropagation();\r\n    this._conversionService.selectedItemToRemove(item);\r\n  }\r\n}\r\n","import {APP_INITIALIZER, ModuleWithProviders, NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {\r\n  Api,\r\n  CommonComponentsModule,\r\n  ConfigService,\r\n  ErrorInterceptorService\r\n} from \"@groupdocs.examples.angular/common-components\";\r\nimport {HTTP_INTERCEPTORS, HttpClientModule} from \"@angular/common/http\";\r\nimport {ConversionService} from \"./conversion.service\";\r\nimport {ConversionConfigService} from \"./conversion-config.service\";\r\nimport {ConversionAppComponent} from \"./conversion-app.component\";\r\nimport { ConversionBrowseFilesModalComponent } from './conversion-browse-files-modal/conversion-browse-files-modal.component';\r\nimport { InformationModalComponent } from './information-modal/information-modal.component';\r\nimport {library} from '@fortawesome/fontawesome-svg-core';\r\nimport {fas} from '@fortawesome/free-solid-svg-icons';\r\nimport {far} from '@fortawesome/free-regular-svg-icons';\r\nimport {FontAwesomeModule} from '@fortawesome/angular-fontawesome';\r\nimport {ConversionQueueComponent} from './conversion-queue/conversion-queue.component';\r\nimport {ConversionItemComponent} from './conversion-item/conversion-item.component';\r\n\r\nexport function initializeApp(conversionConfigService: ConversionConfigService) {\r\n  const result = () => conversionConfigService.load();\r\n  return result;\r\n}\r\n\r\n@NgModule({\r\n  declarations: [ConversionAppComponent, ConversionBrowseFilesModalComponent, InformationModalComponent, ConversionQueueComponent, ConversionItemComponent],\r\n  exports: [ConversionAppComponent, ConversionBrowseFilesModalComponent, InformationModalComponent, ConversionQueueComponent],\r\n  imports: [CommonModule,\r\n    CommonComponentsModule,\r\n    HttpClientModule,\r\n    FontAwesomeModule],\r\n  providers: [\r\n    ConversionService,\r\n    ConfigService,\r\n    ConversionConfigService,\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: ErrorInterceptorService,\r\n      multi: true\r\n    },\r\n    {\r\n      provide: APP_INITIALIZER,\r\n      useFactory: initializeApp,\r\n      deps: [ConversionConfigService], multi: true\r\n    }\r\n  ]\r\n})\r\nexport class ConversionModule {\r\n  constructor() {\r\n    library.add(fas, far);\r\n  }\r\n\r\n  static forRoot(apiEndpoint: string): ModuleWithProviders {\r\n    Api.DEFAULT_API_ENDPOINT = apiEndpoint;\r\n    return {\r\n      ngModule: ConversionModule\r\n    };\r\n  }\r\n}\r\n"]}