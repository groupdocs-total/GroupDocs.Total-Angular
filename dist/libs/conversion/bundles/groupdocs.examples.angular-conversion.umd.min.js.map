{"version":3,"sources":["../../../../node_modules/tslib/tslib.es6.js","ng://@groupdocs.examples.angular/conversion/lib/models.ts","ng://@groupdocs.examples.angular/conversion/lib/conversion.service.ts","ng://@groupdocs.examples.angular/conversion/lib/conversion-config.ts","ng://@groupdocs.examples.angular/conversion/lib/conversion-config.service.ts","ng://@groupdocs.examples.angular/conversion/lib/conversion-app.component.ts","ng://@groupdocs.examples.angular/conversion/lib/conversion-browse-files-modal/conversion-browse-files-modal.component.ts","ng://@groupdocs.examples.angular/conversion/lib/information-modal/information-modal.component.ts","ng://@groupdocs.examples.angular/conversion/lib/conversion-queue/conversion-queue.component.ts","ng://@groupdocs.examples.angular/conversion/lib/conversion-item/conversion-item.component.ts","ng://@groupdocs.examples.angular/conversion/lib/conversion.module.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","ConversionRequestModel","ConversionItemModel","ExtendedFileModel","ConversionService","_http","_config","this","_selectedItems","BehaviorSubject","_selectItems","asObservable","_selectedFormat","_selectFormat","_itemToConvert","itemToConvert","_itemToRemove","itemToRemove","defineProperty","prototype","selectItems","filesToConvert","next","selectFormat","selectedFormat","loadFiles","path","post","getConversionApiEndpoint","Api","LOAD_FILE_TREE","httpOptionsJson","upload","file","url","rewrite","formData","FormData","append","String","UPLOAD_DOCUMENTS","convert","req","added","destinationType","guid","size","destDocumentType","FileUtil","find","format","CONVERT_FILE","getDownloadUrl","DOWNLOAD_DOCUMENTS","selectedItemToConvert","item","selectedItemToRemove","Injectable","args","providedIn","HttpClient","ConfigService","ConversionConfig","ConversionConfigService","_conversionConfig","_updatedConfig","load","_this","Promise","resolve","reject","configEndpoint","getConfigEndpoint","CONVERSION_APP","get","toPromise","then","response","conversionConfig","catch","JSON","stringify","ConversionAppComponent","_modalService","_conversionService","configService","uploadFilesService","title","files","conversionItems","browseFilesModal","CommonModals","BrowseFiles","leftBarOpen","warningItems","updatedConfig","subscribe","config","uploadsChange","uploads","i","length","selectDir","selectedItems","forEach","selectedItem","warning","keys","itemAlreadyAdded","push","convertSingleItem","removeItemFromQueue","browse","fileDropped","$event","open","openModal","id","closeModal","close","rewriteConfig","workItem","x","converting","converted","convertAll","convertAllUnavailable","filter","ci","index","splice","selectAllItems","checked","f","isDirectory","directory","selected","isLeftBarOpen","isDesktop","Component","selector","template","ModalService","UploadFilesService","ConversionBrowseFilesModalComponent","_super","_uploadService","call","selectAll","EventEmitter","dynamicOptions","__","constructor","create","tslib_1.__extends","emit","prepareMultipleConversionTypes","selectSingleItem","selectedFiles","getLabelString","selectedCount","allTypes","conversionTypes","types","assign","longestArray","typesArr","type","value","indexOf","t","name","icon","getFormatIcon","_format","extension","replace","destinationFileName","conversionItem","sizeString","getSize","sourceIcon","sourceFormatName","getFormatName","destinationFormatName","destinationIcon","toUpperCase","InformationMessage","createFormatOption","val","formatOptions","formats","anyItemSelected","allItemsSelected","Input","Output","BrowseFilesModalComponent","InformationModalComponent","ngOnInit","ConversionQueueComponent","items","ConversionItemComponent","preventDefault","stopPropagation","downloadFile","window","location","initializeApp","conversionConfigService","ConversionModule","library","add","fas","far","forRoot","apiEndpoint","DEFAULT_API_ENDPOINT","ngModule","NgModule","declarations","exports","imports","CommonModule","CommonComponentsModule","HttpClientModule","FontAwesomeModule","providers","provide","HTTP_INTERCEPTORS","useClass","ErrorInterceptorService","multi","APP_INITIALIZER","useFactory","deps"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import {FileModel} from \"@groupdocs.examples.angular/common-components\";\n\nexport class ConversionRequestModel{\n  added: boolean;\n  destinationType: string;\n  guid: string;\n  size: number;\n  destDocumentType: number;\n}\n\nexport class ConversionItemModel implements FileModel {\n    guid: string;\n    directory: boolean;\n    size: number;\n    name: string;\n    destinationType: string;\n    sizeString: string;\n    destinationFileName: string;\n    destinationFormatName: string;\n    sourceIcon: string;\n    sourceFormatName: string;\n    destinationIcon: string;\n    converted: boolean;\n    converting: boolean;\n    isDirectory: boolean;\n    warning: boolean;\n  }\n\n  export class ExtendedFileModel implements FileModel {\n    guid: string;\n    // TODO: fix dublicates below (question)\n    directory: boolean;\n    isDirectory: boolean;\n    size: number;\n    name: string;\n    selected: boolean;\n    conversionTypes: any;\n  }\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport {\n  Api, ConfigService, FileCredentials, SaveFile, FileModel, FileUtil\n} from \"@groupdocs.examples.angular/common-components\";\nimport {Observable, BehaviorSubject, Observer} from \"rxjs\";\nimport { ConversionItemModel, ConversionRequestModel } from './models';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class ConversionService {\n  private _selectedItems: BehaviorSubject<ConversionItemModel[]> = new BehaviorSubject(new Array<ConversionItemModel>());\n  private _selectItems: Observable<ConversionItemModel[]> = this._selectedItems.asObservable();\n  private _selectedFormat: BehaviorSubject<string> = new BehaviorSubject<string>(null);\n  private _selectFormat: Observable<string> = this._selectedFormat.asObservable();\n\n  private _itemToConvert = new BehaviorSubject<ConversionItemModel>(null);\n  itemToConvert = this._itemToConvert.asObservable();\n\n  private _itemToRemove = new BehaviorSubject<ConversionItemModel>(null);\n  itemToRemove = this._itemToRemove.asObservable();\n\n  constructor(private _http: HttpClient, private _config: ConfigService) {\n  }\n\n  get selectedItems() {\n    return this._selectItems;\n  }\n\n  get selectedFormat() {\n    return this._selectFormat;\n  }\n\n  selectItems(filesToConvert: ConversionItemModel[]) {\n    this._selectedItems.next(filesToConvert);\n  }\n\n  selectFormat(selectedFormat: string) {\n    this._selectedFormat.next(selectedFormat);\n  }\n\n  loadFiles(path: string) {\n    return this._http.post(this._config.getConversionApiEndpoint() + Api.LOAD_FILE_TREE, {'path': path}, Api.httpOptionsJson);\n  }\n\n  upload(file: File, url: string, rewrite: boolean) {\n    const formData = new FormData();\n    formData.append(\"file\", file);\n    formData.append('rewrite', String(rewrite));\n    if (url) {\n      formData.append(\"url\", url);\n    }\n\n    return this._http.post(this._config.getConversionApiEndpoint() + Api.UPLOAD_DOCUMENTS, formData);\n  }\n\n  convert(file: ConversionItemModel) {\n    const req = new ConversionRequestModel();\n    req.added = true;\n    req.destinationType = file.destinationType;\n    req.guid = file.guid;\n    req.size = file.size;\n    req.destDocumentType = FileUtil.find(file.destinationType, false).format;\n    return this._http.post(this._config.getConversionApiEndpoint() + Api.CONVERT_FILE, req);\n  }\n\n  getDownloadUrl(guid: string) {\n    return this._config.getConversionApiEndpoint() + Api.DOWNLOAD_DOCUMENTS + '/?path=' + guid;\n  }\n\n  selectedItemToConvert(item: ConversionItemModel) {\n    this._itemToConvert.next(item);\n  }\n\n  selectedItemToRemove(item: ConversionItemModel) {\n    this._itemToRemove.next(item);\n  }\n}\n","export class ConversionConfig {\n  rewrite: boolean;\n  pageSelector: boolean;\n  download: boolean;\n  upload: boolean;\n  print: boolean;\n  browse: boolean;\n  enableRightClick: boolean;\n}\n","import {Injectable} from '@angular/core';\nimport {ConversionConfig} from \"./conversion-config\";\nimport {Api, ConfigService} from \"@groupdocs.examples.angular/common-components\";\nimport {HttpClient} from \"@angular/common/http\";\nimport {BehaviorSubject, Observable} from \"rxjs\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConversionConfigService {\n  private _conversionConfig: BehaviorSubject<ConversionConfig> = new BehaviorSubject(new ConversionConfig());\n  private _updatedConfig: Observable<ConversionConfig> = this._conversionConfig.asObservable();\n\n  constructor(private _http: HttpClient, private _config: ConfigService) {\n  }\n\n  get updatedConfig() {\n    return this._updatedConfig;\n  }\n\n  load() {\n    return new Promise<void>((resolve, reject) => {\n      const configEndpoint = this._config.getConfigEndpoint(Api.CONVERSION_APP);\n      this._http.get(configEndpoint, Api.httpOptionsJson).toPromise().then((response: ConversionConfig) => {\n        const conversionConfig = <ConversionConfig>response;\n        this._conversionConfig.next(conversionConfig);\n        resolve();\n      }).catch((response: any) => {\n        reject(`Could not load conversion config: ${JSON.stringify(response)}`);\n      });\n    });\n  }\n\n}\n","import {Component} from '@angular/core';\nimport {ConversionConfigService} from \"./conversion-config.service\";\nimport {ConversionService} from \"./conversion.service\";\nimport { ModalService,\n  CommonModals,\n  UploadFilesService\n} from \"@groupdocs.examples.angular/common-components\";\nimport {ConversionConfig} from \"./conversion-config\";\nimport {ConversionItemModel, ExtendedFileModel} from \"./models\"\n\n@Component({\n  selector: 'gd-conversion',\n  templateUrl: './conversion-app.component.html',\n  styleUrls: ['./conversion-app.component.less']\n})\nexport class ConversionAppComponent {\n  title = 'conversion';\n  files: ExtendedFileModel[] = [];\n  conversionItems: ConversionItemModel[] = [];\n  browseFilesModal = CommonModals.BrowseFiles;\n  isDesktop: boolean;\n  leftBarOpen = false;\n  conversionConfig: ConversionConfig;\n  result: any;\n  selectedFormat: string;\n  warningItems = 0;\n\n  constructor(private _modalService: ModalService,\n              private _conversionService: ConversionService,\n              configService: ConversionConfigService,\n              uploadFilesService: UploadFilesService) {\n\n    configService.updatedConfig.subscribe((config) => {\n      this.conversionConfig = config;\n    });\n\n    uploadFilesService.uploadsChange.subscribe((uploads) => {\n      if (uploads) {\n        let i: number;\n        for (i = 0; i < uploads.length; i++) {\n          this._conversionService.upload(uploads.item(i), '', this.conversionConfig.rewrite).subscribe(() => {\n            this.selectDir('');\n          });\n        }\n      }\n    });\n\n    _conversionService.selectedItems.subscribe((selectedItems) => {\n      selectedItems.forEach((selectedItem) => {\n        if (selectedItem.warning) this.warningItems++;\n        if (Object.keys(selectedItem).length > 0 && !this.itemAlreadyAdded(selectedItem)) {\n          this.conversionItems.push(selectedItem as ConversionItemModel);\n        }\n      });\n    });\n\n    _conversionService.selectedFormat.subscribe((selectedFormat) => {\n        this.selectedFormat = selectedFormat;\n    });\n\n    _conversionService.itemToConvert.subscribe(item => {\n      if (item) this.convertSingleItem(item);\n    });\n\n    _conversionService.itemToRemove.subscribe(item => {\n        if (item) this.removeItemFromQueue(item);\n    });\n  }\n\n  get rewriteConfig(): boolean {\n    return this.conversionConfig ? this.conversionConfig.rewrite : true;\n  }\n\n  get browseConfig(): boolean {\n    return this.conversionConfig ? this.conversionConfig.browse : true;\n  }\n\n  get uploadConfig(): boolean {\n    return this.conversionConfig ? this.conversionConfig.upload : true;\n  }\n\n  fileDropped($event) {\n    if ($event) {\n      this._modalService.open(CommonModals.BrowseFiles);\n    }\n  }\n\n  openModal(id: string) {\n    this._modalService.open(id);\n  }\n\n  closeModal(id: string) {\n    this._modalService.close(id);\n  }\n\n  upload($event: string) {\n    this._conversionService.upload(null, $event, this.rewriteConfig).subscribe(() => {\n      this.selectDir('');\n    });\n  }\n\n  selectDir($event: string) {\n    this._conversionService.loadFiles($event).subscribe((files: ExtendedFileModel[]) => this.files = files || []);\n  }\n\n  convertSingleItem(item) {\n    const workItem = this.conversionItems.find(x => x.guid === item.guid \n                                                 && x.destinationType === item.destinationType);\n    workItem.converting = true;\n    this._conversionService.convert(item).subscribe(() => {\n      workItem.converting = false;\n      workItem.converted = true;\n    }, (() => {\n      // TODO: add error handling?\n      workItem.converting = false;\n    }));\n  }\n\n  convertAll(){\n    this.conversionItems.forEach((item) => {\n      if (!item.converted && !item.converting) {\n        this.convertSingleItem(item);\n      }\n    });\n  }\n\n  convertAllUnavailable(){\n    return this.conversionItems.length === 0 || this.conversionItems.filter(ci => ci.converted !== true).length === 0;\n  }\n\n  removeItemFromQueue(item: ConversionItemModel): void {\n    if (this.conversionItems.length > 0) {\n      this.conversionItems.forEach( (ci, index) => {\n        if(ci.guid === item.guid && ci.destinationType === item.destinationType) this.conversionItems.splice(index, 1);\n      });\n    }\n  }\n\n  selectAllItems(checked: boolean) {\n    this.files.forEach( (f) => {\n      if (!f.isDirectory && !f.directory) f.selected = checked;\n    });\n  }\n\n  itemAlreadyAdded(selectedItem: ConversionItemModel) : boolean {\n    return this.conversionItems.filter(ci => ci.destinationType === selectedItem.destinationType \n      && ci.guid === selectedItem.guid).length === 1;\n  }\n\n  isLeftBarOpen() {\n    return this.isDesktop ? true : this.leftBarOpen;\n  }\n}\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport { BrowseFilesModalComponent, UploadFilesService, FileModel, ModalService, CommonModals } from '@groupdocs.examples.angular/common-components';\nimport { ConversionService } from '../conversion.service';\nimport {ConversionItemModel, ExtendedFileModel} from \"../models\";\n\nexport interface Option {\n  name: string;\n  value: any;\n  warning: boolean;\n}\n\n@Component({\n  selector: 'gd-conversion-browse-files-modal',\n  templateUrl: './conversion-browse-files-modal.component.html',\n  styleUrls: ['./conversion-browse-files-modal.component.less']\n})\nexport class ConversionBrowseFilesModalComponent extends BrowseFilesModalComponent implements OnInit {\n  private _format: string;\n  formats;\n  @Input() files: ExtendedFileModel[];\n  @Output() selectAll = new EventEmitter<boolean>();\n\n  dynamicOptions: Option[] = [];\n\n  constructor(_uploadService: UploadFilesService,\n    private _conversionService: ConversionService,\n    private _modalService: ModalService) {\n    super(_uploadService);\n  }\n\n  selectAllItems(checked: boolean){\n    this.selectAll.emit(checked);\n\n    this.dynamicOptions = this.prepareMultipleConversionTypes();\n  }\n\n  selectSingleItem(checked: boolean, file: ExtendedFileModel){\n    // TODO: refactor?\n    const selectedFiles = this.files.filter(f => f.guid === file.guid);\n    if (selectedFiles.length === 1){\n      selectedFiles[0].selected = checked;\n    }\n\n    this.dynamicOptions = this.prepareMultipleConversionTypes();\n  }\n\n  getLabelString(){\n    const label = 'Add selected'\n\n    if (this.files && this.files.length > 0) {\n      const selectedCount = this.files.filter(file => file.selected).length;\n      return selectedCount > 0 ? 'Add ' + selectedCount + ' selected' : label;\n    }\n    else\n    {\n      return label;\n    }\n  }\n\n  prepareMultipleConversionTypes() {\n    const allTypes = [];\n\n    this.files.filter(file => file.selected).forEach((f) => {\n      if (f.conversionTypes.length > 0) {\n        const types = Object.assign([], f.conversionTypes);\n        allTypes.push(types);\n      }\n    });\n\n    let longestArray = [];\n    allTypes.forEach((item) => {\n      if(item.length >= longestArray.length){\n        longestArray = item;\n      }\n    });\n\n    //add warnings\n    allTypes.forEach(typesArr => {\n        for (let i = 0; i < longestArray.length; i++) {\n          const type = (longestArray[i].value) ? longestArray[i].value : longestArray[i];\n          // TODO: reconsider second check\n          if (typesArr.indexOf(type) === -1 && typesArr.filter(t => t.name === type).length === 0) {\n              longestArray[i] = {\n                value: type,\n                name: type,\n                warning: true,\n                icon: this.getFormatIcon({name: 'dummyName.' + type, directory: false} as FileModel)\n              };\n          } else {\n            if(!longestArray[i].warning) {\n              longestArray[i] = {\n                value: type,\n                name: type,\n                warning: false,\n                icon: this.getFormatIcon({name: 'dummyName.' + type, directory: false} as FileModel)\n              };\n            }\n          }\n        }\n    }); \n\n    return longestArray;\n  }\n\n  selectFormat($event: any, file: ExtendedFileModel) {\n    // the case when we selecting format inline on the single file\n    if (file) {\n      this.selectAll.emit(false);\n      file.selected = true;\n    }\n    \n    this._format = $event.value;\n    const conversionItems = new Array<ConversionItemModel>();\n\n    this.files.forEach((f) => {\n        if (f.selected && !f.isDirectory && !f.directory){\n          const extension = f.guid.replace(/^.*\\./, '');\n          const destinationGuid = f.guid.replace(extension, this._format);\n          const destinationFileName = destinationGuid.replace(/^.*[\\\\\\/]/, '');\n\n          const conversionItem: ConversionItemModel = {\n            guid: f.guid,\n            directory: f.directory,\n            size: f.size,\n            name: f.name,\n            destinationType: $event.value,\n            isDirectory: f.isDirectory,\n            sizeString: this.getSize(f.size),\n            sourceIcon: this.getFormatIcon(f),\n            sourceFormatName: this.getFormatName(f),\n            destinationFileName: destinationFileName,\n            destinationFormatName: this.getFormatName({name: destinationFileName, directory: false} as FileModel),\n            destinationIcon: this.getFormatIcon({name: destinationFileName, directory: false} as FileModel),\n            converted: false,\n            // TODO: maybe there is a more beauty way?\n            converting: false,\n            warning: f.conversionTypes.indexOf(this._format) === -1 ? true : false\n          };\n\n          conversionItems.push(conversionItem);\n        }\n    })\n\n    this._conversionService.selectItems(conversionItems);\n    this._conversionService.selectFormat(this._format.toUpperCase());\n    this._modalService.close(CommonModals.BrowseFiles);\n\n    if ($event.warning){\n      this._modalService.open(CommonModals.InformationMessage);\n    }\n  }\n\n  createFormatOption(val: string) {\n    return {\n      value: val,\n      name: val,\n      icon: this.getFormatIcon({name: 'dummyName.' + val, directory: false} as FileModel)\n    }\n  }\n\n  formatOptions(formats) {\n    if (formats) {\n      const allTypes = new Array();\n      for (let i = 0; i < formats.length; i++) {\n        allTypes.push(this.createFormatOption(formats[i]));\n      }\n      return allTypes;\n    }\n  }\n\n  anyItemSelected() {\n    // TODO: reconsider such checks\n    if (this.files && this.files.length > 0) {\n      return this.files.filter(file => file.selected).length > 0;\n    }\n    else return false;\n  }\n\n  allItemsSelected() {\n    if (this.files && this.files.filter(file => !file.isDirectory && !file.directory).length > 0 && this.files.length > 0) {\n      return this.files.filter(file => !file.isDirectory && !file.directory && file.selected).length \n         === this.files.filter(file => !file.isDirectory && !file.directory).length;\n    }\n    else return false;\n  }\n}\n","import {Component, OnInit, Input} from '@angular/core';\n\n@Component({\n  selector: 'gd-information-modal',\n  templateUrl: './information-modal.component.html',\n  styleUrls: ['./information-modal.component.less']\n})\nexport class InformationModalComponent implements OnInit {\n\n  @Input() formatName: string;\n  @Input() warningCount: number;\n\n  constructor() {\n  }\n\n  ngOnInit() {\n  }\n}\n","import { Component, EventEmitter, Input, Output, OnInit } from '@angular/core';\nimport { ConversionItemModel } from '../models';\n\n@Component({\n  selector: 'gd-conversion-queue',\n  templateUrl: './conversion-queue.component.html',\n  styleUrls: ['./conversion-queue.component.less']\n})\n\nexport class ConversionQueueComponent implements OnInit {\n  @Input() items: ConversionItemModel[] = [];\n  @Output() selectedItemToConvert = new EventEmitter<ConversionItemModel>();\n\n  constructor() {\n  }\n  \n  ngOnInit(): void {\n  }\n\n  convertSingleItem($event: ConversionItemModel) {\n    this.selectedItemToConvert.emit($event);\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { ConversionItemModel } from '../models';\nimport {ConversionService} from \"../conversion.service\";\n\n@Component({\n  selector: 'gd-conversion-item',\n  templateUrl: './conversion-item.component.html',\n  styleUrls: ['./conversion-item.component.less']\n})\n\nexport class ConversionItemComponent implements OnInit {\n  @Input() item: ConversionItemModel;\n\n  constructor(private _conversionService: ConversionService) {\n  }\n  \n  ngOnInit(): void {\n  }\n\n  convert($event, item: ConversionItemModel) {\n    $event.preventDefault();\n    $event.stopPropagation();\n    this._conversionService.selectedItemToConvert(item);\n  }\n\n  downloadFile(item: ConversionItemModel) {\n    window.location.assign(this._conversionService.getDownloadUrl(item.destinationFileName));\n  }\n\n  removeItemFromQueue($event, item: ConversionItemModel) {\n    $event.preventDefault();\n    $event.stopPropagation();\n    this._conversionService.selectedItemToRemove(item);\n  }\n}\n","import {APP_INITIALIZER, ModuleWithProviders, NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {\n  Api,\n  CommonComponentsModule,\n  ConfigService,\n  ErrorInterceptorService\n} from \"@groupdocs.examples.angular/common-components\";\nimport {HTTP_INTERCEPTORS, HttpClientModule} from \"@angular/common/http\";\nimport {ConversionService} from \"./conversion.service\";\nimport {ConversionConfigService} from \"./conversion-config.service\";\nimport {ConversionAppComponent} from \"./conversion-app.component\";\nimport { ConversionBrowseFilesModalComponent } from './conversion-browse-files-modal/conversion-browse-files-modal.component';\nimport { InformationModalComponent } from './information-modal/information-modal.component';\nimport {library} from '@fortawesome/fontawesome-svg-core';\nimport {fas} from '@fortawesome/free-solid-svg-icons';\nimport {far} from '@fortawesome/free-regular-svg-icons';\nimport {FontAwesomeModule} from '@fortawesome/angular-fontawesome';\nimport {ConversionQueueComponent} from './conversion-queue/conversion-queue.component';\nimport {ConversionItemComponent} from './conversion-item/conversion-item.component';\n\nexport function initializeApp(conversionConfigService: ConversionConfigService) {\n  const result = () => conversionConfigService.load();\n  return result;\n}\n\n@NgModule({\n  declarations: [ConversionAppComponent, ConversionBrowseFilesModalComponent, InformationModalComponent, ConversionQueueComponent, ConversionItemComponent],\n  exports: [ConversionAppComponent, ConversionBrowseFilesModalComponent, InformationModalComponent, ConversionQueueComponent],\n  imports: [CommonModule,\n    CommonComponentsModule,\n    HttpClientModule,\n    FontAwesomeModule],\n  providers: [\n    ConversionService,\n    ConfigService,\n    ConversionConfigService,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: ErrorInterceptorService,\n      multi: true\n    },\n    {\n      provide: APP_INITIALIZER,\n      useFactory: initializeApp,\n      deps: [ConversionConfigService], multi: true\n    }\n  ]\n})\nexport class ConversionModule {\n  constructor() {\n    library.add(fas, far);\n  }\n\n  static forRoot(apiEndpoint: string): ModuleWithProviders {\n    Api.DEFAULT_API_ENDPOINT = apiEndpoint;\n    return {\n      ngModule: ConversionModule\n    };\n  }\n}\n"]}