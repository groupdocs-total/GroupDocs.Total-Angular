{"version":3,"sources":["../../../../node_modules/tslib/tslib.es6.js","ng://@groupdocs.examples.angular/conversion/lib/models.ts","ng://@groupdocs.examples.angular/conversion/lib/conversion.service.ts","ng://@groupdocs.examples.angular/conversion/lib/conversion-config.ts","ng://@groupdocs.examples.angular/conversion/lib/conversion-config.service.ts","ng://@groupdocs.examples.angular/conversion/lib/conversion-app.component.ts","ng://@groupdocs.examples.angular/conversion/lib/conversion-browse-files-modal/conversion-browse-files-modal.component.ts","ng://@groupdocs.examples.angular/conversion/lib/conversion-queue/conversion-queue.component.ts","ng://@groupdocs.examples.angular/conversion/lib/conversion-item/conversion-item.component.ts","ng://@groupdocs.examples.angular/conversion/lib/dnd-init-state/dnd-init-state.component.ts","ng://@groupdocs.examples.angular/conversion/lib/conversion.module.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","ConversionRequestModel","ConversionService","_http","_config","this","_selectedFormat","BehaviorSubject","_selectFormats","asObservable","_itemToConvert","itemToConvert","_itemToRemove","itemToRemove","defineProperty","prototype","selectItems","filesToConvert","next","loadFiles","path","post","getConversionApiEndpoint","Api","LOAD_FILE_TREE","httpOptionsJson","upload","file","url","rewrite","formData","FormData","append","String","UPLOAD_DOCUMENTS","convert","req","added","destinationType","guid","size","CONVERT_FILE","getDownloadUrl","DOWNLOAD_DOCUMENTS","selectedItemToConvert","item","selectedItemToRemove","Injectable","args","providedIn","HttpClient","ConfigService","ConversionConfig","ConversionConfigService","_conversionConfig","_updatedConfig","load","_this","Promise","resolve","reject","configEndpoint","getConfigEndpoint","CONVERSION_APP","get","toPromise","then","response","conversionConfig","catch","JSON","stringify","ConversionAppComponent","_modalService","_conversionService","configService","uploadFilesService","title","files","conversionItems","browseFilesModal","CommonModals","BrowseFiles","leftBarOpen","updatedConfig","subscribe","config","uploadsChange","uploads","i","length","selectDir","selectedItems","selectedFormats","forEach","selectedFormat","keys","itemAlreadyAdded","push","convertSingleItem","removeItemFromQueue","browse","openModal","id","open","closeModal","close","$event","rewriteConfig","workItem","find","x","converting","converted","convertAll","convertAllUnavailable","filter","ci","index","splice","selectAllItems","checked","f","isDirectory","directory","selected","isLeftBarOpen","isDesktop","Component","selector","template","ModalService","UploadFilesService","ConversionBrowseFilesModalComponent","_uploadService","_super","call","selectAll","EventEmitter","dynamicOptions","__","constructor","create","tslib_1.__extends","selectDD","entry","console","log","emit","prepareMultipleConversionTypes","selectSingleItem","selectedFiles","getLabelString","selectedCount","allTypes","conversionTypes","types","assign","longestArray","typesArr","type","value","indexOf","t","name","warning","icon","getFormatIcon","selectFormat","_format","extension","replace","destinationFileName","conversionItem","sizeString","getSize","sourceIcon","sourceFormatName","getFormatName","destinationFormatName","destinationIcon","createFormatOption","val","formatOptions","formats","anyItemSelected","allItemsSelected","Input","Output","BrowseFilesModalComponent","ConversionQueueComponent","items","ngOnInit","ConversionItemComponent","preventDefault","stopPropagation","downloadFile","window","location","DndInitStateComponent","dropped","initializeApp","conversionConfigService","ConversionModule","library","add","fas","far","forRoot","apiEndpoint","DEFAULT_API_ENDPOINT","ngModule","NgModule","declarations","exports","imports","CommonModule","CommonComponentsModule","HttpClientModule","FontAwesomeModule","providers","provide","HTTP_INTERCEPTORS","useClass","ErrorInterceptorService","multi","APP_INITIALIZER","useFactory","deps"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import {FileModel} from \"@groupdocs.examples.angular/common-components\";\n\nexport class ConversionRequestModel{\n  added: boolean;\n  destinationType: string;\n  guid: string;\n  size: number;\n}\n\nexport class ConversionItemModel implements FileModel {\n    guid: string;\n    directory: boolean;\n    size: number;\n    name: string;\n    destinationType: string;\n    sizeString: string;\n    destinationFileName: string;\n    destinationFormatName: string;\n    sourceIcon: string;\n    sourceFormatName: string;\n    destinationIcon: string;\n    converted: boolean;\n    converting: boolean;\n    isDirectory: boolean;\n  }\n\n  export class ExtendedFileModel implements FileModel {\n    guid: string;\n    // TODO: fix dublicates below (question)\n    directory: boolean;\n    isDirectory: boolean;\n    size: number;\n    name: string;\n    selected: boolean;\n    conversionTypes: any;\n  }\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport {\n  Api, ConfigService, FileCredentials, SaveFile, FileModel\n} from \"@groupdocs.examples.angular/common-components\";\nimport {Observable, BehaviorSubject, Observer} from \"rxjs\";\nimport { ConversionItemModel, ConversionRequestModel } from './models';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class ConversionService {\n  private _selectedFormat: BehaviorSubject<ConversionItemModel[]> = new BehaviorSubject(new Array<ConversionItemModel>());\n  private _selectFormats: Observable<ConversionItemModel[]> = this._selectedFormat.asObservable();\n\n  private _itemToConvert = new BehaviorSubject<ConversionItemModel>(null);\n  itemToConvert = this._itemToConvert.asObservable();\n\n  private _itemToRemove = new BehaviorSubject<ConversionItemModel>(null);\n  itemToRemove = this._itemToRemove.asObservable();\n\n  constructor(private _http: HttpClient, private _config: ConfigService) {\n  }\n\n  get selectedItems() {\n    return this._selectFormats;\n  }\n\n  selectItems(filesToConvert: ConversionItemModel[]) {\n    this._selectedFormat.next(filesToConvert);\n  }\n\n  loadFiles(path: string) {\n    return this._http.post(this._config.getConversionApiEndpoint() + Api.LOAD_FILE_TREE, {'path': path}, Api.httpOptionsJson);\n  }\n\n  upload(file: File, url: string, rewrite: boolean) {\n    const formData = new FormData();\n    formData.append(\"file\", file);\n    formData.append('rewrite', String(rewrite));\n    if (url) {\n      formData.append(\"url\", url);\n    }\n\n    return this._http.post(this._config.getConversionApiEndpoint() + Api.UPLOAD_DOCUMENTS, formData);\n  }\n\n  convert(file: ConversionItemModel) {\n    const req = new ConversionRequestModel();\n    req.added = true;\n    req.destinationType = file.destinationType;\n    req.guid = file.guid;\n    req.size = file.size;\n    return this._http.post(this._config.getConversionApiEndpoint() + Api.CONVERT_FILE, req);\n  }\n\n  getDownloadUrl(guid: string) {\n    return this._config.getConversionApiEndpoint() + Api.DOWNLOAD_DOCUMENTS + '/?path=' + guid;\n  }\n\n  selectedItemToConvert(item: ConversionItemModel) {\n    this._itemToConvert.next(item);\n  }\n\n  selectedItemToRemove(item: ConversionItemModel) {\n    this._itemToRemove.next(item);\n  }\n}\n","export class ConversionConfig {\n  rewrite: boolean;\n  pageSelector: boolean;\n  download: boolean;\n  upload: boolean;\n  print: boolean;\n  browse: boolean;\n  enableRightClick: boolean;\n}\n","import {Injectable} from '@angular/core';\nimport {ConversionConfig} from \"./conversion-config\";\nimport {Api, ConfigService} from \"@groupdocs.examples.angular/common-components\";\nimport {HttpClient} from \"@angular/common/http\";\nimport {BehaviorSubject, Observable} from \"rxjs\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConversionConfigService {\n  private _conversionConfig: BehaviorSubject<ConversionConfig> = new BehaviorSubject(new ConversionConfig());\n  private _updatedConfig: Observable<ConversionConfig> = this._conversionConfig.asObservable();\n\n  constructor(private _http: HttpClient, private _config: ConfigService) {\n  }\n\n  get updatedConfig() {\n    return this._updatedConfig;\n  }\n\n  load() {\n    return new Promise<void>((resolve, reject) => {\n      const configEndpoint = this._config.getConfigEndpoint(Api.CONVERSION_APP);\n      this._http.get(configEndpoint, Api.httpOptionsJson).toPromise().then((response: ConversionConfig) => {\n        const conversionConfig = <ConversionConfig>response;\n        this._conversionConfig.next(conversionConfig);\n        resolve();\n      }).catch((response: any) => {\n        reject(`Could not load conversion config: ${JSON.stringify(response)}`);\n      });\n    });\n  }\n\n}\n","import {Component} from '@angular/core';\nimport {ConversionConfigService} from \"./conversion-config.service\";\nimport {ConversionService} from \"./conversion.service\";\nimport { ModalService,\n  CommonModals,\n  UploadFilesService\n} from \"@groupdocs.examples.angular/common-components\";\nimport {ConversionConfig} from \"./conversion-config\";\nimport {ConversionItemModel, ExtendedFileModel} from \"./models\"\n\n@Component({\n  selector: 'gd-conversion',\n  templateUrl: './conversion-app.component.html',\n  styleUrls: ['./conversion-app.component.less']\n})\nexport class ConversionAppComponent {\n  title = 'conversion';\n  files: ExtendedFileModel[] = [];\n  conversionItems: ConversionItemModel[] = [];\n  browseFilesModal = CommonModals.BrowseFiles;\n  isDesktop: boolean;\n  leftBarOpen = false;\n  conversionConfig: ConversionConfig;\n  result: any;\n\n  constructor(private _modalService: ModalService,\n              private _conversionService: ConversionService,\n              configService: ConversionConfigService,\n              uploadFilesService: UploadFilesService) {\n\n    configService.updatedConfig.subscribe((config) => {\n      this.conversionConfig = config;\n    });\n\n    uploadFilesService.uploadsChange.subscribe((uploads) => {\n      if (uploads) {\n        let i: number;\n        for (i = 0; i < uploads.length; i++) {\n          this._conversionService.upload(uploads.item(i), '', this.conversionConfig.rewrite).subscribe(() => {\n            this.selectDir('');\n          });\n        }\n      }\n    });\n\n    _conversionService.selectedItems.subscribe((selectedFormats) => {\n      selectedFormats.forEach((selectedFormat) => {\n        if (Object.keys(selectedFormat).length > 0 && !this.itemAlreadyAdded(selectedFormat)) {\n          this.conversionItems.push(selectedFormat as ConversionItemModel);\n        }\n      });\n    });\n\n    _conversionService.itemToConvert.subscribe(item => {\n      if (item) this.convertSingleItem(item);\n    });\n\n    _conversionService.itemToRemove.subscribe(item => {\n        if (item) this.removeItemFromQueue(item);\n    });\n  }\n\n  get rewriteConfig(): boolean {\n    return this.conversionConfig ? this.conversionConfig.rewrite : true;\n  }\n\n  get browseConfig(): boolean {\n    return this.conversionConfig ? this.conversionConfig.browse : true;\n  }\n\n  get uploadConfig(): boolean {\n    return this.conversionConfig ? this.conversionConfig.upload : true;\n  }\n\n  openModal(id: string) {\n    this._modalService.open(id);\n  }\n\n  closeModal(id: string) {\n    this._modalService.close(id);\n  }\n\n  upload($event: string) {\n    this._conversionService.upload(null, $event, this.rewriteConfig).subscribe(() => {\n      this.selectDir('');\n    });\n  }\n\n  selectDir($event: string) {\n    this._conversionService.loadFiles($event).subscribe((files: ExtendedFileModel[]) => this.files = files || []);\n  }\n\n  convertSingleItem(item) {\n    const workItem = this.conversionItems.find(x => x.guid === item.guid);\n    workItem.converting = true;\n    this._conversionService.convert(item).subscribe(() => {\n      workItem.converting = false;\n      workItem.converted = true;\n    }, (() => {\n      // TODO: add error handling?\n      workItem.converting = false;\n    }));\n  }\n\n  convertAll(){\n      this.conversionItems.forEach((item) => {\n        this.convertSingleItem(item);\n      });\n  }\n\n  convertAllUnavailable(){\n    return this.conversionItems.length === 0 || this.conversionItems.filter(ci => ci.converted !== true).length === 0;\n  }\n\n  removeItemFromQueue(item: ConversionItemModel): void {\n    if (this.conversionItems.length > 0) {\n      this.conversionItems.forEach( (ci, index) => {\n        if(ci.guid === item.guid && ci.destinationType === item.destinationType) this.conversionItems.splice(index, 1);\n      });\n    }\n  }\n\n  selectAllItems(checked: boolean) {\n    this.files.forEach( (f) => {\n      if (!f.isDirectory && !f.directory) f.selected = checked;\n    });\n  }\n\n  itemAlreadyAdded(selectedFormat: ConversionItemModel) : boolean {\n    return this.conversionItems.filter(ci => ci.destinationType === selectedFormat.destinationType \n      && ci.guid === selectedFormat.guid).length === 1;\n  }\n\n  isLeftBarOpen() {\n    return this.isDesktop ? true : this.leftBarOpen;\n  }\n}\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport { BrowseFilesModalComponent, UploadFilesService, FileModel, ModalService, CommonModals } from '@groupdocs.examples.angular/common-components';\nimport { ConversionService } from '../conversion.service';\nimport {ConversionItemModel, ExtendedFileModel} from \"../models\";\n\nexport interface Option {\n  name: string;\n  value: any;\n}\n\n@Component({\n  selector: 'gd-conversion-browse-files-modal',\n  templateUrl: './conversion-browse-files-modal.component.html',\n  styleUrls: ['./conversion-browse-files-modal.component.less']\n})\nexport class ConversionBrowseFilesModalComponent extends BrowseFilesModalComponent implements OnInit {\n  private _format: string;\n  formats;\n  @Input() files: ExtendedFileModel[];\n  @Output() selectAll = new EventEmitter<boolean>();\n\n  dynamicOptions: Option[] = [];\n\n  constructor(_uploadService: UploadFilesService,\n    private _conversionService: ConversionService,\n    private _modalService: ModalService) {\n    super(_uploadService);\n  }\n\n  selectDD(entry){\n    console.log('SELECTED DD',entry);\n  }\n\n  selectAllItems(checked: boolean){\n    this.selectAll.emit(checked);\n\n    this.dynamicOptions = this.prepareMultipleConversionTypes();\n  }\n\n  selectSingleItem(checked: boolean, file: ExtendedFileModel){\n    // TODO: refactor?\n    const selectedFiles = this.files.filter(f => f.guid === file.guid);\n    if (selectedFiles.length === 1){\n      selectedFiles[0].selected = checked;\n    }\n\n    this.dynamicOptions = this.prepareMultipleConversionTypes();\n  }\n\n  getLabelString(){\n    if (this.files && this.files.length > 0) {\n      const selectedCount = this.files.filter(file => file.selected).length;\n      if (selectedCount > 0) {\n      return 'Add ' + selectedCount + ' selected'\n      }\n      else {\n        return 'Add selected'\n      }\n    }\n  }\n\n  prepareMultipleConversionTypes() {\n    const allTypes = [];\n\n    this.files.filter(file => file.selected).forEach((f) => {\n      if (f.conversionTypes.length > 0) {\n        const types = Object.assign([], f.conversionTypes);\n        allTypes.push(types);\n      }\n    });\n\n    let longestArray = [];\n    allTypes.forEach((item) => {\n      if(item.length >= longestArray.length){\n        longestArray = item;\n      }\n    });\n\n    //add warnings\n    allTypes.forEach(typesArr => {\n        for (let i = 0; i < longestArray.length; i++) {\n          const type = (longestArray[i].value) ? longestArray[i].value : longestArray[i];\n          // TODO: reconsider second check\n          if (typesArr.indexOf(type) === -1 && typesArr.filter(t => t.name === type).length === 0) {\n              longestArray[i] = {\n                value: type,\n                name: type,\n                warning: true,\n                icon: this.getFormatIcon({name: 'dummyName.' + type, directory: false} as FileModel)\n              };\n          } else {\n            if(!longestArray[i].warning) {\n              longestArray[i] = {\n                value: type,\n                name: type,\n                warning: false,\n                icon: this.getFormatIcon({name: 'dummyName.' + type, directory: false} as FileModel)\n              };\n            }\n          }\n        }\n    }); \n\n    return longestArray;\n  }\n\n  selectFormat($event: any, file: ExtendedFileModel) {\n    // the case when we selecting format inline on the single file\n    if (file) {\n      this.selectAll.emit(false);\n      file.selected = true;\n    }\n    \n    this._format = $event.value;\n    const conversionItems = new Array<ConversionItemModel>();\n\n    this.files.forEach((f) => {\n        if (f.selected && !f.isDirectory && !f.directory){\n          const extension = f.guid.replace(/^.*\\./, '');\n          const destinationGuid = f.guid.replace(extension, this._format);\n          const destinationFileName = destinationGuid.replace(/^.*[\\\\\\/]/, '');\n\n          const conversionItem: ConversionItemModel = {\n            guid: f.guid,\n            directory: f.directory,\n            size: f.size,\n            name: f.name,\n            destinationType: $event.value,\n            isDirectory: f.isDirectory,\n            sizeString: this.getSize(f.size),\n            sourceIcon: this.getFormatIcon(f),\n            sourceFormatName: this.getFormatName(f),\n            destinationFileName: destinationFileName,\n            destinationFormatName: this.getFormatName({name: destinationFileName, directory: false} as FileModel),\n            destinationIcon: this.getFormatIcon({name: destinationFileName, directory: false} as FileModel),\n            converted: false,\n            // TODO: maybe there is a more beauty way?\n            converting: false\n          };\n\n          conversionItems.push(conversionItem);\n        }\n    })\n\n    this._conversionService.selectItems(conversionItems);\n    this._modalService.close(CommonModals.BrowseFiles);\n  }\n\n  createFormatOption(val: string) {\n    return {\n      value: val,\n      name: val,\n      icon: this.getFormatIcon({name: 'dummyName.' + val, directory: false} as FileModel)\n    }\n  }\n\n  formatOptions(formats) {\n    if (formats) {\n      const allTypes = new Array();\n      for (let i = 0; i < formats.length; i++) {\n        allTypes.push(this.createFormatOption(formats[i]));\n      }\n      return allTypes;\n    }\n  }\n\n  anyItemSelected() {\n    // TODO: reconsider such checks\n    if (this.files && this.files.length > 0) {\n      return this.files.filter(file => file.selected).length > 0;\n    }\n    else return false;\n  }\n\n  allItemsSelected() {\n    if (this.files && this.files.filter(file => !file.isDirectory && !file.directory).length > 0 && this.files.length > 0) {\n      return this.files.filter(file => !file.isDirectory && !file.directory && file.selected).length \n         === this.files.filter(file => !file.isDirectory && !file.directory).length;\n    }\n    else return false;\n  }\n}\n","import { Component, EventEmitter, Input, Output, OnInit } from '@angular/core';\nimport { ConversionItemModel } from '../models';\n\n@Component({\n  selector: 'gd-conversion-queue',\n  templateUrl: './conversion-queue.component.html',\n  styleUrls: ['./conversion-queue.component.less']\n})\n\nexport class ConversionQueueComponent implements OnInit {\n  @Input() items: ConversionItemModel[] = [];\n  @Output() selectedItemToConvert = new EventEmitter<ConversionItemModel>();\n\n  constructor() {\n  }\n  \n  ngOnInit(): void {\n  }\n\n  convertSingleItem($event: ConversionItemModel) {\n    this.selectedItemToConvert.emit($event);\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { ConversionItemModel } from '../models';\nimport {ConversionService} from \"../conversion.service\";\n\n@Component({\n  selector: 'gd-conversion-item',\n  templateUrl: './conversion-item.component.html',\n  styleUrls: ['./conversion-item.component.less']\n})\n\nexport class ConversionItemComponent implements OnInit {\n  @Input() item: ConversionItemModel;\n\n  constructor(private _conversionService: ConversionService) {\n  }\n  \n  ngOnInit(): void {\n  }\n\n  convert($event, item: ConversionItemModel) {\n    $event.preventDefault();\n    $event.stopPropagation();\n    this._conversionService.selectedItemToConvert(item);\n  }\n\n  downloadFile(item: ConversionItemModel) {\n    window.location.assign(this._conversionService.getDownloadUrl(item.destinationFileName));\n  }\n\n  removeItemFromQueue($event, item: ConversionItemModel) {\n    $event.preventDefault();\n    $event.stopPropagation();\n    this._conversionService.selectedItemToRemove(item);\n  }\n}\n","import {Component, Input, OnInit} from '@angular/core';\nimport {CommonModals, ModalService} from \"@groupdocs.examples.angular/common-components\";\n\n@Component({\n  selector: 'gd-dnd-init-state',\n  templateUrl: './dnd-init-state.component.html',\n  styleUrls: ['./dnd-init-state.component.less']\n})\nexport class DndInitStateComponent implements OnInit {\n  @Input() icon: string;\n  @Input() text: string;\n\n  constructor(private _modalService: ModalService) {\n  }\n\n  ngOnInit() {\n  }\n\n  dropped($event) {\n    if ($event) {\n      this._modalService.open(CommonModals.BrowseFiles);\n    }\n  }\n\n}\n","import {APP_INITIALIZER, ModuleWithProviders, NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {\n  Api,\n  CommonComponentsModule,\n  ConfigService,\n  ErrorInterceptorService\n} from \"@groupdocs.examples.angular/common-components\";\nimport {HTTP_INTERCEPTORS, HttpClientModule} from \"@angular/common/http\";\nimport {ConversionService} from \"./conversion.service\";\nimport {ConversionConfigService} from \"./conversion-config.service\";\nimport {ConversionAppComponent} from \"./conversion-app.component\";\nimport { ConversionBrowseFilesModalComponent } from './conversion-browse-files-modal/conversion-browse-files-modal.component';\nimport {library} from '@fortawesome/fontawesome-svg-core';\nimport {fas} from '@fortawesome/free-solid-svg-icons';\nimport {far} from '@fortawesome/free-regular-svg-icons';\nimport {FontAwesomeModule} from '@fortawesome/angular-fontawesome';\nimport {ConversionQueueComponent} from './conversion-queue/conversion-queue.component';\nimport {ConversionItemComponent} from './conversion-item/conversion-item.component';\nimport {DndInitStateComponent} from './dnd-init-state/dnd-init-state.component';\n\nexport function initializeApp(conversionConfigService: ConversionConfigService) {\n  const result = () => conversionConfigService.load();\n  return result;\n}\n\n@NgModule({\n  declarations: [ConversionAppComponent, ConversionBrowseFilesModalComponent, ConversionQueueComponent, ConversionItemComponent, DndInitStateComponent],\n  exports: [ConversionAppComponent, ConversionBrowseFilesModalComponent, ConversionQueueComponent],\n  imports: [CommonModule,\n    CommonComponentsModule,\n    HttpClientModule,\n    FontAwesomeModule],\n  providers: [\n    ConversionService,\n    ConfigService,\n    ConversionConfigService,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: ErrorInterceptorService,\n      multi: true\n    },\n    {\n      provide: APP_INITIALIZER,\n      useFactory: initializeApp,\n      deps: [ConversionConfigService], multi: true\n    }\n  ]\n})\nexport class ConversionModule {\n  constructor() {\n    library.add(fas, far);\n  }\n\n  static forRoot(apiEndpoint: string): ModuleWithProviders {\n    Api.DEFAULT_API_ENDPOINT = apiEndpoint;\n    return {\n      ngModule: ConversionModule\n    };\n  }\n}\n"]}