{"version":3,"file":"groupdocs.examples.angular-conversion.js","sources":["ng://@groupdocs.examples.angular/conversion/lib/models.ts","ng://@groupdocs.examples.angular/conversion/lib/conversion.service.ts","ng://@groupdocs.examples.angular/conversion/lib/conversion-config.ts","ng://@groupdocs.examples.angular/conversion/lib/conversion-config.service.ts","ng://@groupdocs.examples.angular/conversion/lib/conversion-app.component.ts","ng://@groupdocs.examples.angular/conversion/lib/conversion-browse-files-modal/conversion-browse-files-modal.component.ts","ng://@groupdocs.examples.angular/conversion/lib/information-modal/information-modal.component.ts","ng://@groupdocs.examples.angular/conversion/lib/conversion-queue/conversion-queue.component.ts","ng://@groupdocs.examples.angular/conversion/lib/conversion-item/conversion-item.component.ts","ng://@groupdocs.examples.angular/conversion/lib/conversion.module.ts"],"sourcesContent":["import {FileModel} from \"@groupdocs.examples.angular/common-components\";\n\nexport class ConversionRequestModel{\n  added: boolean;\n  destinationType: string;\n  guid: string;\n  size: number;\n  destDocumentType: number;\n}\n\nexport class ConversionItemModel implements FileModel {\n    guid: string;\n    directory: boolean;\n    size: number;\n    name: string;\n    destinationType: string;\n    sizeString: string;\n    destinationFileName: string;\n    destinationFormatName: string;\n    sourceIcon: string;\n    sourceFormatName: string;\n    destinationIcon: string;\n    converted: boolean;\n    converting: boolean;\n    isDirectory: boolean;\n    warning: boolean;\n  }\n\n  export class ExtendedFileModel implements FileModel {\n    guid: string;\n    // TODO: fix dublicates below (question)\n    directory: boolean;\n    isDirectory: boolean;\n    size: number;\n    name: string;\n    selected: boolean;\n    conversionTypes: any;\n  }\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport {\n  Api, ConfigService, FileCredentials, SaveFile, FileModel, FileUtil\n} from \"@groupdocs.examples.angular/common-components\";\nimport {Observable, BehaviorSubject, Observer} from \"rxjs\";\nimport { ConversionItemModel, ConversionRequestModel } from './models';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class ConversionService {\n  private _selectedItems: BehaviorSubject<ConversionItemModel[]> = new BehaviorSubject(new Array<ConversionItemModel>());\n  private _selectItems: Observable<ConversionItemModel[]> = this._selectedItems.asObservable();\n  private _selectedFormat: BehaviorSubject<string> = new BehaviorSubject<string>(null);\n  private _selectFormat: Observable<string> = this._selectedFormat.asObservable();\n\n  private _itemToConvert = new BehaviorSubject<ConversionItemModel>(null);\n  itemToConvert = this._itemToConvert.asObservable();\n\n  private _itemToRemove = new BehaviorSubject<ConversionItemModel>(null);\n  itemToRemove = this._itemToRemove.asObservable();\n\n  constructor(private _http: HttpClient, private _config: ConfigService) {\n  }\n\n  get selectedItems() {\n    return this._selectItems;\n  }\n\n  get selectedFormat() {\n    return this._selectFormat;\n  }\n\n  selectItems(filesToConvert: ConversionItemModel[]) {\n    this._selectedItems.next(filesToConvert);\n  }\n\n  selectFormat(selectedFormat: string) {\n    this._selectedFormat.next(selectedFormat);\n  }\n\n  loadFiles(path: string) {\n    return this._http.post(this._config.getConversionApiEndpoint() + Api.LOAD_FILE_TREE, {'path': path}, Api.httpOptionsJson);\n  }\n\n  upload(file: File, url: string, rewrite: boolean) {\n    const formData = new FormData();\n    formData.append(\"file\", file);\n    formData.append('rewrite', String(rewrite));\n    if (url) {\n      formData.append(\"url\", url);\n    }\n\n    return this._http.post(this._config.getConversionApiEndpoint() + Api.UPLOAD_DOCUMENTS, formData);\n  }\n\n  convert(file: ConversionItemModel) {\n    const req = new ConversionRequestModel();\n    req.added = true;\n    req.destinationType = file.destinationType;\n    req.guid = file.guid;\n    req.size = file.size;\n    req.destDocumentType = FileUtil.find(file.destinationType, false).format;\n    return this._http.post(this._config.getConversionApiEndpoint() + Api.CONVERT_FILE, req);\n  }\n\n  getDownloadUrl(guid: string) {\n    return this._config.getConversionApiEndpoint() + Api.DOWNLOAD_DOCUMENTS + '/?path=' + guid;\n  }\n\n  selectedItemToConvert(item: ConversionItemModel) {\n    this._itemToConvert.next(item);\n  }\n\n  selectedItemToRemove(item: ConversionItemModel) {\n    this._itemToRemove.next(item);\n  }\n}\n","export class ConversionConfig {\n  rewrite: boolean;\n  pageSelector: boolean;\n  download: boolean;\n  upload: boolean;\n  print: boolean;\n  browse: boolean;\n  enableRightClick: boolean;\n}\n","import {Injectable} from '@angular/core';\nimport {ConversionConfig} from \"./conversion-config\";\nimport {Api, ConfigService} from \"@groupdocs.examples.angular/common-components\";\nimport {HttpClient} from \"@angular/common/http\";\nimport {BehaviorSubject, Observable} from \"rxjs\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConversionConfigService {\n  private _conversionConfig: BehaviorSubject<ConversionConfig> = new BehaviorSubject(new ConversionConfig());\n  private _updatedConfig: Observable<ConversionConfig> = this._conversionConfig.asObservable();\n\n  constructor(private _http: HttpClient, private _config: ConfigService) {\n  }\n\n  get updatedConfig() {\n    return this._updatedConfig;\n  }\n\n  load() {\n    return new Promise<void>((resolve, reject) => {\n      const configEndpoint = this._config.getConfigEndpoint(Api.CONVERSION_APP);\n      this._http.get(configEndpoint, Api.httpOptionsJson).toPromise().then((response: ConversionConfig) => {\n        const conversionConfig = <ConversionConfig>response;\n        this._conversionConfig.next(conversionConfig);\n        resolve();\n      }).catch((response: any) => {\n        reject(`Could not load conversion config: ${JSON.stringify(response)}`);\n      });\n    });\n  }\n\n}\n","import {Component} from '@angular/core';\nimport {ConversionConfigService} from \"./conversion-config.service\";\nimport {ConversionService} from \"./conversion.service\";\nimport { ModalService,\n  CommonModals,\n  UploadFilesService\n} from \"@groupdocs.examples.angular/common-components\";\nimport {ConversionConfig} from \"./conversion-config\";\nimport {ConversionItemModel, ExtendedFileModel} from \"./models\"\n\n@Component({\n  selector: 'gd-conversion',\n  templateUrl: './conversion-app.component.html',\n  styleUrls: ['./conversion-app.component.less']\n})\nexport class ConversionAppComponent {\n  title = 'conversion';\n  files: ExtendedFileModel[] = [];\n  conversionItems: ConversionItemModel[] = [];\n  browseFilesModal = CommonModals.BrowseFiles;\n  isDesktop: boolean;\n  leftBarOpen = false;\n  conversionConfig: ConversionConfig;\n  result: any;\n  selectedFormat: string;\n  warningItems = 0;\n\n  constructor(private _modalService: ModalService,\n              private _conversionService: ConversionService,\n              configService: ConversionConfigService,\n              uploadFilesService: UploadFilesService) {\n\n    configService.updatedConfig.subscribe((config) => {\n      this.conversionConfig = config;\n    });\n\n    uploadFilesService.uploadsChange.subscribe((uploads) => {\n      if (uploads) {\n        let i: number;\n        for (i = 0; i < uploads.length; i++) {\n          this._conversionService.upload(uploads.item(i), '', this.conversionConfig.rewrite).subscribe(() => {\n            this.selectDir('');\n          });\n        }\n      }\n    });\n\n    _conversionService.selectedItems.subscribe((selectedItems) => {\n      selectedItems.forEach((selectedItem) => {\n        if (selectedItem.warning) this.warningItems++;\n        if (Object.keys(selectedItem).length > 0 && !this.itemAlreadyAdded(selectedItem)) {\n          this.conversionItems.push(selectedItem as ConversionItemModel);\n        }\n      });\n    });\n\n    _conversionService.selectedFormat.subscribe((selectedFormat) => {\n        this.selectedFormat = selectedFormat;\n    });\n\n    _conversionService.itemToConvert.subscribe(item => {\n      if (item) this.convertSingleItem(item);\n    });\n\n    _conversionService.itemToRemove.subscribe(item => {\n        if (item) this.removeItemFromQueue(item);\n    });\n  }\n\n  get rewriteConfig(): boolean {\n    return this.conversionConfig ? this.conversionConfig.rewrite : true;\n  }\n\n  get browseConfig(): boolean {\n    return this.conversionConfig ? this.conversionConfig.browse : true;\n  }\n\n  get uploadConfig(): boolean {\n    return this.conversionConfig ? this.conversionConfig.upload : true;\n  }\n\n  fileDropped($event) {\n    if ($event) {\n      this._modalService.open(CommonModals.BrowseFiles);\n    }\n  }\n\n  openModal(id: string) {\n    this._modalService.open(id);\n  }\n\n  closeModal(id: string) {\n    this._modalService.close(id);\n  }\n\n  upload($event: string) {\n    this._conversionService.upload(null, $event, this.rewriteConfig).subscribe(() => {\n      this.selectDir('');\n    });\n  }\n\n  selectDir($event: string) {\n    this._conversionService.loadFiles($event).subscribe((files: ExtendedFileModel[]) => this.files = files || []);\n  }\n\n  convertSingleItem(item) {\n    const workItem = this.conversionItems.find(x => x.guid === item.guid \n                                                 && x.destinationType === item.destinationType);\n    workItem.converting = true;\n    this._conversionService.convert(item).subscribe(() => {\n      workItem.converting = false;\n      workItem.converted = true;\n    }, (() => {\n      // TODO: add error handling?\n      workItem.converting = false;\n    }));\n  }\n\n  convertAll(){\n    this.conversionItems.forEach((item) => {\n      if (!item.converted && !item.converting) {\n        this.convertSingleItem(item);\n      }\n    });\n  }\n\n  convertAllUnavailable(){\n    return this.conversionItems.length === 0 || this.conversionItems.filter(ci => ci.converted !== true).length === 0;\n  }\n\n  removeItemFromQueue(item: ConversionItemModel): void {\n    if (this.conversionItems.length > 0) {\n      this.conversionItems.forEach( (ci, index) => {\n        if(ci.guid === item.guid && ci.destinationType === item.destinationType) this.conversionItems.splice(index, 1);\n      });\n    }\n  }\n\n  selectAllItems(checked: boolean) {\n    this.files.forEach( (f) => {\n      if (!f.isDirectory && !f.directory) f.selected = checked;\n    });\n  }\n\n  itemAlreadyAdded(selectedItem: ConversionItemModel) : boolean {\n    return this.conversionItems.filter(ci => ci.destinationType === selectedItem.destinationType \n      && ci.guid === selectedItem.guid).length === 1;\n  }\n\n  isLeftBarOpen() {\n    return this.isDesktop ? true : this.leftBarOpen;\n  }\n}\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport { BrowseFilesModalComponent, UploadFilesService, FileModel, ModalService, CommonModals } from '@groupdocs.examples.angular/common-components';\nimport { ConversionService } from '../conversion.service';\nimport {ConversionItemModel, ExtendedFileModel} from \"../models\";\n\nexport interface Option {\n  name: string;\n  value: any;\n  warning: boolean;\n}\n\n@Component({\n  selector: 'gd-conversion-browse-files-modal',\n  templateUrl: './conversion-browse-files-modal.component.html',\n  styleUrls: ['./conversion-browse-files-modal.component.less']\n})\nexport class ConversionBrowseFilesModalComponent extends BrowseFilesModalComponent implements OnInit {\n  private _format: string;\n  formats;\n  @Input() files: ExtendedFileModel[];\n  @Output() selectAll = new EventEmitter<boolean>();\n\n  dynamicOptions: Option[] = [];\n\n  constructor(_uploadService: UploadFilesService,\n    private _conversionService: ConversionService,\n    private _modalService: ModalService) {\n    super(_uploadService);\n  }\n\n  selectAllItems(checked: boolean){\n    this.selectAll.emit(checked);\n\n    this.dynamicOptions = this.prepareMultipleConversionTypes();\n  }\n\n  selectSingleItem(checked: boolean, file: ExtendedFileModel){\n    // TODO: refactor?\n    const selectedFiles = this.files.filter(f => f.guid === file.guid);\n    if (selectedFiles.length === 1){\n      selectedFiles[0].selected = checked;\n    }\n\n    this.dynamicOptions = this.prepareMultipleConversionTypes();\n  }\n\n  getLabelString(){\n    const label = 'Add selected'\n\n    if (this.files && this.files.length > 0) {\n      const selectedCount = this.files.filter(file => file.selected).length;\n      return selectedCount > 0 ? 'Add ' + selectedCount + ' selected' : label;\n    }\n    else\n    {\n      return label;\n    }\n  }\n\n  prepareMultipleConversionTypes() {\n    const allTypes = [];\n\n    this.files.filter(file => file.selected).forEach((f) => {\n      if (f.conversionTypes.length > 0) {\n        const types = Object.assign([], f.conversionTypes);\n        allTypes.push(types);\n      }\n    });\n\n    let longestArray = [];\n    allTypes.forEach((item) => {\n      if(item.length >= longestArray.length){\n        longestArray = item;\n      }\n    });\n\n    //add warnings\n    allTypes.forEach(typesArr => {\n        for (let i = 0; i < longestArray.length; i++) {\n          const type = (longestArray[i].value) ? longestArray[i].value : longestArray[i];\n          // TODO: reconsider second check\n          if (typesArr.indexOf(type) === -1 && typesArr.filter(t => t.name === type).length === 0) {\n              longestArray[i] = {\n                value: type,\n                name: type,\n                warning: true,\n                icon: this.getFormatIcon({name: 'dummyName.' + type, directory: false} as FileModel)\n              };\n          } else {\n            if(!longestArray[i].warning) {\n              longestArray[i] = {\n                value: type,\n                name: type,\n                warning: false,\n                icon: this.getFormatIcon({name: 'dummyName.' + type, directory: false} as FileModel)\n              };\n            }\n          }\n        }\n    }); \n\n    return longestArray;\n  }\n\n  selectFormat($event: any, file: ExtendedFileModel) {\n    // the case when we selecting format inline on the single file\n    if (file) {\n      this.selectAll.emit(false);\n      file.selected = true;\n    }\n    \n    this._format = $event.value;\n    const conversionItems = new Array<ConversionItemModel>();\n\n    this.files.forEach((f) => {\n        if (f.selected && !f.isDirectory && !f.directory){\n          const extension = f.guid.replace(/^.*\\./, '');\n          const destinationGuid = f.guid.replace(extension, this._format);\n          const destinationFileName = destinationGuid.replace(/^.*[\\\\\\/]/, '');\n\n          const conversionItem: ConversionItemModel = {\n            guid: f.guid,\n            directory: f.directory,\n            size: f.size,\n            name: f.name,\n            destinationType: $event.value,\n            isDirectory: f.isDirectory,\n            sizeString: this.getSize(f.size),\n            sourceIcon: this.getFormatIcon(f),\n            sourceFormatName: this.getFormatName(f),\n            destinationFileName: destinationFileName,\n            destinationFormatName: this.getFormatName({name: destinationFileName, directory: false} as FileModel),\n            destinationIcon: this.getFormatIcon({name: destinationFileName, directory: false} as FileModel),\n            converted: false,\n            // TODO: maybe there is a more beauty way?\n            converting: false,\n            warning: f.conversionTypes.indexOf(this._format) === -1 ? true : false\n          };\n\n          conversionItems.push(conversionItem);\n        }\n    })\n\n    this._conversionService.selectItems(conversionItems);\n    this._conversionService.selectFormat(this._format.toUpperCase());\n    this._modalService.close(CommonModals.BrowseFiles);\n\n    if ($event.warning){\n      this._modalService.open(CommonModals.InformationMessage);\n    }\n  }\n\n  createFormatOption(val: string) {\n    return {\n      value: val,\n      name: val,\n      icon: this.getFormatIcon({name: 'dummyName.' + val, directory: false} as FileModel)\n    }\n  }\n\n  formatOptions(formats) {\n    if (formats) {\n      const allTypes = new Array();\n      for (let i = 0; i < formats.length; i++) {\n        allTypes.push(this.createFormatOption(formats[i]));\n      }\n      return allTypes;\n    }\n  }\n\n  anyItemSelected() {\n    // TODO: reconsider such checks\n    if (this.files && this.files.length > 0) {\n      return this.files.filter(file => file.selected).length > 0;\n    }\n    else return false;\n  }\n\n  allItemsSelected() {\n    if (this.files && this.files.filter(file => !file.isDirectory && !file.directory).length > 0 && this.files.length > 0) {\n      return this.files.filter(file => !file.isDirectory && !file.directory && file.selected).length \n         === this.files.filter(file => !file.isDirectory && !file.directory).length;\n    }\n    else return false;\n  }\n}\n","import {Component, OnInit, Input} from '@angular/core';\n\n@Component({\n  selector: 'gd-information-modal',\n  templateUrl: './information-modal.component.html',\n  styleUrls: ['./information-modal.component.less']\n})\nexport class InformationModalComponent implements OnInit {\n\n  @Input() formatName: string;\n  @Input() warningCount: number;\n\n  constructor() {\n  }\n\n  ngOnInit() {\n  }\n}\n","import { Component, EventEmitter, Input, Output, OnInit } from '@angular/core';\nimport { ConversionItemModel } from '../models';\n\n@Component({\n  selector: 'gd-conversion-queue',\n  templateUrl: './conversion-queue.component.html',\n  styleUrls: ['./conversion-queue.component.less']\n})\n\nexport class ConversionQueueComponent implements OnInit {\n  @Input() items: ConversionItemModel[] = [];\n  @Output() selectedItemToConvert = new EventEmitter<ConversionItemModel>();\n\n  constructor() {\n  }\n  \n  ngOnInit(): void {\n  }\n\n  convertSingleItem($event: ConversionItemModel) {\n    this.selectedItemToConvert.emit($event);\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { ConversionItemModel } from '../models';\nimport {ConversionService} from \"../conversion.service\";\n\n@Component({\n  selector: 'gd-conversion-item',\n  templateUrl: './conversion-item.component.html',\n  styleUrls: ['./conversion-item.component.less']\n})\n\nexport class ConversionItemComponent implements OnInit {\n  @Input() item: ConversionItemModel;\n\n  constructor(private _conversionService: ConversionService) {\n  }\n  \n  ngOnInit(): void {\n  }\n\n  convert($event, item: ConversionItemModel) {\n    $event.preventDefault();\n    $event.stopPropagation();\n    this._conversionService.selectedItemToConvert(item);\n  }\n\n  downloadFile(item: ConversionItemModel) {\n    window.location.assign(this._conversionService.getDownloadUrl(item.destinationFileName));\n  }\n\n  removeItemFromQueue($event, item: ConversionItemModel) {\n    $event.preventDefault();\n    $event.stopPropagation();\n    this._conversionService.selectedItemToRemove(item);\n  }\n}\n","import {APP_INITIALIZER, ModuleWithProviders, NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {\n  Api,\n  CommonComponentsModule,\n  ConfigService,\n  ErrorInterceptorService\n} from \"@groupdocs.examples.angular/common-components\";\nimport {HTTP_INTERCEPTORS, HttpClientModule} from \"@angular/common/http\";\nimport {ConversionService} from \"./conversion.service\";\nimport {ConversionConfigService} from \"./conversion-config.service\";\nimport {ConversionAppComponent} from \"./conversion-app.component\";\nimport { ConversionBrowseFilesModalComponent } from './conversion-browse-files-modal/conversion-browse-files-modal.component';\nimport { InformationModalComponent } from './information-modal/information-modal.component';\nimport {library} from '@fortawesome/fontawesome-svg-core';\nimport {fas} from '@fortawesome/free-solid-svg-icons';\nimport {far} from '@fortawesome/free-regular-svg-icons';\nimport {FontAwesomeModule} from '@fortawesome/angular-fontawesome';\nimport {ConversionQueueComponent} from './conversion-queue/conversion-queue.component';\nimport {ConversionItemComponent} from './conversion-item/conversion-item.component';\n\nexport function initializeApp(conversionConfigService: ConversionConfigService) {\n  const result = () => conversionConfigService.load();\n  return result;\n}\n\n@NgModule({\n  declarations: [ConversionAppComponent, ConversionBrowseFilesModalComponent, InformationModalComponent, ConversionQueueComponent, ConversionItemComponent],\n  exports: [ConversionAppComponent, ConversionBrowseFilesModalComponent, InformationModalComponent, ConversionQueueComponent],\n  imports: [CommonModule,\n    CommonComponentsModule,\n    HttpClientModule,\n    FontAwesomeModule],\n  providers: [\n    ConversionService,\n    ConfigService,\n    ConversionConfigService,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: ErrorInterceptorService,\n      multi: true\n    },\n    {\n      provide: APP_INITIALIZER,\n      useFactory: initializeApp,\n      deps: [ConversionConfigService], multi: true\n    }\n  ]\n})\nexport class ConversionModule {\n  constructor() {\n    library.add(fas, far);\n  }\n\n  static forRoot(apiEndpoint: string): ModuleWithProviders {\n    Api.DEFAULT_API_ENDPOINT = apiEndpoint;\n    return {\n      ngModule: ConversionModule\n    };\n  }\n}\n"],"names":[],"mappings":"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"}