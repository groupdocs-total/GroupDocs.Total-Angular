{"__symbolic":"module","version":4,"metadata":{"initializeApp":{"__symbolic":"function"},"setupLoadingInterceptor":{"__symbolic":"function","parameters":["service"],"value":{"__symbolic":"new","expression":{"__symbolic":"reference","module":"@groupdocs.examples.angular/common-components","name":"LoadingMaskInterceptorService","line":32,"character":13},"arguments":[{"__symbolic":"reference","name":"service"}]}},"AnnotationModule":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"NgModule","line":35,"character":1},"arguments":[{"declarations":[{"__symbolic":"reference","name":"AnnotationAppComponent"},{"__symbolic":"reference","name":"ɵa"},{"__symbolic":"reference","name":"ɵb"},{"__symbolic":"reference","name":"ɵc"},{"__symbolic":"reference","name":"ɵd"}],"exports":[{"__symbolic":"reference","module":"@groupdocs.examples.angular/common-components","name":"CommonComponentsModule","line":38,"character":12},{"__symbolic":"reference","name":"AnnotationAppComponent"},{"__symbolic":"reference","name":"ɵa"},{"__symbolic":"reference","name":"ɵb"},{"__symbolic":"reference","name":"ɵc"},{"__symbolic":"reference","name":"ɵd"}],"imports":[{"__symbolic":"reference","module":"@angular/common","name":"CommonModule","line":40,"character":5},{"__symbolic":"reference","module":"@groupdocs.examples.angular/common-components","name":"CommonComponentsModule","line":41,"character":6},{"__symbolic":"reference","module":"@angular/common/http","name":"HttpClientModule","line":42,"character":6},{"__symbolic":"reference","module":"@fortawesome/angular-fontawesome","name":"FontAwesomeModule","line":43,"character":6},{"__symbolic":"reference","module":"ng-click-outside","name":"ClickOutsideModule","line":44,"character":6}],"providers":[{"__symbolic":"reference","module":"@groupdocs.examples.angular/common-components","name":"ConfigService","line":47,"character":6},{"__symbolic":"reference","name":"AnnotationConfigService"},{"__symbolic":"reference","name":"ActiveAnnotationService"},{"__symbolic":"reference","name":"RemoveAnnotationService"},{"__symbolic":"reference","name":"CommentAnnotationService"},{"provide":{"__symbolic":"reference","module":"@angular/common/http","name":"HTTP_INTERCEPTORS","line":53,"character":17},"useClass":{"__symbolic":"reference","module":"@groupdocs.examples.angular/common-components","name":"ErrorInterceptorService","line":54,"character":18},"multi":true},{"provide":{"__symbolic":"reference","module":"@angular/core","name":"APP_INITIALIZER","line":58,"character":17},"useFactory":{"__symbolic":"reference","name":"initializeApp"},"deps":[{"__symbolic":"reference","name":"AnnotationConfigService"}],"multi":true},{"__symbolic":"reference","module":"@groupdocs.examples.angular/common-components","name":"LoadingMaskService","line":62,"character":6},{"provide":{"__symbolic":"reference","module":"@angular/common/http","name":"HTTP_INTERCEPTORS","line":64,"character":17},"useFactory":{"__symbolic":"reference","name":"setupLoadingInterceptor"},"multi":true,"deps":[{"__symbolic":"reference","module":"@groupdocs.examples.angular/common-components","name":"LoadingMaskService","line":67,"character":15}]}],"entryComponents":[{"__symbolic":"reference","name":"ɵa"}]}]}],"members":{"__ctor__":[{"__symbolic":"constructor"}]}},"AnnotationAppComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":33,"character":1},"arguments":[{"selector":"gd-annotation-app","template":"<gd-loading-mask [loadingMask]=\"isLoading\"></gd-loading-mask>\n<div class=\"wrapper\" (contextmenu)=\"onRightClick($event)\">\n  <div class=\"annotation-wrapper wrapper\">\n    <gd-tabbed-toolbars [logo]=\"'annotation'\" [icon]=\"'pen-square'\">\n      <gd-tabs>\n        <gd-tab [tabTitle]=\"'File'\" [icon]=\"'folder-open'\" [id]=\"'1'\" [active]=\"true\">\n          <div id=\"files-tools\" class=\"toolbar-panel\">\n            <gd-button [icon]=\"'folder-open'\" [tooltip]=\"'Browse files'\" (click)=\"openModal(browseFilesModal)\"\n                       *ngIf=\"browseConfig\"></gd-button>\n\n            <gd-button [disabled]=\"formatDisabled\" [icon]=\"'download'\" [tooltip]=\"'Download'\"\n                       (click)=\"downloadFile()\" *ngIf=\"downloadConfig\"></gd-button>\n            <gd-button [disabled]=\"formatDisabled\" [icon]=\"'save'\" [tooltip]=\"'Save'\" (click)=\"annotate()\"></gd-button>\n            <gd-button class=\"desktop-hide\" [disabled]=\"formatDisabled\" [icon]=\"'search-plus'\" [tooltip]=\"'Zoom In'\"\n              (click)=\"zoomIn()\" *ngIf=\"zoomConfig\"></gd-button>\n            <gd-button class=\"desktop-hide\" [disabled]=\"formatDisabled\" [icon]=\"'search-minus'\" [tooltip]=\"'Zoom Out'\"\n              (click)=\"zoomOut()\" *ngIf=\"zoomConfig\"></gd-button>\n          </div>\n        </gd-tab>\n        <gd-tab [tabTitle]=\"'Annotations'\" [icon]=\"'highlighter'\" [id]=\"'2'\"\n                *ngIf=\"isDesktop || (!isDesktop && codesConfigFirst())\">\n          <div class=\"toolbar-panel\">\n            <div *ngFor=\"let annotationType of (isDesktop ? annotationTypes : annotationTypeFirst)\">\n              <gd-top-tab [disabled]=\"!file\" *ngIf=\"isVisible(annotationType.id)\"\n                          [icon]=\"annotationType.icon\" (activeTab)=\"activeTab($event)\"\n                          [id]=\"annotationType.id\" [tooltip]=\"annotationType.name\">\n              </gd-top-tab>\n            </div>\n          </div>\n        </gd-tab>\n        <gd-tab [tabTitle]=\"''\" [icon]=\"'vector-square'\" [id]=\"'3'\" *ngIf=\"!isDesktop && codesConfigSecond()\">\n          <div class=\"toolbar-panel\">\n            <div *ngFor=\"let annotationType of annotationTypeSecond\">\n              <gd-top-tab [disabled]=\"!file\" *ngIf=\"isVisible(annotationType.id)\"\n                          [icon]=\"annotationType.icon\" (activeTab)=\"activeTab($event)\"\n                          [id]=\"annotationType.id\" [tooltip]=\"annotationType.name\">\n              </gd-top-tab>\n            </div>\n          </div>\n        </gd-tab>\n        <gd-tab [tabTitle]=\"''\" [icon]=\"'i-cursor'\" [id]=\"'4'\" *ngIf=\"!isDesktop && codesConfigThird()\">\n          <div class=\"toolbar-panel\">\n            <div *ngFor=\"let annotationType of annotationTypeThird\">\n              <gd-top-tab [disabled]=\"!file\" *ngIf=\"isVisible(annotationType.id)\"\n                          [icon]=\"annotationType.icon\" (activeTab)=\"activeTab($event)\"\n                          [id]=\"annotationType.id\" [tooltip]=\"annotationType.name\">\n              </gd-top-tab>\n            </div>\n          </div>\n        </gd-tab>\n      </gd-tabs>\n    </gd-tabbed-toolbars>\n    <div class=\"doc-panel\" *ngIf=\"file\" (mousedown)=\"createAnnotation($event)\"\n         (mousemove)=\"resizingCreatingAnnotation($event)\" (mouseup)=\"finishCreatingAnnotation($event)\"\n         (touchstart)=\"createAnnotation($event)\" (touchmove)=\"resizingCreatingAnnotation($event)\"\n         (touchend)=\"finishCreatingAnnotation($event)\"\n         (panstart)=\"createAnnotation($event)\" (panmove)=\"resizingCreatingAnnotation($event)\"\n         (panend)=\"finishCreatingAnnotation($event)\">\n      <gd-document class=\"gd-document\" *ngIf=\"file\" [file]=\"file\" [mode]=\"htmlModeConfig\" gdScrollable\n                   [preloadPageCount]=\"preloadPageCountConfig\" gdRenderPrint [htmlMode]=\"htmlModeConfig\" (onpan)=\"onPan($event)\"></gd-document>\n    </div>\n    <gd-comment-panel *ngIf=\"commentOpenedId\" [annotationId]=\"commentOpenedId\"\n                      [comments]=\"getComments()\" (closeComments)=\"closeComments()\">\n    </gd-comment-panel>\n\n    <gd-init-state [icon]=\"'highlighter'\" [text]=\"'Drop file here to upload'\" *ngIf=\"!file\"\n                   (fileDropped)=\"fileDropped($event)\">\n      Click\n      <fa-icon [icon]=\"['fas','folder-open']\"></fa-icon>\n      to open file<br>\n      Or drop file here\n    </gd-init-state>\n  </div>\n  <gd-browse-files-modal (urlForUpload)=\"upload($event)\" [files]=\"files\" (selectedDirectory)=\"selectDir($event)\"\n                         (selectedFileGuid)=\"selectFile($event, null, browseFilesModal)\"\n                         [uploadConfig]=\"uploadConfig\"></gd-browse-files-modal>\n\n  <gd-error-modal></gd-error-modal>\n  <gd-password-required></gd-password-required>\n  <gd-success-modal></gd-success-modal>\n  <svg class=\"svg\" xmlns=\"http://www.w3.org/2000/svg\">\n    <defs xmlns=\"http://www.w3.org/2000/svg\">\n      <marker id=\"end\" orient='auto' markerWidth='20' markerHeight='20'\n              refX=\"10\" refY=\"10\" markerUnits=\"strokeWidth\">\n        <path d='M0,7 L0,13 L12,10 z' fill='#579AF0'></path>\n      </marker>\n      <marker id=\"start\" orient='auto' markerWidth='20' markerHeight='20'\n              refX=\"0\" refY=\"10\" markerUnits=\"strokeWidth\">\n        <path d='M12,7 L12,13 L0,10 z' fill='#579AF0'></path>\n      </marker>\n    </defs>\n  </svg>\n</div>\n","styles":["@import url(https://fonts.googleapis.com/css?family=Open+Sans&display=swap);:host *{font-family:'Open Sans',Arial,Helvetica,sans-serif}::ng-deep .page{position:relative}::ng-deep .gd-page-image{width:unset;height:unset}::ng-deep .top-panel{align-content:flex-start}.wrapper{-webkit-box-align:stretch;align-items:stretch;height:100%;width:100%;position:fixed;top:0;bottom:0;left:0;right:0}.doc-panel{display:-webkit-box;display:flex;height:inherit}.gd-document{width:100%;height:calc(100% - 90px)}.toolbar-panel{width:100%;display:-webkit-box;display:flex;-webkit-box-align:center;align-items:center}.annotation-wrapper ::ng-deep .button{color:#3e4e5a!important}.annotation-wrapper ::ng-deep .button .text{padding:0!important}.annotation-wrapper ::ng-deep .select{color:#3e4e5a!important}.desktop-hide{display:none}@media (max-width:1037px){::ng-deep .logo ::ng-deep .icon{font-size:24px!important}::ng-deep .top-panel{height:120px!important}.desktop-hide{display:block}.gd-document{height:calc(100% - 120px)}::ng-deep .bcPicker-palette{position:absolute;left:-80px!important;top:-170px!important}}"]}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"AnnotationService"},{"__symbolic":"reference","module":"@groupdocs.examples.angular/common-components","name":"ModalService","line":94,"character":37},{"__symbolic":"reference","module":"@groupdocs.examples.angular/common-components","name":"NavigateService","line":95,"character":40},{"__symbolic":"reference","module":"@groupdocs.examples.angular/common-components","name":"TopTabActivatorService","line":96,"character":44},{"__symbolic":"reference","module":"@groupdocs.examples.angular/common-components","name":"HostingDynamicComponentService","line":97,"character":49},{"__symbolic":"reference","module":"@groupdocs.examples.angular/common-components","name":"AddDynamicComponentService","line":98,"character":51},{"__symbolic":"reference","name":"ActiveAnnotationService"},{"__symbolic":"reference","name":"RemoveAnnotationService"},{"__symbolic":"reference","name":"CommentAnnotationService"},{"__symbolic":"reference","module":"@groupdocs.examples.angular/common-components","name":"UploadFilesService","line":102,"character":34},{"__symbolic":"reference","module":"@groupdocs.examples.angular/common-components","name":"PagePreloadService","line":103,"character":34},{"__symbolic":"reference","module":"@groupdocs.examples.angular/common-components","name":"PasswordService","line":104,"character":31},{"__symbolic":"reference","module":"@groupdocs.examples.angular/common-components","name":"WindowService","line":105,"character":38},{"__symbolic":"reference","module":"@groupdocs.examples.angular/common-components","name":"ZoomService","line":106,"character":36},{"__symbolic":"reference","name":"AnnotationConfigService"}]}],"getComments":[{"__symbolic":"method"}],"defaultDocumentConfig":[{"__symbolic":"method"}],"ngOnInit":[{"__symbolic":"method"}],"ptToPx":[{"__symbolic":"method"}],"getFitToWidth":[{"__symbolic":"method"}],"refreshZoom":[{"__symbolic":"method"}],"zoomIn":[{"__symbolic":"method"}],"zoomOut":[{"__symbolic":"method"}],"openModal":[{"__symbolic":"method"}],"closeModal":[{"__symbolic":"method"}],"selectDir":[{"__symbolic":"method"}],"selectFile":[{"__symbolic":"method"}],"preloadPages":[{"__symbolic":"method"}],"importAnnotations":[{"__symbolic":"method"}],"upload":[{"__symbolic":"method"}],"onRightClick":[{"__symbolic":"method"}],"downloadFile":[{"__symbolic":"method"}],"annotate":[{"__symbolic":"method"}],"prepareAnnotationsData":[{"__symbolic":"method"}],"isVisible":[{"__symbolic":"method"}],"activeTab":[{"__symbolic":"method"}],"codesConfigFirst":[{"__symbolic":"method"}],"codesConfigSecond":[{"__symbolic":"method"}],"checkConfig":[{"__symbolic":"method"}],"codesConfigThird":[{"__symbolic":"method"}],"getAnnotationTypeConfig":[{"__symbolic":"method"}],"fileDropped":[{"__symbolic":"method"}],"cleanAnnotations":[{"__symbolic":"method"}],"clearData":[{"__symbolic":"method"}],"createAnnotation":[{"__symbolic":"method"}],"addAnnotationComponent":[{"__symbolic":"method"}],"resizingCreatingAnnotation":[{"__symbolic":"method"}],"getCurrentPosition":[{"__symbolic":"method"}],"finishCreatingAnnotation":[{"__symbolic":"method"}],"closeComments":[{"__symbolic":"method"}],"onPan":[{"__symbolic":"method"}],"getNextId":[{"__symbolic":"method"}]}},"ActiveAnnotationService":{"__symbolic":"class","members":{"__ctor__":[{"__symbolic":"constructor"}],"changeActive":[{"__symbolic":"method"}]}},"AnnotationService":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":4,"character":1},"arguments":[{"providedIn":"root"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/common/http","name":"HttpClient","line":9,"character":29},{"__symbolic":"reference","module":"@groupdocs.examples.angular/common-components","name":"ConfigService","line":9,"character":58}]}],"loadFiles":[{"__symbolic":"method"}],"loadFile":[{"__symbolic":"method"}],"upload":[{"__symbolic":"method"}],"loadPage":[{"__symbolic":"method"}],"getDownloadUrl":[{"__symbolic":"method"}],"annotate":[{"__symbolic":"method"}]},"statics":{"ngInjectableDef":{}}},"AnnotationConfigService":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":6,"character":1},"arguments":[{"providedIn":"root"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/common/http","name":"HttpClient","line":14,"character":29},{"__symbolic":"reference","module":"@groupdocs.examples.angular/common-components","name":"ConfigService","line":14,"character":58}]}],"load":[{"__symbolic":"method"}]},"statics":{"ngInjectableDef":{}}},"CommentAnnotationService":{"__symbolic":"class","members":{"__ctor__":[{"__symbolic":"constructor"}],"comment":[{"__symbolic":"method"}],"addComment":[{"__symbolic":"method"}]}},"RemoveAnnotationService":{"__symbolic":"class","members":{"__ctor__":[{"__symbolic":"constructor"}],"remove":[{"__symbolic":"method"}]}},"ɵa":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":17,"character":1},"arguments":[{"selector":"gd-annotation","template":"<div class=\"gd-annotation\"\n     (clickOutside)=\"hideMenu($event)\"\n     [exclude]=\"'gd-context-menu,.ui-resizable-handle,.gd-comments-panel'\"\n     [excludeBeforeClick]=\"true\"\n     [clickOutsideEvents]=\"'mousedown'\"\n     [clickOutsideEnabled]=\"active\"\n     [style.left.px]=\"leftTop.left\" [style.top.px]=\"leftTop.top\"\n     [style.width.px]=\"getWidth()\"\n     [style.height.px]=\"getHeight()\"\n     (click)=\"activation()\"\n     (touchstart)=\"activation()\">\n  <div [draggable]=\"true\" (dragover)=\"dragOver($event)\" (dragstart)=\"dragStart($event)\"\n       (drag)=\"dragging($event)\" (dragend)=\"dragging($event)\" (drop)=\"dragOver($event)\"\n       (panstart)=\"dragStart($event)\" (panmove)=\"dragging($event)\"\n       class=\"gd-annotation-wrapper\" [ngClass]=\"getAnnotationClass()\">\n    <gd-context-menu *ngIf=\"active\" [topPosition]=\"position.top\" [textMenu]=\"isText()\" [formatting]=\"getFormatting()\"\n                     (changeFormatting)=\"saveFormatting($event)\" (removeItem)=\"remove()\"\n                     [translation]=\"getMenuShift()\" [menuType]=\"getMenuType()\"\n                     (comment)=\"addComment()\"></gd-context-menu>\n    <div class=\"gd-text-strikeout-line\" *ngIf=\"isStrikeoutOrUnderline()\"></div>\n    <textarea wrap=\"off\" class=\"gd-text\" *ngIf=\"isTextReplacement() || isText()\" [value]=\"textValue\"\n              id=\"{{'text-' + id}}\" #text (keyup)=\"saveText(text.value)\"\n              (keydown)=\"textAreaHeight($event.key, text)\"\n              [style.color]=\"formatting?.color\"\n              [style.font-family]=\"formatting?.font\"\n              [style.font-size.px]=\"formatting?.fontSize\"\n              [style.width.px]=\"getWidth()\"\n              [style.height.px]=\"getHeight()\"></textarea>\n    <div *ngIf=\"isPoint()\" class=\"gd-point\">\n      <fa-icon class=\"icon\" [icon]=\"['fas','thumbtack']\" [size]=\"'lg'\"></fa-icon>\n    </div>\n  </div>\n\n  <gd-resizing [id]=\"id\" *ngIf=\"active && !isSVG() && !isPoint()\"\n               (offsetX)=\"width($event)\" (offsetY)=\"height($event)\"\n               (offsetTop)=\"top($event)\" (offsetLeft)=\"left($event)\"\n               [se]=\"true\" [sw]=\"true\" [ne]=\"true\" [nw]=\"true\"\n               [pageHeight]=\"pageHeight\" [pageWidth]=\"pageWidth\"></gd-resizing>\n</div>\n<svg *ngIf=\"isSVG()\" class=\"svg\" xmlns=\"http://www.w3.org/2000/svg\">\n  <polyline *ngIf=\"isPolyline()\" [attr.id]=\"id\" [attr.points]=\"pointsValue\" [ngStyle]=\"setStyles()\">\n  </polyline>\n  <path id=\"{{'gd-path-' + id}}\" *ngIf=\"isPath()\" [attr.d]=\"pathValue\" [attr.marker-end]=\"bottom()\"\n        [attr.marker-start]=\"head()\" [ngStyle]=\"setStyles()\">\n    <title *ngIf=\"isDistance()\" [ngStyle]=\"distanceTextOptions()\">{{ distanceValue }}</title>\n  </path>\n  <text *ngIf=\"isDistance()\" [ngStyle]=\"distanceTextOptions()\" [attr.x]=\"getTextX()\"\n        [attr.y]=\"0\">\n    <textPath [attr.href]=\"'#gd-path-' + id\">\n      {{ distanceValue }}\n    </textPath>\n  </text>\n</svg>\n","styles":[".gd-annotation{position:absolute!important;cursor:pointer;z-index:9}.gd-annotation .gd-annotation-wrapper-border{outline:#679ffa solid 1px;display:-webkit-box}.gd-annotation .gd-annotation-wrapper{height:inherit;z-index:9}.gd-annotation .gd-annotation-wrapper ::ng-deep .palette{width:0;height:37px}.gd-annotation .gd-annotation-wrapper .gd-text-strikeout-line{background-color:#e04e4e;height:2px;width:100%}.gd-annotation .gd-annotation-wrapper .gd-text{border:none;outline:0;margin:0;padding:0;overflow:hidden;background-color:transparent;min-width:1em;min-height:1em}.gd-annotation .gd-annotation-wrapper .gd-point{background-color:#7cbc46;width:41px;height:41px;display:-webkit-box;display:flex;-webkit-box-align:center;align-items:center;-webkit-box-pack:center;justify-content:center;color:#fff;border-radius:50%;-moz-border-radius:50%;-webkit-border-radius:50%;-khtml-border-radius:50%;box-shadow:0 1px 1px 1px #bbb;-moz-box-shadow:0 1px 1px 1px #bbb;-webkit-box-shadow:0 1px 1px 1px #bbb}.gd-annotation .gd-text-annotation{background-color:rgba(151,151,240,.51)}.gd-annotation .gd-text-strikeout-annotation{align-items:center;-webkit-box-align:center}.gd-annotation .gd-text-underline-annotation{align-items:end;-webkit-box-align:end}.gd-annotation .gd-text-redaction-annotation{background-color:#000}.gd-annotation .gd-text-replacement-annotation{background-color:#fff}.svg{z-index:1;position:absolute;top:0;left:0;width:100%;height:100%}.annotation-svg{position:absolute;cursor:pointer;z-index:2}"]}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"ActiveAnnotationService"},{"__symbolic":"reference","name":"RemoveAnnotationService"},{"__symbolic":"reference","name":"CommentAnnotationService"},{"__symbolic":"reference","module":"@groupdocs.examples.angular/common-components","name":"ZoomService","line":47,"character":36}]}],"ngOnInit":[{"__symbolic":"method"}],"ngAfterViewInit":[{"__symbolic":"method"}],"ngAfterViewChecked":[{"__symbolic":"method"}],"activation":[{"__symbolic":"method"}],"width":[{"__symbolic":"method"}],"height":[{"__symbolic":"method"}],"left":[{"__symbolic":"method"}],"top":[{"__symbolic":"method"}],"refreshLeftTop":[{"__symbolic":"method"}],"correctPosition":[{"__symbolic":"method"}],"dragOver":[{"__symbolic":"method"}],"dragStart":[{"__symbolic":"method"}],"initPoint":[{"__symbolic":"method"}],"dragging":[{"__symbolic":"method"}],"getAnnotationClass":[{"__symbolic":"method"}],"isStrikeoutOrUnderline":[{"__symbolic":"method"}],"isTextReplacement":[{"__symbolic":"method"}],"saveText":[{"__symbolic":"method"}],"draw":[{"__symbolic":"method"}],"setStyles":[{"__symbolic":"method"}],"isPolyline":[{"__symbolic":"method"}],"calcPositionAndDimension":[{"__symbolic":"method"}],"calcDimensions":[{"__symbolic":"method"}],"getHeight":[{"__symbolic":"method"}],"getWidth":[{"__symbolic":"method"}],"checkDragging":[{"__symbolic":"method"}],"isPoint":[{"__symbolic":"method"}],"isSVG":[{"__symbolic":"method"}],"isDistance":[{"__symbolic":"method"}],"distanceTextOptions":[{"__symbolic":"method"}],"isPath":[{"__symbolic":"method"}],"setEndPosition":[{"__symbolic":"method"}],"addPoint":[{"__symbolic":"method"}],"getDistance":[{"__symbolic":"method"}],"bottom":[{"__symbolic":"method"}],"head":[{"__symbolic":"method"}],"getTextX":[{"__symbolic":"method"}],"isText":[{"__symbolic":"method"}],"getFormatting":[{"__symbolic":"method"}],"saveFormatting":[{"__symbolic":"method"}],"remove":[{"__symbolic":"method"}],"getMenuShift":[{"__symbolic":"method"}],"getMenuType":[{"__symbolic":"method"}],"addComment":[{"__symbolic":"method"}],"setTextFocus":[{"__symbolic":"method"}],"textAreaHeight":[{"__symbolic":"method"}],"hideMenu":[{"__symbolic":"method"}],"getAnnotationData":[{"__symbolic":"method"}],"getSvgPath":[{"__symbolic":"method"}],"onPage":[{"__symbolic":"method"}]}},"ɵb":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":4,"character":1},"arguments":[{"selector":"gd-comment-panel","template":"<div class=\"gd-comments-panel\">\n  <div class=\"gd-comments-head\">\n    <fa-icon [icon]=\"['fas', 'plus']\" [class]=\"'ng-fa-icon icon'\" (click)=\"newComment()\"></fa-icon>\n    <span class=\"gd-comments-title\">Comments</span>\n    <fa-icon [icon]=\"['fas', 'times']\" [class]=\"'ng-fa-icon icon'\" (click)=\"closePanel()\"></fa-icon>\n  </div>\n  <div class=\"gd-comments-body\">\n    <div *ngIf=\"comments.length != 0\">\n      <div *ngFor=\"let comment of comments\">\n        <gd-comment [comment]=\"comment\"></gd-comment>\n      </div>\n    </div>\n    <gd-create-comment *ngIf=\"currentComment\" [comment]=\"currentComment\" (addComment)=\"addComment()\"\n                       (removeComment)=\"clearComment()\"></gd-create-comment>\n    <div class=\"gd-empty-comments-list\" *ngIf=\"comments.length == 0 && !currentComment\">\n      <fa-icon [icon]=\"['fas','comments']\" [class]=\"'ng-fa-icon icon'\"></fa-icon>\n      <span class=\"gd-empty-text\">No comments yet. Be the first one, <br/>\n        </span>\n      <span class=\"gd-empty-text gd-empty-bold-text\">add comment.</span>\n    </div>\n  </div>\n</div>\n","styles":[".gd-comments-panel{position:absolute;right:0;top:30px;overflow:auto!important;width:334px;display:-webkit-box;display:flex;height:100%;z-index:9;-webkit-box-orient:vertical;-webkit-box-direction:normal;flex-direction:column}.gd-comments-panel .gd-comments-head{height:60px;width:334px;display:-webkit-box;display:flex;background-color:#222e35;color:#959da5;-webkit-box-align:center;align-items:center}.gd-comments-panel .gd-comments-head .icon{-webkit-box-flex:0;flex:0 0 40px;margin-left:20px;cursor:pointer}.gd-comments-panel .gd-comments-head .gd-comments-title{-webkit-box-flex:1;flex:1;font-size:13px;font-weight:700}.gd-comments-panel .gd-comments-body{display:-webkit-box;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;flex-direction:column;-webkit-box-align:center;align-items:center;background-color:#f4f4f4;height:calc(100% - 90px)}.gd-comments-panel .gd-comments-body .gd-empty-comments-list{display:-webkit-box;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;flex-direction:column;-webkit-box-pack:center;justify-content:center;-webkit-box-align:center;align-items:center;color:#959da5;width:250px;height:250px;margin-top:40px}.gd-comments-panel .gd-comments-body .gd-empty-comments-list .icon{font-size:65px;margin-bottom:40px}.gd-comments-panel .gd-comments-body .gd-empty-comments-list .gd-empty-text{font-size:15px}.gd-comments-panel .gd-comments-body .gd-empty-comments-list .gd-empty-bold-text{font-weight:700}"]}]}],"members":{"comments":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":10,"character":3}}]}],"annotationId":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":11,"character":3}}]}],"closeComments":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":13,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"CommentAnnotationService"}]}],"ngOnInit":[{"__symbolic":"method"}],"closePanel":[{"__symbolic":"method"}],"newComment":[{"__symbolic":"method"}],"clearComment":[{"__symbolic":"method"}],"addComment":[{"__symbolic":"method"}]}},"ɵc":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":3,"character":1},"arguments":[{"selector":"gd-comment","template":"<div class=\"gd-comment\">\n  <div class=\"gd-comment-head\">\n    <fa-icon [icon]=\"['fas', 'user-circle']\" [class]=\"'ng-fa-icon icon'\"></fa-icon>\n    <span class=\"gd-name\">{{comment.userName}}</span>\n  </div>\n  <span class=\"gd-message\">{{comment.text}}</span>\n  <span class=\"gd-time\">{{getTime()}}</span>\n</div>\n","styles":[".gd-comment{display:-webkit-box;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;flex-direction:column;width:294px;font-size:13px;color:#3e4e5a;padding-top:20px}.gd-comment .gd-comment-head{display:-webkit-box;display:flex}.gd-comment .gd-comment-head .icon{-webkit-box-flex:0;flex:0 0 30px}.gd-comment .gd-comment-head .gd-name{font-weight:700}.gd-comment .gd-message{padding-top:5px}.gd-comment .gd-time{color:#acacac;padding-top:5px}"]}]}],"members":{"comment":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":10,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor"}],"ngOnInit":[{"__symbolic":"method"}],"getTime":[{"__symbolic":"method"}]}},"ɵd":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":6,"character":1},"arguments":[{"selector":"gd-create-comment","template":"<div class=\"gd-new-comment\">\n  <input type=\"text\" class=\"gd-name\" id=\"name\" [value]=\"comment.userName\" #name autofocus (keyup)=\"saveName(name.value)\" placeholder=\"Name\"/>\n  <textarea class=\"gd-text\" [value]=\"comment.text\" #text (keyup)=\"saveText(text.value)\" placeholder=\"Message\"></textarea>\n  <div class=\"gd-buttons\">\n    <gd-button (click)=\"clearComment()\" [iconOnly]=\"false\" class=\"gd-cancel-comment\">\n      Cancel\n    </gd-button>\n    <gd-button (click)=\"onAddComment()\" [icon]=\"'share'\" class=\"gd-add-comment\" [iconOnly]=\"false\">\n      Reply\n    </gd-button>\n  </div>\n</div>\n","styles":[".gd-new-comment{display:-webkit-box;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;flex-direction:column;-webkit-box-pack:center;justify-content:center;-webkit-box-align:center;align-items:center;padding-top:20px;width:294px;font-size:14px}.gd-new-comment .gd-buttons{display:-webkit-box;display:flex;margin-top:20px;width:294px;-webkit-box-pack:end;justify-content:flex-end}.gd-new-comment .gd-buttons .gd-add-comment{background-color:#4b566c!important;margin-left:10px;border:1px solid #707070}.gd-new-comment .gd-buttons .gd-add-comment ::ng-deep .button{color:#fff!important}.gd-new-comment .gd-buttons .gd-cancel-comment{background-color:transparent;border:1px solid #707070}.gd-new-comment .gd-buttons .gd-cancel-comment ::ng-deep .button{color:#acacac!important}.gd-new-comment .gd-name{width:100%;height:37px;border:1px solid #6e6e6e}.gd-new-comment .gd-text{width:100%;height:100px;border:1px solid #6e6e6e;margin-top:20px}"]}]}],"members":{"comment":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":12,"character":3}}]}],"addComment":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":14,"character":3}}]}],"removeComment":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":15,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor"}],"ngOnInit":[{"__symbolic":"method"}],"onAddComment":[{"__symbolic":"method"}],"clearComment":[{"__symbolic":"method"}],"saveText":[{"__symbolic":"method"}],"saveName":[{"__symbolic":"method"}]}}},"origins":{"initializeApp":"./lib/annotation.module","setupLoadingInterceptor":"./lib/annotation.module","AnnotationModule":"./lib/annotation.module","AnnotationAppComponent":"./lib/annotation-app.component","ActiveAnnotationService":"./lib/active-annotation.service","AnnotationService":"./lib/annotation.service","AnnotationConfigService":"./lib/annotation-config.service","CommentAnnotationService":"./lib/comment-annotation.service","RemoveAnnotationService":"./lib/remove-annotation.service","ɵa":"./lib/annotation/annotation.component","ɵb":"./lib/comment-panel/comment-panel.component","ɵc":"./lib/comment/comment.component","ɵd":"./lib/create-comment/create-comment.component"},"importAs":"@groupdocs.examples.angular/annotation"}