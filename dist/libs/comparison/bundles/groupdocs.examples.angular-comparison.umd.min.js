!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/platform-browser"),require("@angular/core"),require("@angular/common/http"),require("jquery"),require("@groupdocs.examples.angular/common-components"),require("rxjs"),require("@fortawesome/angular-fontawesome"),require("@fortawesome/fontawesome-svg-core"),require("@fortawesome/free-solid-svg-icons"),require("@fortawesome/free-regular-svg-icons"),require("ng-click-outside")):"function"==typeof define&&define.amd?define("@groupdocs.examples.angular/comparison",["exports","@angular/platform-browser","@angular/core","@angular/common/http","jquery","@groupdocs.examples.angular/common-components","rxjs","@fortawesome/angular-fontawesome","@fortawesome/fontawesome-svg-core","@fortawesome/free-solid-svg-icons","@fortawesome/free-regular-svg-icons","ng-click-outside"],t):t(((e=e||self).groupdocs=e.groupdocs||{},e.groupdocs.examples=e.groupdocs.examples||{},e.groupdocs.examples.angular=e.groupdocs.examples.angular||{},e.groupdocs.examples.angular.comparison={}),e.ng.platformBrowser,e.ng.core,e.ng.common.http,null,e.commonComponents,e.rxjs,e.angularFontawesome,e.fontawesomeSvgCore,e.freeSolidSvgIcons,e.freeRegularSvgIcons,e.ngClickOutside)}(this,function(e,t,n,i,o,a,r,s,c,l,d,p){"use strict";var g=function(e,t){return(g=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)};function f(e,t){function n(){this.constructor=e}g(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}var u=function(){},h=function(){function e(e,t){this._http=e,this._config=t,this._comparisonConfig=new r.BehaviorSubject(new u),this._updatedConfig=this._comparisonConfig.asObservable()}return Object.defineProperty(e.prototype,"updatedConfig",{get:function(){return this._updatedConfig},enumerable:!0,configurable:!0}),e.prototype.load=function(){var e=this;return new Promise(function(t,n){var i=e._config.getConfigEndpoint(a.Api.COMPARISON_APP);e._http.get(i,a.Api.httpOptionsJson).toPromise().then(function(n){var i=n;e._comparisonConfig.next(i),t()}).catch(function(e){n("Could not load comparison config: "+JSON.stringify(e))})})},e.decorators=[{type:n.Injectable,args:[{providedIn:"root"}]}],e.ctorParameters=function(){return[{type:i.HttpClient},{type:a.ConfigService}]},e.ngInjectableDef=n.ɵɵdefineInjectable({factory:function(){return new e(n.ɵɵinject(i.HttpClient),n.ɵɵinject(a.ConfigService))},token:e,providedIn:"root"}),e}(),m=function(){function e(e,t){this._http=e,this._config=t}return e.prototype.loadFiles=function(e){return this._http.post(this._config.getComparisonApiEndpoint()+a.Api.LOAD_FILE_TREE,{path:e},a.Api.httpOptionsJson)},e.prototype.getFormats=function(){return this._http.get(this._config.getComparisonApiEndpoint()+a.Api.LOAD_FORMATS,a.Api.httpOptionsJson)},e.prototype.loadFile=function(e){return this._http.post(this._config.getComparisonApiEndpoint()+a.Api.LOAD_DOCUMENT_DESCRIPTION,e,a.Api.httpOptionsJson)},e.prototype.upload=function(e,t,n){var i=new FormData;return i.append("file",e),i.append("rewrite",String(n)),t&&i.append("url",t),this._http.post(this._config.getComparisonApiEndpoint()+a.Api.UPLOAD_DOCUMENTS,i)},e.prototype.save=function(e){return this._http.post(this._config.getComparisonApiEndpoint()+a.Api.SAVE_FILE,e,a.Api.httpOptionsJson)},e.prototype.getDownloadUrl=function(e){return this._config.getComparisonApiEndpoint()+a.Api.DOWNLOAD_DOCUMENTS+"/?guid="+e.guid},e.prototype.loadPage=function(e,t){return this._http.post(this._config.getComparisonApiEndpoint()+a.Api.LOAD_DOCUMENT_PAGE,{guid:e.guid,password:e.password,page:t},a.Api.httpOptionsJson)},e.prototype.compare=function(e){return this._http.post(this._config.getComparisonApiEndpoint()+a.Api.COMPARE_FILES,{guids:e},a.Api.httpOptionsJson)},e.decorators=[{type:n.Injectable,args:[{providedIn:"root"}]}],e.ctorParameters=function(){return[{type:i.HttpClient},{type:a.ConfigService}]},e.ngInjectableDef=n.ɵɵdefineInjectable({factory:function(){return new e(n.ɵɵinject(i.HttpClient),n.ɵɵinject(a.ConfigService))},token:e,providedIn:"root"}),e}(),v=function(){function e(){}return e.FIRST="first",e.SECOND="second",e}(),b=function(){this.active=!1},y=function(){function e(e,t,n,i,o,r,s){var c=this;this._comparisonService=e,this.configService=t,this._modalService=o,this._tabActivatorService=r,this._elementRef=s,this.files=[],this.browseFilesModal=a.CommonModals.BrowseFiles,this.credentials=new Map,this.file=new Map,this.first=v.FIRST,this.second=v.SECOND,this.firstFileName=void 0,this.secondFileName=void 0,this.loadingFirstPanel=!1,this.loadingSecondPanel=!1,this.countPages=0,this.filesTab="files",this.resultTab="result",this.activeTab=this.filesTab,this.resultTabDisabled=!0,t.updatedConfig.subscribe(function(e){c.comparisonConfig=e}),i.checkPreload.subscribe(function(e){0!==c.comparisonConfig.preloadResultPageCount&&(c.checkPreload(c.first,e),c.checkPreload(c.second,e))}),n.uploadsChange.subscribe(function(e){var t=c.activePanel;if(c.setLoading(t,!0),e){var n=void 0;for(n=0;n<e.length;n++)c._comparisonService.upload(e.item(n),"",c.rewriteConfig).subscribe(function(e){c.getFile(e.guid,"",t),c.selectDir("")})}}),r.activeTabChange.subscribe(function(e){c.activeTab=e})}return e.prototype.setLoading=function(e,t){e===this.first?this.loadingFirstPanel=t:this.loadingSecondPanel=t},Object.defineProperty(e.prototype,"rewriteConfig",{get:function(){return!this.comparisonConfig||this.comparisonConfig.rewrite},enumerable:!0,configurable:!0}),e.prototype.selectDir=function(e){var t=this;this._comparisonService.loadFiles(e).subscribe(function(e){var n;t.credentials.get(t.first)?n=t.credentials.get(t.first).guid.split(".").pop():t.credentials.get(t.second)&&(n=t.credentials.get(t.second).guid.split(".").pop()),n&&(e=e.filter(function(e){return e.directory||e.guid.split(".").pop()===n})),t.files=e||[]})},e.prototype.selectFile=function(e,t,n,i){this.setLoading(i,!0),this.getFile(e,t,i),this.selectDir(""),this._modalService.close(n),this.clearData(i)},e.prototype.getFile=function(e,t,n){var i=this,o={guid:e,password:t};this.credentials.set(n,o),this._comparisonService.loadFile(o).subscribe(function(e){if(i.file.set(n,e),e){var t=i.comparisonConfig.preloadResultPageCount;i.countPages=e.pages?e.pages.length:0,t>0&&i.preloadPages(n,1,t>i.countPages?i.countPages:t)}i.updateFileNames(),i.setLoading(n,!1)})},e.prototype.clearFile=function(e){this.clearData(e),this.credentials.delete(e),this.result=null,this.resultTabDisabled=!0,this._tabActivatorService.changeActiveTab(this.filesTab)},e.prototype.clearData=function(e){this.file&&this.file.size&&(this.file.delete(e),e===this.first?this.firstFileName=void 0:this.secondFileName=void 0)},e.prototype.preloadPages=function(e,t,n){for(var i=this,o=function(t){a._comparisonService.loadPage(a.credentials.get(e),t).subscribe(function(n){i.file.get(e).pages[t-1]=n})},a=this,r=t;r<=n;r++)o(r)},e.prototype.upload=function(e){var t=this,n=this.activePanel;this._comparisonService.upload(null,e,this.rewriteConfig).subscribe(function(e){t.getFile(e.guid,"",n),t.selectDir("")})},e.prototype.updateFileNames=function(){this.firstFileName=this.getFirstFileName(),this.secondFileName=this.getSecondFileName()},e.prototype.getSecondFileName=function(){var e=this.credentials?this.credentials.get(this.second):void 0;return e?e.guid.replace(/^.*[\\\/]/,""):""},e.prototype.getFirstFileName=function(){var e=this.credentials?this.credentials.get(this.first):void 0;return e?e.guid.replace(/^.*[\\\/]/,""):""},e.prototype.checkPreload=function(e,t){if(this.file.get(e))for(var n=t;n<t+2;n++)n>0&&n<=this.countPages&&!this.file.get(e).pages[n-1].data&&this.preloadPages(e,n,n)},e.prototype.compare=function(){var e=this;if(2===this.credentials.size){this.resultTabDisabled=!1;var t=[];t.push(this.credentials.get(this.first)),t.push(this.credentials.get(this.second)),this._comparisonService.compare(t).subscribe(function(t){e.result=t,e.result.changes.forEach(function(t){t.id=e.generateRandomInteger();var n=t.pageInfo.id;e.result.pages[n].changes||(e.result.pages[n].changes=[]),e.result.pages[n].changes.push(t),t.normalized={x:100*t.box.x/t.pageInfo.width,y:100*t.box.y/t.pageInfo.height,width:100*t.box.width/t.pageInfo.width,height:100*t.box.height/t.pageInfo.height}})},function(t){e.resultTabDisabled=!0,e._tabActivatorService.changeActiveTab(e.filesTab)}),this._tabActivatorService.changeActiveTab(this.resultTab)}},e.prototype.generateRandomInteger=function(){function e(e){var t=(Math.random().toString(16)+"000000000").substr(2,8);return e?"-"+t.substr(0,4)+"-"+t.substr(4,4):t}return e(null)+e(!0)+e(!0)+e(null)},e.prototype.download=function(){if(this.result){var e={guid:this.result.guid,password:""};window.location.assign(this._comparisonService.getDownloadUrl(e))}},e.prototype.hideSidePanel=function(e){this.activeTab=e?this.filesTab:this.resultTab,this._tabActivatorService.changeActiveTab(this.filesTab)},e.decorators=[{type:n.Component,args:[{selector:"gd-comparison",template:'\x3c!--<gd-loading-mask></gd-loading-mask>--\x3e\n<div class="wrapper">\n  <div class="row">\n    <div class="column">\n      <div class="top-panel">\n        <gd-logo [logo]="\'comparison\'" icon="copy"></gd-logo>\n        <gd-top-toolbar class="toolbar-panel">\n          <gd-button [icon]="\'play\'" [tooltip]="\'Compare\'" [disabled]="!file.get(first) || !file.get(second)"\n                     (click)="compare()"></gd-button>\n          <gd-button [icon]="\'download\'" [tooltip]="\'Download\'" [disabled]="!result" (click)="download()"></gd-button>\n          <div class="tabs-wrapper">\n            <div class="tabs">\n              <gd-tabs>\n                <gd-tab [id]="filesTab" tabTitle="Documents" [icon]="\'copy\'" [active]="true" [content]="false">\n                </gd-tab>\n                <gd-tab [id]="resultTab" tabTitle="Result" [icon]="\'poll\'" [disabled]="resultTabDisabled" [content]="false">\n                </gd-tab>\n              </gd-tabs>\n            </div>\n          </div>\n        </gd-top-toolbar>\n      </div>\n      <div class="files-panel" *ngIf="activeTab === filesTab">\n        <div class="upload-compare-file">\n          <gd-add-file-panel class="compare-file"\n                             [fileName]="firstFileName"\n                             [panel]="first"\n                             (active)="activePanel = $event"\n                             (urlForUpload)="upload($event)"\n                             (cleanPanel)="clearFile(first)">\n          </gd-add-file-panel>\n          <gd-upload-file-panel\n                                [panel]="first"\n                                (active)="activePanel = $event"\n                                *ngIf="!firstFileName && !loadingFirstPanel">\n          </gd-upload-file-panel>\n          <div *ngIf="loadingFirstPanel" class="loader">\n            <fa-icon [icon]="[\'fas\',\'circle-notch\']" [spin]="true"></fa-icon> &nbsp;\n            <span>Loading... Please wait.</span>\n          </div>\n          <gd-document class="gd-document"\n                       *ngIf="file.get(first)"\n                       [file]="file.get(first)"\n                       [mode]="false"\n                       [preloadPageCount]="comparisonConfig?.preloadResultPageCount" gdRenderPrint\n                       [htmlMode]="false">\n          </gd-document>\n        </div>\n        <div class="upload-compare-file">\n          <gd-add-file-panel class="compare-file"\n                             [fileName]="secondFileName"\n                             [panel]="second"\n                             (active)="activePanel = $event"\n                             (urlForUpload)="upload($event)"\n                             (cleanPanel)="clearFile(second)">\n          </gd-add-file-panel>\n          <gd-upload-file-panel [panel]="second"\n                                (active)="activePanel = $event"\n                                *ngIf="!secondFileName && !loadingSecondPanel">\n          </gd-upload-file-panel>\n          <div *ngIf="loadingSecondPanel" class="loader">\n            <fa-icon [icon]="[\'fas\',\'circle-notch\']" [spin]="true"></fa-icon> &nbsp;\n            <span>Loading... Please wait.</span>\n          </div>\n          <gd-document class="gd-document"\n                       *ngIf="file.get(second)"\n                       [file]="file.get(second)"\n                       [mode]="false"\n                       [preloadPageCount]="comparisonConfig?.preloadResultPageCount" gdRenderPrint\n                       [htmlMode]="false">\n          </gd-document>\n        </div>\n      </div>\n      <div class="result-panel" *ngIf="activeTab === resultTab">\n        <div  class="loader" *ngIf="!result">\n          <fa-icon [icon]="[\'fas\',\'circle-notch\']" [spin]="true"></fa-icon> &nbsp;\n          <span>Loading... Please wait.</span>\n        </div>\n        <gd-result-document\n          class="gd-document"\n          *ngIf="result"\n          [file]="result"\n          [mode]="false"\n          [preloadPageCount]="comparisonConfig?.preloadResultPageCount"\n          gdRenderPrint\n          [htmlMode]="false">\n        </gd-result-document>\n      </div>\n    </div>\n    <gd-side-panel (hideSidePanel)="hideSidePanel($event)"\n                   *ngIf="result && activeTab === resultTab"\n                   [title]="\'Differences\'"\n                   [icon]="\'info-circle\'">\n      <gd-differences\n        [changes]="result.changes">\n      </gd-differences>\n    </gd-side-panel>\n  </div>\n  <gd-browse-files-modal (urlForUpload)="upload($event)"\n                         [files]="files"\n                         (selectedDirectory)="selectDir($event)"\n                         (selectedFileGuid)="selectFile($event, null, browseFilesModal, activePanel)">\n  </gd-browse-files-modal>\n  <gd-error-modal></gd-error-modal>\n</div>\n',styles:["@import url(https://fonts.googleapis.com/css?family=Open+Sans:400,400i,700,700i&display=swap);:host *{font-family:'Open Sans',Arial,Helvetica,sans-serif}.wrapper{align-items:stretch;height:100%;width:100%;position:fixed;top:0;bottom:0;left:0;right:0}.loader{display:flex;flex-direction:column;justify-content:center;align-items:center;height:100%}.upload-compare-file{height:100%;width:50%;border-right:1px solid #ccc;display:flex;align-content:center;flex-direction:column;text-align:center;flex-grow:0}.open-file-panel{display:flex;width:100%}.files-panel{background-color:#e7e7e7;display:flex;flex-direction:row;width:100%;height:100%}.result-panel{background-color:#e7e7e7;width:100%;height:100%;display:flex;align-content:center;flex-direction:column;justify-content:center;text-align:center}.doc-panel{display:flex;height:inherit}.gd-document{width:100%;height:100%}.top-panel{display:flex;align-items:center;width:100%}.toolbar-panel{background-color:#3e4e5a;width:100%}.row{display:flex;height:inherit}.column{width:100%}.tabs-wrapper{display:flex;justify-self:flex-end;align-self:flex-end;width:100%;justify-content:flex-end}.tabs{display:flex;margin-right:30px;align-items:flex-end;justify-content:flex-end}@media (max-width:480px){.files-panel{flex-direction:column}.files-panel .upload-compare-file{width:100%;border-bottom:1px solid #ccc}/deep/ .gd-side-panel-wrapper{height:50%!important;top:inherit!important;bottom:0!important}}"]}]}],e.ctorParameters=function(){return[{type:m},{type:h},{type:a.UploadFilesService},{type:a.PagePreloadService},{type:a.ModalService},{type:a.TabActivatorService},{type:n.ElementRef}]},e}(),w=function(){function e(){}return e.Empty="empty",e.Opened="opened",e}(),x=function(){function e(e,t){this._modalService=e,this._excMessageService=t,this.active=new n.EventEmitter,this.urlForUpload=new n.EventEmitter,this.cleanPanel=new n.EventEmitter,this.state=w.Empty,this.uploadDisabled=!0}return e.prototype.ngOnInit=function(){},e.prototype.getFormatIcon=function(){return a.FileUtil.find(this.fileName,!1).icon},e.prototype.openModal=function(){this.active.emit(this.panel),this._modalService.open(a.CommonModals.BrowseFiles)},e.prototype.isEmpty=function(){return this.state===w.Empty},e.prototype.cleanFile=function(){this.active.emit(this.panel),this.cleanPanel.emit(!0)},e.prototype.uploadUrl=function(e){this.uploadDisabled||(e&&(e.startsWith("http")||e.startsWith("file")||e.startsWith("ftp"))?(this.active.emit(this.panel),this.urlForUpload.emit(e)):(this._modalService.open(a.CommonModals.ErrorMessage),this._excMessageService.changeMessage("Wrong url")))},e.prototype.checkDisabled=function(e){this.uploadDisabled=!e||0===e.length},e.prototype.ngOnChanges=function(e){this.fileName?this.state=w.Opened:this.state=w.Empty},e.decorators=[{type:n.Component,args:[{selector:"gd-add-file-panel",template:'<div class="wrapper">\n  <div class="upload-wrapper" *ngIf="isEmpty()">\n    <gd-button [icon]="\'arrow-right\'" [tooltip]="\'Upload file\'" (click)="uploadUrl(url.value)" [disabled]="uploadDisabled" ></gd-button>\n    <input class="url-input" #url (keyup)="checkDisabled(url.value)" (keyup.enter)="uploadUrl(url.value)" placeholder="http://">\n  </div>\n  <fa-icon *ngIf="!isEmpty()" [icon]="[\'fas\',getFormatIcon()]" [class]="\'ng-fa-icon fa-\' + getFormatIcon()"></fa-icon>\n  <span *ngIf="!isEmpty()" class="compare-file-name">{{fileName}}</span>\n  <gd-button [icon]="\'folder-open\'" [tooltip]="\'Open file\'" (click)="openModal()" *ngIf="isEmpty()"></gd-button>\n  <gd-button [icon]="\'times\'" [tooltip]="\'Close file\'" (click)="cleanFile()" *ngIf="!isEmpty()"></gd-button>\n</div>\n',styles:[":host{border-bottom:1px solid #ccc}.wrapper{height:37px;background-color:#fff;display:flex}.upload-wrapper{display:flex;width:100%}.url-input{border:0;height:37px;width:100%;padding-left:5px;margin:0;padding-top:0;padding-bottom:0;outline:0}.compare-file-name{color:#959da5;margin:8px;width:100%;text-align:left}.ng-fa-icon{color:#959da5;margin:9px 15px 0 13px;font-size:14px}.compare-file{width:100%;border-right:2px solid #ddd}"]}]}],e.ctorParameters=function(){return[{type:a.ModalService},{type:a.ExceptionMessageService}]},e.propDecorators={panel:[{type:n.Input}],active:[{type:n.Output}],urlForUpload:[{type:n.Output}],cleanPanel:[{type:n.Output}],fileName:[{type:n.Input}]},e}(),C=function(){function e(e,t){this._uploadService=e,this._modalService=t,this.active=new n.EventEmitter}return e.prototype.ngOnInit=function(){},e.prototype.openModal=function(){this.active.emit(this.panel),this._modalService.open(a.CommonModals.BrowseFiles)},e.prototype.dropped=function(e){e&&this.active.emit(this.panel)},e.decorators=[{type:n.Component,args:[{selector:"gd-upload-file-panel",template:'<div class="gd-drag-n-drop-wrap" id="gd-dropZone" gdDnd (dropped)="dropped($event)">\n  <div class="gd-drag-n-drop-icon">\n    <fa-icon [icon]="[\'far\',\'folder-open\']" size="5x" (click)="openModal()"></fa-icon>\n  </div>\n  <h2>Drop your document here or click to select a file</h2>\n</div>\n',styles:[".gd-drag-n-drop-wrap{height:100%;width:100%;background-color:#e7e7e7;text-align:center;cursor:default;left:1px;display:flex;align-content:center;flex-direction:column;justify-content:center;opacity:.9;z-index:1}.active{background-color:#bababa}.gd-drag-n-drop-wrap h2{color:#959da5;font-size:15px;margin-top:38px}.gd-drag-n-drop-icon{color:#959da5;cursor:pointer}:host{display:flex;justify-content:center;align-items:center;flex-direction:column;align-content:center;height:100%;border-bottom:1px solid #ccc}"]}]}],e.ctorParameters=function(){return[{type:a.UploadFilesService},{type:a.ModalService}]},e.propDecorators={panel:[{type:n.Input}],active:[{type:n.Output}]},e}(),S=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return f(t,e),t}(a.PageModel),P=function(){},I=function(){},_=function(){},F=function(){},A=function(){},O=function(){function e(){this._activeChange=new r.BehaviorSubject(null),this.activeChange=this._activeChange.asObservable()}return e.prototype.setActiveChange=function(e){this._activeChange.next(e)},e.decorators=[{type:n.Injectable,args:[{providedIn:"root"}]}],e.ctorParameters=function(){return[]},e.ngInjectableDef=n.ɵɵdefineInjectable({factory:function(){return new e},token:e,providedIn:"root"}),e}(),D=function(){function e(e){this.changesService=e}return e.prototype.ngOnInit=function(){var e=this;this.changesService.activeChange.subscribe(function(t){return e.active=e.change.id===t})},e.prototype.getRgbaColor=function(e){return"rgba("+e.red+","+e.green+","+e.blue+","+e.alpha+")"},e.decorators=[{type:n.Component,args:[{selector:"gd-comparison-difference",template:'<div  class="gd-difference" [ngClass]="{\'active\': active}">\n  <div [ngSwitch]="change.type" class="gd-difference-title-wrapper">\n    <ng-container *ngSwitchCase=\'1\'>\n      <fa-icon class="fas fa-pencil-alt" [icon]="[\'fas\',\'pencil-alt\']"></fa-icon>\n      <div class="gd-difference-body">\n        <div class="gd-difference-title">Text edited</div>\n        <div class="gd-differentce-comment">{{change.text}}</div>\n      </div>\n    </ng-container>\n    <ng-container *ngSwitchCase=\'2\'>\n      <fa-icon class="fas fa-arrow-right" [icon]="[\'fas\',\'arrow-right\']"></fa-icon>\n      <div class="gd-difference-body">\n        <div class="gd-difference-title">Text added</div>\n        <div class="gd-differentce-comment">{{change.text}}</div>\n      </div>\n    </ng-container>\n    <ng-container *ngSwitchCase=\'3\'>\n      <fa-icon class="fas fa-times" [icon]="[\'fas\',\'trash\']"></fa-icon>\n      <div class="gd-difference-body">\n        <div class="gd-difference-title">Text deleted</div>\n        <div class="gd-differentce-comment">{{change.text}}</div>\n      </div>\n    </ng-container>\n    <ng-container *ngSwitchCase=\'4\'>\n      <fa-icon class="fas fa-arrow-right" [icon]="[\'fas\',\'arrow-right\']"></fa-icon>\n      <div class="gd-difference-body">\n        <div class="gd-difference-title">Text added</div>\n        <div class="gd-differentce-comment">{{change.text}}</div>\n      </div>\n    </ng-container>\n    <ng-container *ngSwitchCase=\'6\'>\n      <fa-icon class="fas fa-pencil-alt" [icon]="[\'fas\',\'pencil-alt\']"></fa-icon>\n      <div class="gd-difference-body">\n        <div class="gd-difference-title">Style changed</div>\n        <div class="gd-differentce-comment">\n          <ng-container *ngFor="let style of change.styleChanges" [ngSwitch]="style.changedProperty">\n            <div *ngSwitchCase="\'HighlightColor\'">\n              <span class="color" [style.backgroundColor]="getRgbaColor(style.oldValue)"></span>\n              &rarr;\n              <span class="color" [style.backgroundColor]="getRgbaColor(style.newValue)"></span>\n              <span class="property">Highlight Color</span>\n            </div>\n            <div *ngSwitchCase="\'Color\'">\n              <span class="color" [style.backgroundColor]="getRgbaColor(style.oldValue)"></span>\n              &rarr;\n              <span class="color" [style.backgroundColor]="getRgbaColor(style.newValue)"></span>\n              <span class="property">Color</span>\n            </div>\n            <div *ngSwitchCase="\'Size\'">\n              {{style.oldValue}} &rarr; {{style.newValue}}\n              <span class="property">Font size</span>\n            </div>\n            <div *ngSwitchCase="\'Bold\'">\n              <span [style.fontWeight]="style.oldValue ? \'bold\' : \'\'">{{change.text}}</span> &rarr; <span [style.fontWeight]="style.newValue ? \'bold\' : \'\'">{{change.text}}</span>\n              <span class="property">Bold</span>\n            </div>\n            <div *ngSwitchCase="\'Italic\'">\n              <span [style.fontStyle]="style.oldValue ? \'italic\' : \'\'">{{change.text}}</span> &rarr; <span [style.fontStyle]="style.newValue ? \'italic\' : \'\'">{{change.text}}</span>\n              <span class="property">Italic</span>\n            </div>\n            <div *ngSwitchCase="\'cS\'">\n              <span [style.textDecoration]="style.oldValue === \'SINGLE\' ? \'underline\' : \'\'">{{change.text}}</span> &rarr; <span [style.textDecoration]="style.newValue === \'SINGLE\' ? \'underline\' : \'\'">{{change.text}}</span>\n              <span class="property">Underline</span>\n            </div>\n          </ng-container>\n        </div>\n      </div>\n    </ng-container>\n    <div class="gd-difference-page">Page {{change.pageInfo.id + 1}}</div>\n  </div>\n</div>\n',styles:[".gd-difference{flex-flow:row wrap;border-bottom:1px solid #eee;cursor:pointer}.gd-difference.active{background-color:#f2f2f2}.gd-difference:hover{background-color:#e5e5e5}.gd-difference .gd-difference-title-wrapper{display:flex;flex-direction:row;align-content:stretch;padding:15px 15px 20px 20px}.gd-difference .gd-difference-title-wrapper fa-icon{font-size:14px}.gd-difference .gd-difference-title-wrapper .fa-arrow-right{color:#16b901}.gd-difference .gd-difference-title-wrapper .fa-pencil-alt{color:#ced600}.gd-difference .gd-difference-title-wrapper .fa-times{color:#b96401}.gd-difference .gd-difference-title-wrapper .gd-difference-body{width:100%;display:flex;flex-direction:column;padding-left:15px}.gd-difference .gd-difference-title-wrapper .gd-difference-body .gd-difference-title{color:#222e35;font-size:13px;font-weight:700}.gd-difference .gd-difference-title-wrapper .gd-difference-body .gd-differentce-comment{color:#959da5;font-size:13px;padding-top:10px;overflow:hidden;text-overflow:ellipsis}.gd-difference .gd-difference-title-wrapper .gd-difference-body .gd-differentce-comment .color{vertical-align:text-bottom;width:14px;height:14px;display:inline-block;border:1px solid #ccc;border-radius:100%}.gd-difference .gd-difference-title-wrapper .gd-difference-body .gd-differentce-comment .property{padding-left:1em}.gd-difference .gd-difference-title-wrapper .gd-difference-page{color:rgba(149,157,165,.48);font-size:11px;white-space:nowrap}"]}]}],e.ctorParameters=function(){return[{type:O}]},e.propDecorators={change:[{type:n.Input}]},e}(),E=function(){function e(e){this.changesService=e}return e.prototype.ngOnInit=function(){var e=this;this.changesService.activeChange.subscribe(function(t){return e.active=e.change.id===t})},e.prototype.close=function(e){this.changesService.setActiveChange(null)},e.prototype.highlight=function(e){this.changesService.setActiveChange(e)},e.decorators=[{type:n.Component,args:[{selector:"gd-difference-highlight",template:'<div\n  class="gd-difference-{{change.type}} highlight-difference"\n  (clickOutside)="close($event)"\n  [clickOutsideEnabled]="active"\n  (click)="highlight(change.id)"\n  [ngClass]="{\'active\': active}"\n  [ngStyle]="{\n    width: change.normalized.width + \'%\',\n    height: change.normalized.height + \'%\',\n    left: change.normalized.x + \'%\',\n    top: change.normalized.y + \'%\'\n  }"\n  data-id="{{change.id}}">\n\n</div>\n\n',styles:[".highlight-difference{position:absolute;cursor:pointer;z-index:1}.gd-difference.active,.highlight-difference.active{box-shadow:0 0 0 9999px rgba(0,0,0,.5);z-index:999}.gd-difference-1{background-color:rgba(0,122,255,.4)}.gd-difference-2,.gd-difference-4{background-color:rgba(46,237,0,.4)}.gd-difference-3{background-color:rgba(237,0,0,.4)}.gd-difference-6{background-color:rgba(215,224,0,.4)}"]}]}],e.ctorParameters=function(){return[{type:O}]},e.propDecorators={change:[{type:n.Input}],active:[{type:n.Input}]},e}(),T=function(e){function t(t,n,i){var o=e.call(this,t,n)||this;return o.changesService=i,o}return f(t,e),t.prototype.close=function(){this.changesService.setActiveChange(null)},t.prototype.ngOnInit=function(){},t.decorators=[{type:n.Component,args:[{selector:"gd-result-document",template:'<div class="wait" *ngIf="wait">Please wait...</div>\n<div id="document" class="document" gdScrollable [onRefresh]="refreshView">\n  <div class="panzoom">\n    <div [ngClass]="(ifFirefox() && zoom > 110) ? \'page gd-zoomed\' : \'page\'" *ngFor="let page of file?.pages"\n         [style.width.pt]="ifPdf() ? page.width : \'unset\'"\n         [style.height.pt]="(ifPdf() || ifImage()) && ifChromeOrFirefox() ? page.height : \'unset\'" gdRotation\n         [angle]="page.angle" [isHtmlMode]="mode" [width]="page.width" [height]="page.height">\n      <gd-page [number]="page.number" [data]="page.data" [isHtml]="mode" [angle]="page.angle"\n               [width]="page.width" [height]="page.height" [editable]="page.editable"></gd-page>\n      <div class="highlights">\n        <gd-difference-highlight\n          *ngFor="let change of page?.changes"\n          [change]="change">\n        </gd-difference-highlight>\n      </div>\n    </div>\n  </div>\n</div>\n',providers:[a.ZoomService],viewProviders:[a.ZoomDirective],styles:[".document{background-color:#e7e7e7;width:100%;height:100%;overflow-x:hidden;overflow-y:auto!important;transition:.4s;padding:0;margin:0;position:relative}.page{position:relative;display:inline-block;background-color:#fff;margin:20px;box-shadow:0 4px 12px -4px rgba(0,0,0,.38);transition:.3s}.wait{position:absolute;top:55px;left:Calc(30%)}.panzoom{transform:none;-webkit-backface-visibility:hidden;backface-visibility:hidden;transform-origin:50% 50% 0;display:flex;justify-content:center;flex-wrap:wrap}.gd-zoomed{margin:10px 98px}.highlights{position:absolute;top:0;left:0;bottom:0;right:0}@media (max-width:1025px){.document{overflow-x:auto!important}.panzoom{flex-direction:column}.page{min-width:unset!important;min-height:unset!important;margin:5px 0}}"]}]}],t.ctorParameters=function(){return[{type:n.ElementRef},{type:a.ZoomService},{type:O}]},t}(a.DocumentComponent),k=function(){function e(e,t){this.changes=[],this.changesService=e,this.navigateService=t}return e.prototype.ngOnInit=function(){},e.prototype.highlightDifference=function(e,t,n){n.stopPropagation(),this.changesService.setActiveChange(e),this.navigateService.navigateTo(t+1)},e.decorators=[{type:n.Component,args:[{selector:"gd-differences",template:'<div *ngFor="let change of changes; let i = index" data-id="{{i}}" (click)="highlightDifference(change.id,change.pageInfo.id,$event)">\n  <gd-comparison-difference [change]="change"></gd-comparison-difference>\n</div>\n',styles:[""]}]}],e.ctorParameters=function(){return[{type:O},{type:a.NavigateService}]},e.propDecorators={changes:[{type:n.Input}]},e}();function M(e){return function(){return e.load()}}function N(e){return new a.LoadingMaskInterceptorService(e)}var R=function(){function e(){c.library.add(l.fas,d.far)}return e.forRoot=function(t){return a.Api.DEFAULT_API_ENDPOINT=t,{ngModule:e}},e.decorators=[{type:n.NgModule,args:[{declarations:[y,x,C,D,E,T,k],imports:[t.BrowserModule,a.CommonComponentsModule,i.HttpClientModule,s.FontAwesomeModule,p.ClickOutsideModule],exports:[y,a.CommonComponentsModule,T,k],providers:[m,a.ConfigService,O,h,{provide:n.APP_INITIALIZER,useFactory:M,deps:[h],multi:!0},{provide:i.HTTP_INTERCEPTORS,useClass:a.ErrorInterceptorService,multi:!0},a.LoadingMaskService,{provide:i.HTTP_INTERCEPTORS,useFactory:N,multi:!0,deps:[a.LoadingMaskService]}]}]}],e.ctorParameters=function(){return[]},e}();e.ChangeInfo=I,e.CompareResult=P,e.ComparedPageModel=S,e.ComparisonAppComponent=y,e.ComparisonConfig=u,e.ComparisonConfigService=h,e.ComparisonModule=R,e.ComparisonService=m,e.Files=v,e.Highlight=b,e.PageInfo=A,e.Rectangle=F,e.StyleChange=_,e.initializeApp=M,e.setupLoadingInterceptor=N,e.ɵa=x,e.ɵb=C,e.ɵc=D,e.ɵd=O,e.ɵe=E,e.ɵf=T,e.ɵg=k,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=groupdocs.examples.angular-comparison.umd.min.js.map